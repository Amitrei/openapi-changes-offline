{
  "dateGenerated": "Sat, 14 Jan 2023 12:23:46 -2300",
  "reportItems": [
    {
      "originalSpec": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Swagger Petstore - OpenAPI 3.0, With More Jazz\",\n    \"description\": \"Jazz in the morning, Jazz in the evening.\",\n    \"termsOfService\": \"http://jazzyjazzjazzy.com\",\n    \"contact\": {\n      \"email\": \"jazz@swagger.io\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.11\"\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Swagger\",\n    \"url\": \"http://swagger.io\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/v3\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"pet\",\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"store\",\n      \"description\": \"Access to Petstore orders\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about user\"\n    },\n    {\n      \"name\": \"jazz\",\n      \"description\": \"Everyone loves jazz!\"\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Update an existing pet, but with Jazz\",\n        \"description\": \"Update an existing pet by Id\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"description\": \"Update an existent pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          },\n          \"418\": {\n            \"description\": \"Teapot Jazz\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"patch\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"description\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"description\": \"Create a new pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\",\n              \"jammy:jelly\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"available\",\n              \"enum\": [\n                \"available\",\n                \"pending\",\n                \"sold\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"int\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          },\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"description\": \"\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"description\": \"\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"additionalMetadata\",\n            \"in\": \"query\",\n            \"description\": \"Additional Metadata\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/octet-stream\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"description\": \"Place a new order in the store\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values will generate exceptions.\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of order that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c 1000. Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"description\": \"Created user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"description\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs user into the system, without jazz\",\n        \"description\": \"\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation, even if not jazzy\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out current logged in user session\",\n        \"description\": \"\",\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get user by user name\",\n        \"description\": \"\",\n        \"operationId\": \"getUserByNameAndNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Update an existent user in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"jazz\"\n        ],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUserButNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Order\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 198772\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"example\": 7\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"example\": \"approved\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\",\n              \"burgers\"\n            ]\n          },\n          \"complete\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"order\"\n        }\n      },\n      \"Customer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 100000\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"burgers\"\n          },\n          \"address\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"addresses\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Address\"\n            }\n          }\n        },\n        \"xml\": {\n          \"name\": \"customer\"\n        }\n      },\n      \"Address\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"street\": {\n            \"type\": \"string\",\n            \"example\": \"437 Lytton\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"example\": \"Palo Alto\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"example\": \"CA\"\n          },\n          \"zip\": {\n            \"type\": \"string\",\n            \"example\": \"94301\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"address\"\n        }\n      },\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Dogs\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"category\"\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"theUser\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"example\": \"John\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"example\": \"James\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"john@jazzclubinjazztown.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"example\": \"JAZZCLUB\"\n          },\n          \"phone\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        },\n        \"xml\": {\n          \"name\": \"user\"\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"tag\"\n        }\n      },\n      \"Pet\": {\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"jazz\": {\n            \"type\": \"string\",\n            \"example\": \"too much jazz! this is too much\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\",\n              \"xml\": {\n                \"name\": \"photoUrl\"\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\",\n              \"jazzedOut\"\n            ]\n          }\n        },\n        \"xml\": {\n          \"name\": \"pet\"\n        }\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"##default\"\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"Pet\": {\n        \"description\": \"Pet object that needs to be added to the store\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        }\n      },\n      \"UserArray\": {\n        \"description\": \"List of user object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"petstore_auth\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"https://petstore3.swagger.io/oauth/authorize\",\n            \"scopes\": {\n              \"write:pets\": \"modify pets in your account\",\n              \"read:pets\": \"read your pets\",\n              \"jazz:jazzy\": \"enjoy more jazz.\"\n            }\n          }\n        }\n      },\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}",
      "modifiedSpec": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Swagger Petstore - OpenAPI 3.0, With More Jazz\",\n    \"description\": \"Jazz in the morning, Jazz in the evening.\",\n    \"termsOfService\": \"http://jazzyjazzjazzy.com\",\n    \"contact\": {\n      \"email\": \"jazz@swagger.io\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.11\"\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Swagger\",\n    \"url\": \"http://swagger.io\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/v3\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"pet\",\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"store\",\n      \"description\": \"Access to Petstore orders\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about user\"\n    },\n    {\n      \"name\": \"jazz\",\n      \"description\": \"Everyone loves jazz!\"\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Update an existing pet, but with Jazz\",\n        \"description\": \"Update an existing pet by Id\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"description\": \"Update an existent pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          },\n          \"418\": {\n            \"description\": \"Teapot Jazz\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"patch\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"description\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"description\": \"Create a new pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\",\n              \"jammy:jelly\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"available\",\n              \"enum\": [\n                \"available\",\n                \"pending\",\n                \"sold\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"int\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a single pet, and hopefully no more jazz.\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          },\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\",\n              \"eat:tacos\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"description\": \"\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"description\": \"adding in a description\",\n        \"operationId\": \"uploadFileAndDoADance\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"additionalMetadata\",\n            \"in\": \"query\",\n            \"description\": \"Additional Metadata\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/octet-stream\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"description\": \"Place a new order in the store\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values will generate exceptions.\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of order that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied and all the jazz has gone.\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c 1000. Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"description\": \"Created user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"description\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs user into the system, without jazz\",\n        \"description\": \"\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation, even if not jazzy\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out current logged in user session\",\n        \"description\": \"\",\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get user by user name\",\n        \"description\": \"\",\n        \"operationId\": \"getUserByNameAndNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Update an existent user in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"jazz\",\n          \"cookies\"\n        ],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUserButNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Order\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 198772\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"example\": 7\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"example\": \"approved\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\",\n              \"burgers\"\n            ]\n          },\n          \"complete\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"order\"\n        }\n      },\n      \"Customer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 100000\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"burgers\"\n          },\n          \"address\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"addresses\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Address\"\n            }\n          }\n        },\n        \"xml\": {\n          \"name\": \"customer\"\n        }\n      },\n      \"Address\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"street\": {\n            \"type\": \"string\",\n            \"example\": \"437 Lytton\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"example\": \"Palo Alto\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"example\": \"CA\"\n          },\n          \"zip\": {\n            \"type\": \"string\",\n            \"example\": \"94301\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"address\"\n        }\n      },\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Dogs\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"category\"\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"theUser\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"example\": \"John\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"example\": \"James\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"john@jazzclubinjazztown.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"example\": \"JAZZCLUB\"\n          },\n          \"phone\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        },\n        \"xml\": {\n          \"name\": \"user\"\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"tag\"\n        }\n      },\n      \"Pet\": {\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"jazz\": {\n            \"type\": \"string\",\n            \"example\": \"too much jazz! this is too much\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\",\n              \"xml\": {\n                \"name\": \"photoUrl\"\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\",\n              \"jazzedOut\"\n            ]\n          }\n        },\n        \"xml\": {\n          \"name\": \"pet\"\n        }\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"##default\"\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"Pet\": {\n        \"description\": \"Pet object that needs to be added to the store, now let's jazz!\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        }\n      },\n      \"UserArray\": {\n        \"description\": \"List of user object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"petstore_auth\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"https://petstore3.swagger.io/oauth/authorize\",\n            \"scopes\": {\n              \"write:pets\": \"modify pets in your account\",\n              \"read:pets\": \"read your pets\",\n              \"jazz:jazzy\": \"enjoy more jazz.\"\n            }\n          }\n        }\n      },\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}",
      "tree": [
        {
          "titleString": "Document",
          "key": "root",
          "children": [
            {
              "titleString": "Paths",
              "key": "445ab0e2-1b30-42db-bada-cdfb4ecddb05",
              "totalChanges": 10,
              "breakingChanges": 5,
              "children": [
                {
                  "titleString": "/pet/{petId}",
                  "key": "079e2d02-c7f1-4212-9be4-460f39ceb862",
                  "totalChanges": 4,
                  "breakingChanges": 2,
                  "children": [
                    {
                      "titleString": "GET",
                      "key": "3f43f0e1-ef62-4d01-8b69-77acca53bf0e",
                      "totalChanges": 4,
                      "breakingChanges": 2,
                      "children": [
                        {
                          "titleString": "description",
                          "key": "05d6376c-7a84-4498-b02b-79632a1323fa",
                          "isLeaf": true,
                          "selectable": true,
                          "change": {
                            "context": {
                              "originalLine": 301,
                              "originalColumn": 24,
                              "newLine": 301,
                              "newColumn": 24
                            },
                            "change": 1,
                            "property": "description",
                            "original": "Returns a single pet",
                            "new": "Returns a single pet, and hopefully no more jazz.",
                            "breaking": false
                          }
                        },
                        {
                          "titleString": "Parameters",
                          "key": "af9f8f8b-df5c-4ff2-bf97-88a7ee8e10c9",
                          "children": [
                            {
                              "titleString": "required",
                              "key": "15f39115-c0f1-4ef4-a45f-7dbaca8e2a8c",
                              "isLeaf": true,
                              "selectable": true,
                              "change": {
                                "context": {
                                  "originalLine": 308,
                                  "originalColumn": 25,
                                  "newLine": 308,
                                  "newColumn": 25
                                },
                                "change": 1,
                                "property": "required",
                                "original": "true",
                                "new": "false",
                                "breaking": true
                              }
                            },
                            {
                              "titleString": "Schema",
                              "key": "3c68c715-40f4-403c-a0f4-c41cb3841123",
                              "totalChanges": 1,
                              "breakingChanges": 1,
                              "children": [
                                {
                                  "titleString": "format",
                                  "key": "bf0f90d5-8069-4946-97e2-3077d55ee59d",
                                  "isLeaf": true,
                                  "selectable": true,
                                  "change": {
                                    "context": {
                                      "originalLine": 311,
                                      "originalColumn": 25,
                                      "newLine": 311,
                                      "newColumn": 25
                                    },
                                    "change": 1,
                                    "property": "format",
                                    "original": "int64",
                                    "new": "int32",
                                    "breaking": true
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "titleString": "Security Requirements",
                          "key": "12695464-c6e0-4e82-967a-59f2fe6f37b8",
                          "children": [
                            {
                              "titleString": "security",
                              "key": "12816df7-8251-49bd-8de3-1d1722173922",
                              "isLeaf": true,
                              "selectable": true,
                              "change": {
                                "context": {
                                  "newLine": 346,
                                  "newColumn": 15
                                },
                                "change": 3,
                                "property": "security",
                                "new": "eat:tacos",
                                "breaking": false
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "titleString": "/store/order/{orderId}",
                  "key": "11a25d89-56a4-4a3e-9575-a2cf6bfdd3cf",
                  "totalChanges": 3,
                  "breakingChanges": 2,
                  "children": [
                    {
                      "titleString": "GET",
                      "key": "71805c4d-9850-4d05-b565-e46becc4b0f1",
                      "totalChanges": 2,
                      "breakingChanges": 1,
                      "children": [
                        {
                          "titleString": "Responses",
                          "key": "aa3a1533-ad76-4f26-8d9f-e19212c1fae2",
                          "totalChanges": 2,
                          "breakingChanges": 1,
                          "children": [
                            {
                              "titleString": "404",
                              "key": "d4fef601-54ac-4c4c-a138-fa45660d1ba8",
                              "isLeaf": true,
                              "selectable": true,
                              "change": {
                                "context": {
                                  "originalLine": 575,
                                  "originalColumn": 18
                                },
                                "change": 4,
                                "property": "codes",
                                "original": "404",
                                "breaking": true
                              }
                            },
                            {
                              "titleString": "400",
                              "key": "ae52dc84-07bd-462c-9345-99dd78232ac0",
                              "totalChanges": 1,
                              "children": [
                                {
                                  "titleString": "description",
                                  "key": "6f0a4155-91aa-4cc0-9ea7-1f0dc75afdc7",
                                  "isLeaf": true,
                                  "selectable": true,
                                  "change": {
                                    "context": {
                                      "originalLine": 573,
                                      "originalColumn": 28,
                                      "newLine": 574,
                                      "newColumn": 28
                                    },
                                    "change": 1,
                                    "property": "description",
                                    "original": "Invalid ID supplied",
                                    "new": "Invalid ID supplied and all the jazz has gone.",
                                    "breaking": false
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "titleString": "DELETE",
                      "key": "0c210965-ced3-4cb7-86b3-a77006ecb996",
                      "totalChanges": 1,
                      "breakingChanges": 1,
                      "children": [
                        {
                          "titleString": "Parameters",
                          "key": "16f9c805-76c1-4695-8b5d-135956f8aa49",
                          "children": [
                            {
                              "titleString": "required",
                              "key": "96d941d7-b919-42ec-86a1-558ce06a3811",
                              "isLeaf": true,
                              "selectable": true,
                              "change": {
                                "context": {
                                  "originalLine": 592,
                                  "originalColumn": 25,
                                  "newLine": 590,
                                  "newColumn": 25
                                },
                                "change": 1,
                                "property": "required",
                                "original": "true",
                                "new": "false",
                                "breaking": true
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "titleString": "/pet/{petId}/uploadImage",
                  "key": "99a0ce6e-fdee-408b-a9d3-7222a14caa1b",
                  "totalChanges": 2,
                  "breakingChanges": 1,
                  "children": [
                    {
                      "titleString": "put",
                      "key": "3d2b0ff0-7048-42cb-b5f7-f2f73e908e6f",
                      "isLeaf": true,
                      "selectable": true,
                      "change": {
                        "context": {
                          "newLine": 402,
                          "newColumn": 14
                        },
                        "change": 2,
                        "property": "put",
                        "breaking": false
                      }
                    },
                    {
                      "titleString": "post",
                      "key": "6a4ed3c0-1004-4ffc-9d11-02f0eb308c2c",
                      "isLeaf": true,
                      "selectable": true,
                      "change": {
                        "context": {
                          "originalLine": 401,
                          "originalColumn": 15
                        },
                        "change": 5,
                        "property": "post",
                        "breaking": true
                      }
                    }
                  ]
                },
                {
                  "titleString": "/user/{username}",
                  "key": "4f12e734-93d3-4efe-89d2-dd0cc5c11ec3",
                  "totalChanges": 1,
                  "children": [
                    {
                      "titleString": "DELETE",
                      "key": "dcba8df8-459f-4076-8ceb-9baf0a95d691",
                      "totalChanges": 1,
                      "children": [
                        {
                          "titleString": "tags",
                          "key": "71d36834-6d67-437f-89f2-1621e08caedd",
                          "isLeaf": true,
                          "selectable": true,
                          "change": {
                            "context": {
                              "newLine": 868,
                              "newColumn": 11
                            },
                            "change": 2,
                            "property": "tags",
                            "new": "cookies",
                            "breaking": false
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "graph": {
        "nodes": [
          {
            "id": "root",
            "text": "Document",
            "height": 25
          },
          {
            "id": "paths-48a56b",
            "disabled": true,
            "text": "paths",
            "height": 25,
            "width": 150
          },
          {
            "id": "/pet/{petid}/uploadimage-11d9dd",
            "disabled": true,
            "text": "/pet/{petid}/uploadimage",
            "height": 25,
            "width": 220
          },
          {
            "id": "put-dd4bf7",
            "text": "put",
            "height": 27,
            "width": 150,
            "data": {
              "context": {
                "newLine": 402,
                "newColumn": 14
              },
              "change": 2,
              "property": "put",
              "breaking": false
            }
          },
          {
            "id": "post-a86540",
            "text": "post",
            "height": 27,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 401,
                "originalColumn": 15
              },
              "change": 5,
              "property": "post",
              "breaking": true
            }
          },
          {
            "id": "/user/{username}-822a0a",
            "disabled": true,
            "text": "/user/{username}",
            "height": 25,
            "width": 150
          },
          {
            "id": "delete-d0d6de",
            "disabled": true,
            "text": "delete",
            "height": 25,
            "width": 150
          },
          {
            "id": "tags-b3a6da",
            "text": "tags",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 868,
                "newColumn": 11
              },
              "change": 2,
              "property": "tags",
              "new": "cookies",
              "breaking": false
            }
          },
          {
            "id": "/pet/{petid}-7b48f9",
            "disabled": true,
            "text": "/pet/{petid}",
            "height": 25,
            "width": 150
          },
          {
            "id": "get-06394a",
            "disabled": true,
            "text": "get",
            "height": 25,
            "width": 150
          },
          {
            "id": "description-07235a",
            "text": "description",
            "height": 45,
            "width": 250,
            "data": {
              "context": {
                "originalLine": 301,
                "originalColumn": 24,
                "newLine": 301,
                "newColumn": 24
              },
              "change": 1,
              "property": "description",
              "original": "Returns a single pet",
              "new": "Returns a single pet, and hopefully no more jazz.",
              "breaking": false
            }
          },
          {
            "id": "parameters-e01f3f",
            "disabled": true,
            "text": "parameters",
            "height": 25,
            "width": 150
          },
          {
            "id": "required-e3149f",
            "text": "required",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 308,
                "originalColumn": 25,
                "newLine": 308,
                "newColumn": 25
              },
              "change": 1,
              "property": "required",
              "original": "true",
              "new": "false",
              "breaking": true
            }
          },
          {
            "id": "schema-a127d1",
            "disabled": true,
            "text": "schema",
            "height": 25,
            "width": 150
          },
          {
            "id": "format-c7d4d9",
            "text": "format",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 311,
                "originalColumn": 25,
                "newLine": 311,
                "newColumn": 25
              },
              "change": 1,
              "property": "format",
              "original": "int64",
              "new": "int32",
              "breaking": true
            }
          },
          {
            "id": "security requirements-765e78",
            "disabled": true,
            "text": "security requirements",
            "height": 25,
            "width": 175
          },
          {
            "id": "security-f23d87",
            "text": "security",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 346,
                "newColumn": 15
              },
              "change": 3,
              "property": "security",
              "new": "eat:tacos",
              "breaking": false
            }
          },
          {
            "id": "/store/order/{orderid}-ab74d4",
            "disabled": true,
            "text": "/store/order/{orderid}",
            "height": 25,
            "width": 190
          },
          {
            "id": "get-e78e67",
            "disabled": true,
            "text": "get",
            "height": 25,
            "width": 150
          },
          {
            "id": "responses-ec5447",
            "disabled": true,
            "text": "responses",
            "height": 25,
            "width": 150
          },
          {
            "id": "codes-3cbd92",
            "text": "codes",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 575,
                "originalColumn": 18
              },
              "change": 4,
              "property": "codes",
              "original": "404",
              "breaking": true
            }
          },
          {
            "id": "400-a4cb85",
            "disabled": true,
            "text": "400",
            "height": 25,
            "width": 150
          },
          {
            "id": "description-c540f2",
            "text": "description",
            "height": 45,
            "width": 250,
            "data": {
              "context": {
                "originalLine": 573,
                "originalColumn": 28,
                "newLine": 574,
                "newColumn": 28
              },
              "change": 1,
              "property": "description",
              "original": "Invalid ID supplied",
              "new": "Invalid ID supplied and all the jazz has gone.",
              "breaking": false
            }
          },
          {
            "id": "delete-865fee",
            "disabled": true,
            "text": "delete",
            "height": 25,
            "width": 150
          },
          {
            "id": "parameters-9edec6",
            "disabled": true,
            "text": "parameters",
            "height": 25,
            "width": 150
          },
          {
            "id": "required-caa8f1",
            "text": "required",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 592,
                "originalColumn": 25,
                "newLine": 590,
                "newColumn": 25
              },
              "change": 1,
              "property": "required",
              "original": "true",
              "new": "false",
              "breaking": true
            }
          }
        ],
        "edges": [
          {
            "id": "root-to-paths-48a56b",
            "from": "root",
            "to": "paths-48a56b"
          },
          {
            "id": "paths-48a56b-to-/pet/{petid}/uploadimage-11d9dd",
            "from": "paths-48a56b",
            "to": "/pet/{petid}/uploadimage-11d9dd"
          },
          {
            "id": "/pet/{petid}/uploadimage-11d9dd-to-put-dd4bf7",
            "from": "/pet/{petid}/uploadimage-11d9dd",
            "to": "put-dd4bf7"
          },
          {
            "id": "/pet/{petid}/uploadimage-11d9dd-to-post-a86540",
            "from": "/pet/{petid}/uploadimage-11d9dd",
            "to": "post-a86540"
          },
          {
            "id": "paths-48a56b-to-/user/{username}-822a0a",
            "from": "paths-48a56b",
            "to": "/user/{username}-822a0a"
          },
          {
            "id": "/user/{username}-822a0a-to-delete-d0d6de",
            "from": "/user/{username}-822a0a",
            "to": "delete-d0d6de"
          },
          {
            "id": "delete-d0d6de-to-tags-b3a6da",
            "from": "delete-d0d6de",
            "to": "tags-b3a6da"
          },
          {
            "id": "paths-48a56b-to-/pet/{petid}-7b48f9",
            "from": "paths-48a56b",
            "to": "/pet/{petid}-7b48f9"
          },
          {
            "id": "/pet/{petid}-7b48f9-to-get-06394a",
            "from": "/pet/{petid}-7b48f9",
            "to": "get-06394a"
          },
          {
            "id": "get-06394a-to-description-07235a",
            "from": "get-06394a",
            "to": "description-07235a"
          },
          {
            "id": "get-06394a-to-parameters-e01f3f",
            "from": "get-06394a",
            "to": "parameters-e01f3f"
          },
          {
            "id": "parameters-e01f3f-to-required-e3149f",
            "from": "parameters-e01f3f",
            "to": "required-e3149f"
          },
          {
            "id": "parameters-e01f3f-to-schema-a127d1",
            "from": "parameters-e01f3f",
            "to": "schema-a127d1"
          },
          {
            "id": "schema-a127d1-to-format-c7d4d9",
            "from": "schema-a127d1",
            "to": "format-c7d4d9"
          },
          {
            "id": "get-06394a-to-security requirements-765e78",
            "from": "get-06394a",
            "to": "security requirements-765e78"
          },
          {
            "id": "security requirements-765e78-to-security-f23d87",
            "from": "security requirements-765e78",
            "to": "security-f23d87"
          },
          {
            "id": "paths-48a56b-to-/store/order/{orderid}-ab74d4",
            "from": "paths-48a56b",
            "to": "/store/order/{orderid}-ab74d4"
          },
          {
            "id": "/store/order/{orderid}-ab74d4-to-get-e78e67",
            "from": "/store/order/{orderid}-ab74d4",
            "to": "get-e78e67"
          },
          {
            "id": "get-e78e67-to-responses-ec5447",
            "from": "get-e78e67",
            "to": "responses-ec5447"
          },
          {
            "id": "responses-ec5447-to-codes-3cbd92",
            "from": "responses-ec5447",
            "to": "codes-3cbd92"
          },
          {
            "id": "responses-ec5447-to-400-a4cb85",
            "from": "responses-ec5447",
            "to": "400-a4cb85"
          },
          {
            "id": "400-a4cb85-to-description-c540f2",
            "from": "400-a4cb85",
            "to": "description-c540f2"
          },
          {
            "id": "/store/order/{orderid}-ab74d4-to-delete-865fee",
            "from": "/store/order/{orderid}-ab74d4",
            "to": "delete-865fee"
          },
          {
            "id": "delete-865fee-to-parameters-9edec6",
            "from": "delete-865fee",
            "to": "parameters-9edec6"
          },
          {
            "id": "parameters-9edec6-to-required-caa8f1",
            "from": "parameters-9edec6",
            "to": "required-caa8f1"
          }
        ]
      },
      "statistics": {
        "total": 10,
        "totalBreaking": 5,
        "added": 3,
        "modified": 5,
        "removed": 2,
        "breakingAdded": 0,
        "breakingModified": 3,
        "breakingRemoved": 2,
        "commit": {
          "date": "04 Dec 2022 10:42:00 -0500",
          "message": "And now it's generally wrecked. But what a fun journey.\n",
          "author": "Dave Shanley",
          "authorEmail": "dave@quobix.com",
          "hash": "586a2c3db86d37a8309c9513a1bab7cb53002ba6"
        }
      }
    },
    {
      "originalSpec": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Swagger Petstore - OpenAPI 3.0, With More Jazz\",\n    \"description\": \"Jazz in the morning, Jazz in the evening.\",\n    \"termsOfService\": \"http://jazzyjazzjazzy.com\",\n    \"contact\": {\n      \"email\": \"jazz@swagger.io\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.11\"\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Swagger\",\n    \"url\": \"http://swagger.io\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/v3\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"pet\",\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"store\",\n      \"description\": \"Access to Petstore orders\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about user\"\n    },\n    {\n      \"name\": \"jazz\",\n      \"description\": \"Everyone loves jazz!\"\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Update an existing pet, but with Jazz\",\n        \"description\": \"Update an existing pet by Id\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"description\": \"Update an existent pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          },\n          \"418\": {\n            \"description\": \"Teapot Jazz\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"description\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"description\": \"Create a new pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"available\",\n              \"enum\": [\n                \"available\",\n                \"pending\",\n                \"sold\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"int\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          },\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"description\": \"\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Deletes a pet\",\n        \"description\": \"\",\n        \"operationId\": \"deletePet\",\n        \"parameters\": [\n          {\n            \"name\": \"api_key\",\n            \"in\": \"header\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"Pet id to delete\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid pet value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"description\": \"\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"additionalMetadata\",\n            \"in\": \"query\",\n            \"description\": \"Additional Metadata\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/octet-stream\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"description\": \"Place a new order in the store\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values will generate exceptions.\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of order that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c 1000. Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"description\": \"Created user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"description\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs user into the system, without jazz\",\n        \"description\": \"\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation, even if not jazzy\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out current logged in user session\",\n        \"description\": \"\",\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get user by user name\",\n        \"description\": \"\",\n        \"operationId\": \"getUserByNameAndNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Update an existent user in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"jazz\"\n        ],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUserButNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Order\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 198772\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"example\": 7\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"example\": \"approved\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\",\n              \"burgers\"\n            ]\n          },\n          \"complete\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"order\"\n        }\n      },\n      \"Customer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 100000\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"burgers\"\n          },\n          \"address\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"addresses\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Address\"\n            }\n          }\n        },\n        \"xml\": {\n          \"name\": \"customer\"\n        }\n      },\n      \"Address\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"street\": {\n            \"type\": \"string\",\n            \"example\": \"437 Lytton\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"example\": \"Palo Alto\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"example\": \"CA\"\n          },\n          \"zip\": {\n            \"type\": \"string\",\n            \"example\": \"94301\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"address\"\n        }\n      },\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Dogs\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"category\"\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"theUser\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"example\": \"John\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"example\": \"James\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"john@email.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"phone\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        },\n        \"xml\": {\n          \"name\": \"user\"\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"tag\"\n        }\n      },\n      \"Pet\": {\n        \"required\": [\n          \"name\",\n          \"photoUrls\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"doggie\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\",\n              \"xml\": {\n                \"name\": \"photoUrl\"\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\"\n            ]\n          }\n        },\n        \"xml\": {\n          \"name\": \"pet\"\n        }\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"##default\"\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"Pet\": {\n        \"description\": \"Pet object that needs to be added to the store\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        }\n      },\n      \"UserArray\": {\n        \"description\": \"List of user object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"petstore_auth\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"https://petstore3.swagger.io/oauth/authorize\",\n            \"scopes\": {\n              \"write:pets\": \"modify pets in your account\",\n              \"read:pets\": \"read your pets\",\n              \"jazz:jazzy\": \"enjoy more jazz.\"\n            }\n          }\n        }\n      },\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}",
      "modifiedSpec": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Swagger Petstore - OpenAPI 3.0, With More Jazz\",\n    \"description\": \"Jazz in the morning, Jazz in the evening.\",\n    \"termsOfService\": \"http://jazzyjazzjazzy.com\",\n    \"contact\": {\n      \"email\": \"jazz@swagger.io\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.11\"\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Swagger\",\n    \"url\": \"http://swagger.io\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/v3\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"pet\",\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"store\",\n      \"description\": \"Access to Petstore orders\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about user\"\n    },\n    {\n      \"name\": \"jazz\",\n      \"description\": \"Everyone loves jazz!\"\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Update an existing pet, but with Jazz\",\n        \"description\": \"Update an existing pet by Id\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"description\": \"Update an existent pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          },\n          \"418\": {\n            \"description\": \"Teapot Jazz\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"patch\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"description\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"description\": \"Create a new pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\",\n              \"jammy:jelly\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"available\",\n              \"enum\": [\n                \"available\",\n                \"pending\",\n                \"sold\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"int\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          },\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"description\": \"\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"description\": \"\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"additionalMetadata\",\n            \"in\": \"query\",\n            \"description\": \"Additional Metadata\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/octet-stream\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"description\": \"Place a new order in the store\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values will generate exceptions.\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of order that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c 1000. Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"description\": \"Created user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"description\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs user into the system, without jazz\",\n        \"description\": \"\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation, even if not jazzy\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out current logged in user session\",\n        \"description\": \"\",\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get user by user name\",\n        \"description\": \"\",\n        \"operationId\": \"getUserByNameAndNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Update an existent user in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"jazz\"\n        ],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUserButNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Order\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 198772\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"example\": 7\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"example\": \"approved\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\",\n              \"burgers\"\n            ]\n          },\n          \"complete\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"order\"\n        }\n      },\n      \"Customer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 100000\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"burgers\"\n          },\n          \"address\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"addresses\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Address\"\n            }\n          }\n        },\n        \"xml\": {\n          \"name\": \"customer\"\n        }\n      },\n      \"Address\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"street\": {\n            \"type\": \"string\",\n            \"example\": \"437 Lytton\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"example\": \"Palo Alto\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"example\": \"CA\"\n          },\n          \"zip\": {\n            \"type\": \"string\",\n            \"example\": \"94301\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"address\"\n        }\n      },\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Dogs\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"category\"\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"theUser\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"example\": \"John\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"example\": \"James\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"john@jazzclubinjazztown.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"example\": \"JAZZCLUB\"\n          },\n          \"phone\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        },\n        \"xml\": {\n          \"name\": \"user\"\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"tag\"\n        }\n      },\n      \"Pet\": {\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"jazz\": {\n            \"type\": \"string\",\n            \"example\": \"too much jazz! this is too much\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\",\n              \"xml\": {\n                \"name\": \"photoUrl\"\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\",\n              \"jazzedOut\"\n            ]\n          }\n        },\n        \"xml\": {\n          \"name\": \"pet\"\n        }\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"##default\"\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"Pet\": {\n        \"description\": \"Pet object that needs to be added to the store\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        }\n      },\n      \"UserArray\": {\n        \"description\": \"List of user object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"petstore_auth\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"https://petstore3.swagger.io/oauth/authorize\",\n            \"scopes\": {\n              \"write:pets\": \"modify pets in your account\",\n              \"read:pets\": \"read your pets\",\n              \"jazz:jazzy\": \"enjoy more jazz.\"\n            }\n          }\n        }\n      },\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}",
      "tree": [
        {
          "titleString": "Document",
          "key": "root",
          "children": [
            {
              "titleString": "Paths",
              "key": "09ba948b-b88a-4cd0-8396-78fe9471883d",
              "totalChanges": 5,
              "breakingChanges": 3,
              "children": [
                {
                  "titleString": "/pet",
                  "key": "534dee7a-53b9-4d41-bacc-79e3804370c0",
                  "totalChanges": 2,
                  "breakingChanges": 1,
                  "children": [
                    {
                      "titleString": "post",
                      "key": "d48ce792-b9cf-4d30-9b69-e57e17c6d028",
                      "isLeaf": true,
                      "selectable": true,
                      "change": {
                        "context": {
                          "originalLine": 120,
                          "originalColumn": 15
                        },
                        "change": 5,
                        "property": "post",
                        "breaking": true
                      }
                    },
                    {
                      "titleString": "patch",
                      "key": "c1fb70a2-6ba0-442b-974d-1db10f77486c",
                      "isLeaf": true,
                      "selectable": true,
                      "change": {
                        "context": {
                          "newLine": 120,
                          "newColumn": 16
                        },
                        "change": 2,
                        "property": "patch",
                        "breaking": false
                      }
                    }
                  ]
                },
                {
                  "titleString": "/pet/findByTags",
                  "key": "03208f2a-1cf0-47df-98ce-049434c66daf",
                  "totalChanges": 2,
                  "breakingChanges": 1,
                  "children": [
                    {
                      "titleString": "get",
                      "key": "5b467b68-1fd5-4626-9e6c-a6da4ca1af95",
                      "isLeaf": true,
                      "selectable": true,
                      "change": {
                        "context": {
                          "originalLine": 235,
                          "originalColumn": 14
                        },
                        "change": 5,
                        "property": "get",
                        "breaking": true
                      }
                    },
                    {
                      "titleString": "post",
                      "key": "42654899-62f0-4b33-8b20-f946cfb305e5",
                      "isLeaf": true,
                      "selectable": true,
                      "change": {
                        "context": {
                          "newLine": 236,
                          "newColumn": 15
                        },
                        "change": 2,
                        "property": "post",
                        "breaking": false
                      }
                    }
                  ]
                },
                {
                  "titleString": "/pet/{petId}",
                  "key": "6ab2dc54-362d-4319-97d8-d57a18ea75a3",
                  "totalChanges": 1,
                  "breakingChanges": 1,
                  "children": [
                    {
                      "titleString": "delete",
                      "key": "24af39fe-7837-4f4c-b979-d83377bdf540",
                      "isLeaf": true,
                      "selectable": true,
                      "change": {
                        "context": {
                          "originalLine": 398,
                          "originalColumn": 17
                        },
                        "change": 5,
                        "property": "delete",
                        "breaking": true
                      }
                    }
                  ]
                }
              ]
            },
            {
              "titleString": "Components",
              "key": "4892a5f9-c9da-483b-b44c-38fff240291b",
              "totalChanges": 6,
              "breakingChanges": 2,
              "children": [
                {
                  "titleString": "Pet",
                  "key": "ea337105-4054-4a89-a1a0-267af8345700",
                  "totalChanges": 4,
                  "breakingChanges": 2,
                  "children": [
                    {
                      "titleString": "required",
                      "key": "ef65d8a4-6819-4756-979e-ec7753350f42",
                      "isLeaf": true,
                      "selectable": true,
                      "change": {
                        "context": {
                          "originalLine": 1105,
                          "originalColumn": 11
                        },
                        "change": 5,
                        "property": "required",
                        "original": "photoUrls",
                        "breaking": true
                      }
                    },
                    {
                      "titleString": "properties",
                      "key": "54b884b0-7117-488f-8918-2b05c1f5629d",
                      "isLeaf": true,
                      "selectable": true,
                      "change": {
                        "context": {
                          "newLine": 1072,
                          "newColumn": 11
                        },
                        "change": 3,
                        "property": "properties",
                        "new": "jazz",
                        "breaking": false
                      }
                    },
                    {
                      "titleString": "properties",
                      "key": "dce050c7-59be-4c40-b96f-606b5b0b3b4b",
                      "isLeaf": true,
                      "selectable": true,
                      "change": {
                        "context": {
                          "originalLine": 1114,
                          "originalColumn": 11
                        },
                        "change": 4,
                        "property": "properties",
                        "original": "name",
                        "breaking": true
                      }
                    },
                    {
                      "titleString": "status",
                      "key": "e5690d40-828c-458b-b3e2-4ab5817662f1",
                      "totalChanges": 1,
                      "children": [
                        {
                          "titleString": "enum",
                          "key": "748b8cc9-0470-49c6-9bf6-457ac3d53655",
                          "isLeaf": true,
                          "selectable": true,
                          "change": {
                            "context": {
                              "newLine": 1107,
                              "newColumn": 15
                            },
                            "change": 2,
                            "property": "enum",
                            "new": "jazzedOut",
                            "breaking": false
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "titleString": "User",
                  "key": "04db9056-e3cc-4e22-81cd-30c3c326fc82",
                  "totalChanges": 2,
                  "children": [
                    {
                      "titleString": "email",
                      "key": "5c2cfc6b-8269-45ed-bda9-ccbf20004fff",
                      "totalChanges": 1,
                      "children": [
                        {
                          "titleString": "example",
                          "key": "011bbb43-8eaf-4f0a-9d2b-a00b03bad038",
                          "isLeaf": true,
                          "selectable": true,
                          "change": {
                            "context": {
                              "originalLine": 1066,
                              "originalColumn": 24,
                              "newLine": 1025,
                              "newColumn": 24
                            },
                            "change": 1,
                            "property": "example",
                            "original": "john@email.com",
                            "new": "john@jazzclubinjazztown.com",
                            "breaking": false
                          }
                        }
                      ]
                    },
                    {
                      "titleString": "password",
                      "key": "3ffdddd6-b68c-4ddd-a0dd-88c1ccb2dad2",
                      "totalChanges": 1,
                      "children": [
                        {
                          "titleString": "example",
                          "key": "bb6b363b-a339-4f15-ab9c-60926c1caf3c",
                          "isLeaf": true,
                          "selectable": true,
                          "change": {
                            "context": {
                              "originalLine": 1070,
                              "originalColumn": 24,
                              "newLine": 1029,
                              "newColumn": 24
                            },
                            "change": 1,
                            "property": "example",
                            "original": "12345",
                            "new": "JAZZCLUB",
                            "breaking": false
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "graph": {
        "nodes": [
          {
            "id": "root",
            "text": "Document",
            "height": 25
          },
          {
            "id": "paths-f7cfeb",
            "disabled": true,
            "text": "paths",
            "height": 25,
            "width": 150
          },
          {
            "id": "/pet-4a2374",
            "disabled": true,
            "text": "/pet",
            "height": 25,
            "width": 150
          },
          {
            "id": "post-b033af",
            "text": "post",
            "height": 27,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 120,
                "originalColumn": 15
              },
              "change": 5,
              "property": "post",
              "breaking": true
            }
          },
          {
            "id": "patch-e65205",
            "text": "patch",
            "height": 27,
            "width": 150,
            "data": {
              "context": {
                "newLine": 120,
                "newColumn": 16
              },
              "change": 2,
              "property": "patch",
              "breaking": false
            }
          },
          {
            "id": "/pet/findbytags-ef6097",
            "disabled": true,
            "text": "/pet/findbytags",
            "height": 25,
            "width": 150
          },
          {
            "id": "get-eeac70",
            "text": "get",
            "height": 27,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 235,
                "originalColumn": 14
              },
              "change": 5,
              "property": "get",
              "breaking": true
            }
          },
          {
            "id": "post-1ae632",
            "text": "post",
            "height": 27,
            "width": 150,
            "data": {
              "context": {
                "newLine": 236,
                "newColumn": 15
              },
              "change": 2,
              "property": "post",
              "breaking": false
            }
          },
          {
            "id": "/pet/{petid}-52073c",
            "disabled": true,
            "text": "/pet/{petid}",
            "height": 25,
            "width": 150
          },
          {
            "id": "delete-5e672d",
            "text": "delete",
            "height": 27,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 398,
                "originalColumn": 17
              },
              "change": 5,
              "property": "delete",
              "breaking": true
            }
          },
          {
            "id": "components-0ca372",
            "disabled": true,
            "text": "components",
            "height": 25,
            "width": 150
          },
          {
            "id": "pet-f1e531",
            "disabled": true,
            "text": "pet",
            "height": 25,
            "width": 150
          },
          {
            "id": "required-0b0bcd",
            "text": "required",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 1105,
                "originalColumn": 11
              },
              "change": 5,
              "property": "required",
              "original": "photoUrls",
              "breaking": true
            }
          },
          {
            "id": "properties-4a7af3",
            "text": "properties",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 1072,
                "newColumn": 11
              },
              "change": 3,
              "property": "properties",
              "new": "jazz",
              "breaking": false
            }
          },
          {
            "id": "properties-6f2384",
            "text": "properties",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 1114,
                "originalColumn": 11
              },
              "change": 4,
              "property": "properties",
              "original": "name",
              "breaking": true
            }
          },
          {
            "id": "status-c62a60",
            "disabled": true,
            "text": "status",
            "height": 25,
            "width": 150
          },
          {
            "id": "enum-138a8c",
            "text": "enum",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 1107,
                "newColumn": 15
              },
              "change": 2,
              "property": "enum",
              "new": "jazzedOut",
              "breaking": false
            }
          },
          {
            "id": "user-394c3b",
            "disabled": true,
            "text": "user",
            "height": 25,
            "width": 150
          },
          {
            "id": "email-45a99b",
            "disabled": true,
            "text": "email",
            "height": 25,
            "width": 150
          },
          {
            "id": "example-2333a1",
            "text": "example",
            "height": 45,
            "width": 230,
            "data": {
              "context": {
                "originalLine": 1066,
                "originalColumn": 24,
                "newLine": 1025,
                "newColumn": 24
              },
              "change": 1,
              "property": "example",
              "original": "john@email.com",
              "new": "john@jazzclubinjazztown.com",
              "breaking": false
            }
          },
          {
            "id": "password-10cb42",
            "disabled": true,
            "text": "password",
            "height": 25,
            "width": 150
          },
          {
            "id": "example-b35c37",
            "text": "example",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 1070,
                "originalColumn": 24,
                "newLine": 1029,
                "newColumn": 24
              },
              "change": 1,
              "property": "example",
              "original": "12345",
              "new": "JAZZCLUB",
              "breaking": false
            }
          }
        ],
        "edges": [
          {
            "id": "root-to-paths-f7cfeb",
            "from": "root",
            "to": "paths-f7cfeb"
          },
          {
            "id": "paths-f7cfeb-to-/pet-4a2374",
            "from": "paths-f7cfeb",
            "to": "/pet-4a2374"
          },
          {
            "id": "/pet-4a2374-to-post-b033af",
            "from": "/pet-4a2374",
            "to": "post-b033af"
          },
          {
            "id": "/pet-4a2374-to-patch-e65205",
            "from": "/pet-4a2374",
            "to": "patch-e65205"
          },
          {
            "id": "paths-f7cfeb-to-/pet/findbytags-ef6097",
            "from": "paths-f7cfeb",
            "to": "/pet/findbytags-ef6097"
          },
          {
            "id": "/pet/findbytags-ef6097-to-get-eeac70",
            "from": "/pet/findbytags-ef6097",
            "to": "get-eeac70"
          },
          {
            "id": "/pet/findbytags-ef6097-to-post-1ae632",
            "from": "/pet/findbytags-ef6097",
            "to": "post-1ae632"
          },
          {
            "id": "paths-f7cfeb-to-/pet/{petid}-52073c",
            "from": "paths-f7cfeb",
            "to": "/pet/{petid}-52073c"
          },
          {
            "id": "/pet/{petid}-52073c-to-delete-5e672d",
            "from": "/pet/{petid}-52073c",
            "to": "delete-5e672d"
          },
          {
            "id": "root-to-components-0ca372",
            "from": "root",
            "to": "components-0ca372"
          },
          {
            "id": "components-0ca372-to-pet-f1e531",
            "from": "components-0ca372",
            "to": "pet-f1e531"
          },
          {
            "id": "pet-f1e531-to-required-0b0bcd",
            "from": "pet-f1e531",
            "to": "required-0b0bcd"
          },
          {
            "id": "pet-f1e531-to-properties-4a7af3",
            "from": "pet-f1e531",
            "to": "properties-4a7af3"
          },
          {
            "id": "pet-f1e531-to-properties-6f2384",
            "from": "pet-f1e531",
            "to": "properties-6f2384"
          },
          {
            "id": "pet-f1e531-to-status-c62a60",
            "from": "pet-f1e531",
            "to": "status-c62a60"
          },
          {
            "id": "status-c62a60-to-enum-138a8c",
            "from": "status-c62a60",
            "to": "enum-138a8c"
          },
          {
            "id": "components-0ca372-to-user-394c3b",
            "from": "components-0ca372",
            "to": "user-394c3b"
          },
          {
            "id": "user-394c3b-to-email-45a99b",
            "from": "user-394c3b",
            "to": "email-45a99b"
          },
          {
            "id": "email-45a99b-to-example-2333a1",
            "from": "email-45a99b",
            "to": "example-2333a1"
          },
          {
            "id": "user-394c3b-to-password-10cb42",
            "from": "user-394c3b",
            "to": "password-10cb42"
          },
          {
            "id": "password-10cb42-to-example-b35c37",
            "from": "password-10cb42",
            "to": "example-b35c37"
          }
        ]
      },
      "statistics": {
        "total": 11,
        "totalBreaking": 5,
        "added": 4,
        "modified": 2,
        "removed": 5,
        "breakingAdded": 0,
        "breakingModified": 0,
        "breakingRemoved": 5,
        "commit": {
          "date": "04 Dec 2022 10:39:10 -0500",
          "message": "Deleting some things, doing a ton of damage.\n",
          "author": "Dave Shanley",
          "authorEmail": "dave@quobix.com",
          "hash": "89e8d64ac465dfd4cd11c20606df54a40943cca0"
        }
      }
    },
    {
      "originalSpec": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Swagger Petstore - OpenAPI 3.0, With More Jazz\",\n    \"description\": \"Jazz in the morning, Jazz in the evening.\",\n    \"termsOfService\": \"http://jazzyjazzjazzy.com\",\n    \"contact\": {\n      \"email\": \"jazz@swagger.io\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.11\"\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Swagger\",\n    \"url\": \"http://swagger.io\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/v3\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"pet\",\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"store\",\n      \"description\": \"Access to Petstore orders\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about user\"\n    },\n    {\n      \"name\": \"jazz\",\n      \"description\": \"Everyone loves jazz!\"\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Update an existing pet, but with Jazz\",\n        \"description\": \"Update an existing pet by Id\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"description\": \"Update an existent pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          },\n          \"418\": {\n            \"description\": \"Teapot Jazz\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"description\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"description\": \"Create a new pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"available\",\n              \"enum\": [\n                \"available\",\n                \"pending\",\n                \"sold\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid status value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"int\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          },\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"description\": \"\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Deletes a pet\",\n        \"description\": \"\",\n        \"operationId\": \"deletePet\",\n        \"parameters\": [\n          {\n            \"name\": \"api_key\",\n            \"in\": \"header\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"Pet id to delete\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid pet value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"description\": \"\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"additionalMetadata\",\n            \"in\": \"query\",\n            \"description\": \"Additional Metadata\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/octet-stream\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"description\": \"Place a new order in the store\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values will generate exceptions.\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of order that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c 1000. Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"description\": \"Created user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"description\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs user into the system\",\n        \"description\": \"\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out current logged in user session\",\n        \"description\": \"\",\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get user by user name\",\n        \"description\": \"\",\n        \"operationId\": \"getUserByName\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Update an existent user in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Order\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 198772\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"example\": 7\n          },\n          \"shipDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"example\": \"approved\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\"\n            ]\n          },\n          \"complete\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"order\"\n        }\n      },\n      \"Customer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 100000\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"fehguy\"\n          },\n          \"address\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"addresses\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Address\"\n            }\n          }\n        },\n        \"xml\": {\n          \"name\": \"customer\"\n        }\n      },\n      \"Address\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"street\": {\n            \"type\": \"string\",\n            \"example\": \"437 Lytton\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"example\": \"Palo Alto\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"example\": \"CA\"\n          },\n          \"zip\": {\n            \"type\": \"string\",\n            \"example\": \"94301\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"address\"\n        }\n      },\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Dogs\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"category\"\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"theUser\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"example\": \"John\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"example\": \"James\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"john@email.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"phone\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        },\n        \"xml\": {\n          \"name\": \"user\"\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"tag\"\n        }\n      },\n      \"Pet\": {\n        \"required\": [\n          \"name\",\n          \"photoUrls\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"doggie\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\",\n              \"xml\": {\n                \"name\": \"photoUrl\"\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\"\n            ]\n          }\n        },\n        \"xml\": {\n          \"name\": \"pet\"\n        }\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"##default\"\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"Pet\": {\n        \"description\": \"Pet object that needs to be added to the store\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        }\n      },\n      \"UserArray\": {\n        \"description\": \"List of user object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"petstore_auth\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"https://petstore3.swagger.io/oauth/authorize\",\n            \"scopes\": {\n              \"write:pets\": \"modify pets in your account\",\n              \"read:pets\": \"read your pets\",\n              \"jazz:jazzy\": \"enjoy more jazz.\"\n            }\n          }\n        }\n      },\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}",
      "modifiedSpec": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Swagger Petstore - OpenAPI 3.0, With More Jazz\",\n    \"description\": \"Jazz in the morning, Jazz in the evening.\",\n    \"termsOfService\": \"http://jazzyjazzjazzy.com\",\n    \"contact\": {\n      \"email\": \"jazz@swagger.io\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.11\"\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Swagger\",\n    \"url\": \"http://swagger.io\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/v3\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"pet\",\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"store\",\n      \"description\": \"Access to Petstore orders\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about user\"\n    },\n    {\n      \"name\": \"jazz\",\n      \"description\": \"Everyone loves jazz!\"\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Update an existing pet, but with Jazz\",\n        \"description\": \"Update an existing pet by Id\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"description\": \"Update an existent pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          },\n          \"418\": {\n            \"description\": \"Teapot Jazz\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"description\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"description\": \"Create a new pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"available\",\n              \"enum\": [\n                \"available\",\n                \"pending\",\n                \"sold\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"int\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          },\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"description\": \"\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Deletes a pet\",\n        \"description\": \"\",\n        \"operationId\": \"deletePet\",\n        \"parameters\": [\n          {\n            \"name\": \"api_key\",\n            \"in\": \"header\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"Pet id to delete\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid pet value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"description\": \"\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"additionalMetadata\",\n            \"in\": \"query\",\n            \"description\": \"Additional Metadata\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/octet-stream\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"description\": \"Place a new order in the store\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values will generate exceptions.\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of order that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c 1000. Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"description\": \"Created user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"description\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs user into the system, without jazz\",\n        \"description\": \"\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation, even if not jazzy\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out current logged in user session\",\n        \"description\": \"\",\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get user by user name\",\n        \"description\": \"\",\n        \"operationId\": \"getUserByNameAndNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Update an existent user in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"jazz\"\n        ],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUserButNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Order\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 198772\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"example\": 7\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"example\": \"approved\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\",\n              \"burgers\"\n            ]\n          },\n          \"complete\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"order\"\n        }\n      },\n      \"Customer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 100000\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"burgers\"\n          },\n          \"address\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"addresses\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Address\"\n            }\n          }\n        },\n        \"xml\": {\n          \"name\": \"customer\"\n        }\n      },\n      \"Address\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"street\": {\n            \"type\": \"string\",\n            \"example\": \"437 Lytton\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"example\": \"Palo Alto\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"example\": \"CA\"\n          },\n          \"zip\": {\n            \"type\": \"string\",\n            \"example\": \"94301\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"address\"\n        }\n      },\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Dogs\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"category\"\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"theUser\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"example\": \"John\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"example\": \"James\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"john@email.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"phone\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        },\n        \"xml\": {\n          \"name\": \"user\"\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"tag\"\n        }\n      },\n      \"Pet\": {\n        \"required\": [\n          \"name\",\n          \"photoUrls\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"doggie\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\",\n              \"xml\": {\n                \"name\": \"photoUrl\"\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\"\n            ]\n          }\n        },\n        \"xml\": {\n          \"name\": \"pet\"\n        }\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"##default\"\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"Pet\": {\n        \"description\": \"Pet object that needs to be added to the store\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        }\n      },\n      \"UserArray\": {\n        \"description\": \"List of user object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"petstore_auth\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"https://petstore3.swagger.io/oauth/authorize\",\n            \"scopes\": {\n              \"write:pets\": \"modify pets in your account\",\n              \"read:pets\": \"read your pets\",\n              \"jazz:jazzy\": \"enjoy more jazz.\"\n            }\n          }\n        }\n      },\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}",
      "tree": [
        {
          "titleString": "Document",
          "key": "root",
          "children": [
            {
              "titleString": "Paths",
              "key": "60015c7a-9957-45d9-a9c8-320fee1629e6",
              "totalChanges": 10,
              "breakingChanges": 6,
              "children": [
                {
                  "titleString": "/user/login",
                  "key": "9a32c4f3-1e27-4ad4-8ca6-e4db53049435",
                  "totalChanges": 4,
                  "breakingChanges": 2,
                  "children": [
                    {
                      "titleString": "GET",
                      "key": "60e41a26-a9fb-44d6-b71a-86ed6f987ae6",
                      "totalChanges": 4,
                      "breakingChanges": 2,
                      "children": [
                        {
                          "titleString": "summary",
                          "key": "3ca56710-4742-4bd9-ac1b-d5ed76f6484c",
                          "isLeaf": true,
                          "selectable": true,
                          "change": {
                            "context": {
                              "originalLine": 750,
                              "originalColumn": 20,
                              "newLine": 744,
                              "newColumn": 20
                            },
                            "change": 1,
                            "property": "summary",
                            "original": "Logs user into the system",
                            "new": "Logs user into the system, without jazz",
                            "breaking": false
                          }
                        },
                        {
                          "titleString": "Parameters",
                          "key": "4a21ff58-c76a-408e-bef2-a8a5774dcb73",
                          "children": [
                            {
                              "titleString": "Schema",
                              "key": "d2994696-9ca5-4e33-abc7-864cdfc5b6e3",
                              "totalChanges": 1,
                              "breakingChanges": 1,
                              "children": [
                                {
                                  "titleString": "type",
                                  "key": "96206a26-5035-4e98-8a0c-22ff5d742f5a",
                                  "isLeaf": true,
                                  "selectable": true,
                                  "change": {
                                    "context": {
                                      "originalLine": 760,
                                      "originalColumn": 23,
                                      "newLine": 754,
                                      "newColumn": 23
                                    },
                                    "change": 1,
                                    "property": "type",
                                    "original": "string",
                                    "new": "integer",
                                    "breaking": true
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "titleString": "Parameters",
                          "key": "853eccde-3b8c-4e78-9310-63b80d6c4182",
                          "children": [
                            {
                              "titleString": "required",
                              "key": "0a9eceee-e63e-43be-adad-ce6c79d59b10",
                              "isLeaf": true,
                              "selectable": true,
                              "change": {
                                "context": {
                                  "originalLine": 767,
                                  "originalColumn": 25,
                                  "newLine": 761,
                                  "newColumn": 25
                                },
                                "change": 1,
                                "property": "required",
                                "original": "false",
                                "new": "true",
                                "breaking": true
                              }
                            }
                          ]
                        },
                        {
                          "titleString": "Responses",
                          "key": "f6ae7962-f99e-4a5f-a104-ee4538ddb27f",
                          "totalChanges": 1,
                          "children": [
                            {
                              "titleString": "200",
                              "key": "f2fa915e-5e11-49ef-8c60-5f1f10929334",
                              "totalChanges": 1,
                              "children": [
                                {
                                  "titleString": "description",
                                  "key": "4013c649-3a92-42b5-af7f-3edabcc0d45e",
                                  "isLeaf": true,
                                  "selectable": true,
                                  "change": {
                                    "context": {
                                      "originalLine": 775,
                                      "originalColumn": 28,
                                      "newLine": 769,
                                      "newColumn": 28
                                    },
                                    "change": 1,
                                    "property": "description",
                                    "original": "successful operation",
                                    "new": "successful operation, even if not jazzy",
                                    "breaking": false
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "titleString": "/user/{username}",
                  "key": "fe4edc0b-e080-4c58-8ecd-7d724b3edcef",
                  "totalChanges": 4,
                  "breakingChanges": 2,
                  "children": [
                    {
                      "titleString": "GET",
                      "key": "de33e353-4080-41a3-89fc-bed506fc7e71",
                      "totalChanges": 1,
                      "breakingChanges": 1,
                      "children": [
                        {
                          "titleString": "operationId",
                          "key": "9a13c83e-01bc-4be8-ac8f-008536443e6b",
                          "isLeaf": true,
                          "selectable": true,
                          "change": {
                            "context": {
                              "originalLine": 834,
                              "originalColumn": 24,
                              "newLine": 828,
                              "newColumn": 24
                            },
                            "change": 1,
                            "property": "operationId",
                            "original": "getUserByName",
                            "new": "getUserByNameAndNotJazz",
                            "breaking": true
                          }
                        }
                      ]
                    },
                    {
                      "titleString": "DELETE",
                      "key": "985dd5bf-eb21-449b-88bd-877ed9e51c7a",
                      "totalChanges": 3,
                      "breakingChanges": 1,
                      "children": [
                        {
                          "titleString": "tags",
                          "key": "34d24f1a-dc42-4bd4-b0a8-8cee095fd215",
                          "isLeaf": true,
                          "selectable": true,
                          "change": {
                            "context": {
                              "originalLine": 916,
                              "originalColumn": 11
                            },
                            "change": 5,
                            "property": "tags",
                            "original": "user",
                            "breaking": false
                          }
                        },
                        {
                          "titleString": "tags",
                          "key": "fa4b6052-c1b2-48c3-b66b-6ca7b15782e5",
                          "isLeaf": true,
                          "selectable": true,
                          "change": {
                            "context": {
                              "newLine": 910,
                              "newColumn": 11
                            },
                            "change": 2,
                            "property": "tags",
                            "new": "jazz",
                            "breaking": false
                          }
                        },
                        {
                          "titleString": "operationId",
                          "key": "e3faae6c-bdb8-4029-800a-6e28df4a84a0",
                          "isLeaf": true,
                          "selectable": true,
                          "change": {
                            "context": {
                              "originalLine": 920,
                              "originalColumn": 24,
                              "newLine": 914,
                              "newColumn": 24
                            },
                            "change": 1,
                            "property": "operationId",
                            "original": "deleteUser",
                            "new": "deleteUserButNotJazz",
                            "breaking": true
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "titleString": "/pet/findByStatus",
                  "key": "a5ea2b20-e299-4422-ae13-691938dd6ec5",
                  "totalChanges": 1,
                  "breakingChanges": 1,
                  "children": [
                    {
                      "titleString": "GET",
                      "key": "3b6ffbb1-de4f-4f38-b1ce-ee0e9a252c76",
                      "totalChanges": 1,
                      "breakingChanges": 1,
                      "children": [
                        {
                          "titleString": "Responses",
                          "key": "dcf5d781-595f-485c-aba9-b8e62793dd4e",
                          "totalChanges": 1,
                          "breakingChanges": 1,
                          "children": [
                            {
                              "titleString": "400",
                              "key": "3f8e18e8-28ed-4e10-b659-e5d14bb444d5",
                              "isLeaf": true,
                              "selectable": true,
                              "change": {
                                "context": {
                                  "originalLine": 226,
                                  "originalColumn": 18
                                },
                                "change": 4,
                                "property": "codes",
                                "original": "400",
                                "breaking": true
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "titleString": "/pet",
                  "key": "8fb651c9-e744-4e73-a378-920a2b4fc15b",
                  "totalChanges": 1,
                  "breakingChanges": 1,
                  "children": [
                    {
                      "titleString": "POST",
                      "key": "61b228b4-9124-45f3-bf82-8af0196fb299",
                      "totalChanges": 1,
                      "breakingChanges": 1,
                      "children": [
                        {
                          "titleString": "Responses",
                          "key": "e3be5fc5-6867-43cc-841f-27224b6f72eb",
                          "totalChanges": 1,
                          "breakingChanges": 1,
                          "children": [
                            {
                              "titleString": "405",
                              "key": "58832a17-0093-4877-a750-92db0820a124",
                              "isLeaf": true,
                              "selectable": true,
                              "change": {
                                "context": {
                                  "originalLine": 164,
                                  "originalColumn": 18
                                },
                                "change": 4,
                                "property": "codes",
                                "original": "405",
                                "breaking": true
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "titleString": "Components",
              "key": "273add9e-9deb-4d2d-baa4-ec810b2d771d",
              "totalChanges": 3,
              "breakingChanges": 1,
              "children": [
                {
                  "titleString": "Customer",
                  "key": "d06a9a96-eb6d-4f0c-89eb-a8fc22541694",
                  "totalChanges": 1,
                  "children": [
                    {
                      "titleString": "username",
                      "key": "2ef0bef7-d03f-4aae-b9ca-d97b360e13e0",
                      "totalChanges": 1,
                      "children": [
                        {
                          "titleString": "example",
                          "key": "58f3166f-4c29-47a5-b7ff-a29bc231e53b",
                          "isLeaf": true,
                          "selectable": true,
                          "change": {
                            "context": {
                              "originalLine": 995,
                              "originalColumn": 24,
                              "newLine": 986,
                              "newColumn": 24
                            },
                            "change": 1,
                            "property": "example",
                            "original": "fehguy",
                            "new": "burgers",
                            "breaking": false
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "titleString": "Order",
                  "key": "2094ceb6-56ef-433d-bbcf-462a9fa0bf32",
                  "totalChanges": 2,
                  "breakingChanges": 1,
                  "children": [
                    {
                      "titleString": "properties",
                      "key": "e7b3a889-c809-43b8-b147-0580df64ff9f",
                      "isLeaf": true,
                      "selectable": true,
                      "change": {
                        "context": {
                          "originalLine": 963,
                          "originalColumn": 11
                        },
                        "change": 4,
                        "property": "properties",
                        "original": "shipDate",
                        "breaking": true
                      }
                    },
                    {
                      "titleString": "status",
                      "key": "050c040a-5108-44da-8724-6355833c461f",
                      "totalChanges": 1,
                      "children": [
                        {
                          "titleString": "enum",
                          "key": "83eb2ad7-6cca-4c7c-ba63-6b7b0e282acf",
                          "isLeaf": true,
                          "selectable": true,
                          "change": {
                            "context": {
                              "newLine": 965,
                              "newColumn": 15
                            },
                            "change": 2,
                            "property": "enum",
                            "new": "burgers",
                            "breaking": false
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "graph": {
        "nodes": [
          {
            "id": "root",
            "text": "Document",
            "height": 25
          },
          {
            "id": "paths-ca5c3b",
            "disabled": true,
            "text": "paths",
            "height": 25,
            "width": 150
          },
          {
            "id": "/pet/findbystatus-ad1554",
            "disabled": true,
            "text": "/pet/findbystatus",
            "height": 25,
            "width": 150
          },
          {
            "id": "get-312ee3",
            "disabled": true,
            "text": "get",
            "height": 25,
            "width": 150
          },
          {
            "id": "responses-aa9190",
            "disabled": true,
            "text": "responses",
            "height": 25,
            "width": 150
          },
          {
            "id": "codes-d6eada",
            "text": "codes",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 226,
                "originalColumn": 18
              },
              "change": 4,
              "property": "codes",
              "original": "400",
              "breaking": true
            }
          },
          {
            "id": "/pet-82bff4",
            "disabled": true,
            "text": "/pet",
            "height": 25,
            "width": 150
          },
          {
            "id": "post-25caca",
            "disabled": true,
            "text": "post",
            "height": 25,
            "width": 150
          },
          {
            "id": "responses-cb2d76",
            "disabled": true,
            "text": "responses",
            "height": 25,
            "width": 150
          },
          {
            "id": "codes-9d5b3d",
            "text": "codes",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 164,
                "originalColumn": 18
              },
              "change": 4,
              "property": "codes",
              "original": "405",
              "breaking": true
            }
          },
          {
            "id": "/user/login-05df11",
            "disabled": true,
            "text": "/user/login",
            "height": 25,
            "width": 150
          },
          {
            "id": "get-40c0eb",
            "disabled": true,
            "text": "get",
            "height": 25,
            "width": 150
          },
          {
            "id": "summary-d39563",
            "text": "summary",
            "height": 45,
            "width": 250,
            "data": {
              "context": {
                "originalLine": 750,
                "originalColumn": 20,
                "newLine": 744,
                "newColumn": 20
              },
              "change": 1,
              "property": "summary",
              "original": "Logs user into the system",
              "new": "Logs user into the system, without jazz",
              "breaking": false
            }
          },
          {
            "id": "parameters-0f6c13",
            "disabled": true,
            "text": "parameters",
            "height": 25,
            "width": 150
          },
          {
            "id": "schema-7a6da4",
            "disabled": true,
            "text": "schema",
            "height": 25,
            "width": 150
          },
          {
            "id": "type-996a73",
            "text": "type",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 760,
                "originalColumn": 23,
                "newLine": 754,
                "newColumn": 23
              },
              "change": 1,
              "property": "type",
              "original": "string",
              "new": "integer",
              "breaking": true
            }
          },
          {
            "id": "parameters-948951",
            "disabled": true,
            "text": "parameters",
            "height": 25,
            "width": 150
          },
          {
            "id": "required-c7ffc9",
            "text": "required",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 767,
                "originalColumn": 25,
                "newLine": 761,
                "newColumn": 25
              },
              "change": 1,
              "property": "required",
              "original": "false",
              "new": "true",
              "breaking": true
            }
          },
          {
            "id": "responses-65a9be",
            "disabled": true,
            "text": "responses",
            "height": 25,
            "width": 150
          },
          {
            "id": "200-07f23b",
            "disabled": true,
            "text": "200",
            "height": 25,
            "width": 150
          },
          {
            "id": "description-616151",
            "text": "description",
            "height": 45,
            "width": 250,
            "data": {
              "context": {
                "originalLine": 775,
                "originalColumn": 28,
                "newLine": 769,
                "newColumn": 28
              },
              "change": 1,
              "property": "description",
              "original": "successful operation",
              "new": "successful operation, even if not jazzy",
              "breaking": false
            }
          },
          {
            "id": "/user/{username}-c8c93a",
            "disabled": true,
            "text": "/user/{username}",
            "height": 25,
            "width": 150
          },
          {
            "id": "get-741520",
            "disabled": true,
            "text": "get",
            "height": 25,
            "width": 150
          },
          {
            "id": "operationid-235044",
            "text": "operationId",
            "height": 45,
            "width": 190,
            "data": {
              "context": {
                "originalLine": 834,
                "originalColumn": 24,
                "newLine": 828,
                "newColumn": 24
              },
              "change": 1,
              "property": "operationId",
              "original": "getUserByName",
              "new": "getUserByNameAndNotJazz",
              "breaking": true
            }
          },
          {
            "id": "delete-9cabd8",
            "disabled": true,
            "text": "delete",
            "height": 25,
            "width": 150
          },
          {
            "id": "tags-bc129e",
            "text": "tags",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 916,
                "originalColumn": 11
              },
              "change": 5,
              "property": "tags",
              "original": "user",
              "breaking": false
            }
          },
          {
            "id": "tags-a399d0",
            "text": "tags",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 910,
                "newColumn": 11
              },
              "change": 2,
              "property": "tags",
              "new": "jazz",
              "breaking": false
            }
          },
          {
            "id": "operationid-89c57d",
            "text": "operationId",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 920,
                "originalColumn": 24,
                "newLine": 914,
                "newColumn": 24
              },
              "change": 1,
              "property": "operationId",
              "original": "deleteUser",
              "new": "deleteUserButNotJazz",
              "breaking": true
            }
          },
          {
            "id": "components-6981f2",
            "disabled": true,
            "text": "components",
            "height": 25,
            "width": 150
          },
          {
            "id": "customer-492901",
            "disabled": true,
            "text": "customer",
            "height": 25,
            "width": 150
          },
          {
            "id": "username-25c69e",
            "disabled": true,
            "text": "username",
            "height": 25,
            "width": 150
          },
          {
            "id": "example-b5551c",
            "text": "example",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 995,
                "originalColumn": 24,
                "newLine": 986,
                "newColumn": 24
              },
              "change": 1,
              "property": "example",
              "original": "fehguy",
              "new": "burgers",
              "breaking": false
            }
          },
          {
            "id": "order-909011",
            "disabled": true,
            "text": "order",
            "height": 25,
            "width": 150
          },
          {
            "id": "properties-2d0946",
            "text": "properties",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 963,
                "originalColumn": 11
              },
              "change": 4,
              "property": "properties",
              "original": "shipDate",
              "breaking": true
            }
          },
          {
            "id": "status-92417b",
            "disabled": true,
            "text": "status",
            "height": 25,
            "width": 150
          },
          {
            "id": "enum-d62a16",
            "text": "enum",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 965,
                "newColumn": 15
              },
              "change": 2,
              "property": "enum",
              "new": "burgers",
              "breaking": false
            }
          }
        ],
        "edges": [
          {
            "id": "root-to-paths-ca5c3b",
            "from": "root",
            "to": "paths-ca5c3b"
          },
          {
            "id": "paths-ca5c3b-to-/pet/findbystatus-ad1554",
            "from": "paths-ca5c3b",
            "to": "/pet/findbystatus-ad1554"
          },
          {
            "id": "/pet/findbystatus-ad1554-to-get-312ee3",
            "from": "/pet/findbystatus-ad1554",
            "to": "get-312ee3"
          },
          {
            "id": "get-312ee3-to-responses-aa9190",
            "from": "get-312ee3",
            "to": "responses-aa9190"
          },
          {
            "id": "responses-aa9190-to-codes-d6eada",
            "from": "responses-aa9190",
            "to": "codes-d6eada"
          },
          {
            "id": "paths-ca5c3b-to-/pet-82bff4",
            "from": "paths-ca5c3b",
            "to": "/pet-82bff4"
          },
          {
            "id": "/pet-82bff4-to-post-25caca",
            "from": "/pet-82bff4",
            "to": "post-25caca"
          },
          {
            "id": "post-25caca-to-responses-cb2d76",
            "from": "post-25caca",
            "to": "responses-cb2d76"
          },
          {
            "id": "responses-cb2d76-to-codes-9d5b3d",
            "from": "responses-cb2d76",
            "to": "codes-9d5b3d"
          },
          {
            "id": "paths-ca5c3b-to-/user/login-05df11",
            "from": "paths-ca5c3b",
            "to": "/user/login-05df11"
          },
          {
            "id": "/user/login-05df11-to-get-40c0eb",
            "from": "/user/login-05df11",
            "to": "get-40c0eb"
          },
          {
            "id": "get-40c0eb-to-summary-d39563",
            "from": "get-40c0eb",
            "to": "summary-d39563"
          },
          {
            "id": "get-40c0eb-to-parameters-0f6c13",
            "from": "get-40c0eb",
            "to": "parameters-0f6c13"
          },
          {
            "id": "parameters-0f6c13-to-schema-7a6da4",
            "from": "parameters-0f6c13",
            "to": "schema-7a6da4"
          },
          {
            "id": "schema-7a6da4-to-type-996a73",
            "from": "schema-7a6da4",
            "to": "type-996a73"
          },
          {
            "id": "get-40c0eb-to-parameters-948951",
            "from": "get-40c0eb",
            "to": "parameters-948951"
          },
          {
            "id": "parameters-948951-to-required-c7ffc9",
            "from": "parameters-948951",
            "to": "required-c7ffc9"
          },
          {
            "id": "get-40c0eb-to-responses-65a9be",
            "from": "get-40c0eb",
            "to": "responses-65a9be"
          },
          {
            "id": "responses-65a9be-to-200-07f23b",
            "from": "responses-65a9be",
            "to": "200-07f23b"
          },
          {
            "id": "200-07f23b-to-description-616151",
            "from": "200-07f23b",
            "to": "description-616151"
          },
          {
            "id": "paths-ca5c3b-to-/user/{username}-c8c93a",
            "from": "paths-ca5c3b",
            "to": "/user/{username}-c8c93a"
          },
          {
            "id": "/user/{username}-c8c93a-to-get-741520",
            "from": "/user/{username}-c8c93a",
            "to": "get-741520"
          },
          {
            "id": "get-741520-to-operationid-235044",
            "from": "get-741520",
            "to": "operationid-235044"
          },
          {
            "id": "/user/{username}-c8c93a-to-delete-9cabd8",
            "from": "/user/{username}-c8c93a",
            "to": "delete-9cabd8"
          },
          {
            "id": "delete-9cabd8-to-tags-bc129e",
            "from": "delete-9cabd8",
            "to": "tags-bc129e"
          },
          {
            "id": "delete-9cabd8-to-tags-a399d0",
            "from": "delete-9cabd8",
            "to": "tags-a399d0"
          },
          {
            "id": "delete-9cabd8-to-operationid-89c57d",
            "from": "delete-9cabd8",
            "to": "operationid-89c57d"
          },
          {
            "id": "root-to-components-6981f2",
            "from": "root",
            "to": "components-6981f2"
          },
          {
            "id": "components-6981f2-to-customer-492901",
            "from": "components-6981f2",
            "to": "customer-492901"
          },
          {
            "id": "customer-492901-to-username-25c69e",
            "from": "customer-492901",
            "to": "username-25c69e"
          },
          {
            "id": "username-25c69e-to-example-b5551c",
            "from": "username-25c69e",
            "to": "example-b5551c"
          },
          {
            "id": "components-6981f2-to-order-909011",
            "from": "components-6981f2",
            "to": "order-909011"
          },
          {
            "id": "order-909011-to-properties-2d0946",
            "from": "order-909011",
            "to": "properties-2d0946"
          },
          {
            "id": "order-909011-to-status-92417b",
            "from": "order-909011",
            "to": "status-92417b"
          },
          {
            "id": "status-92417b-to-enum-d62a16",
            "from": "status-92417b",
            "to": "enum-d62a16"
          }
        ]
      },
      "statistics": {
        "total": 13,
        "totalBreaking": 7,
        "added": 2,
        "modified": 7,
        "removed": 4,
        "breakingAdded": 0,
        "breakingModified": 4,
        "breakingRemoved": 3,
        "commit": {
          "date": "04 Dec 2022 10:35:44 -0500",
          "message": "Deleting a bunch of stuff is always fun\n\nWho knows what is breaking or not.\n",
          "author": "Dave Shanley",
          "authorEmail": "dave@quobix.com",
          "hash": "010bbe9a143343d75df7872bb99132d95580a687"
        }
      }
    },
    {
      "originalSpec": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Swagger Petstore - OpenAPI 3.0\",\n    \"description\": \"This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\\nSwagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\\n\\nSome useful links:\\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)\",\n    \"termsOfService\": \"http://swagger.io/terms/\",\n    \"contact\": {\n      \"email\": \"apiteam@swagger.io\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.11\"\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Swagger\",\n    \"url\": \"http://swagger.io\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/v3\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"pet\",\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"store\",\n      \"description\": \"Access to Petstore orders\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about user\"\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Update an existing pet\",\n        \"description\": \"Update an existing pet by Id\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"description\": \"Update an existent pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"description\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"description\": \"Create a new pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"available\",\n              \"enum\": [\n                \"available\",\n                \"pending\",\n                \"sold\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid status value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          },\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"description\": \"\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Deletes a pet\",\n        \"description\": \"\",\n        \"operationId\": \"deletePet\",\n        \"parameters\": [\n          {\n            \"name\": \"api_key\",\n            \"in\": \"header\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"Pet id to delete\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid pet value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"description\": \"\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"additionalMetadata\",\n            \"in\": \"query\",\n            \"description\": \"Additional Metadata\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/octet-stream\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"description\": \"Place a new order in the store\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values will generate exceptions.\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of order that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c 1000. Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"description\": \"Created user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"description\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs user into the system\",\n        \"description\": \"\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out current logged in user session\",\n        \"description\": \"\",\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get user by user name\",\n        \"description\": \"\",\n        \"operationId\": \"getUserByName\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Update an existent user in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Order\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 198772\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"example\": 7\n          },\n          \"shipDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"example\": \"approved\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\"\n            ]\n          },\n          \"complete\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"order\"\n        }\n      },\n      \"Customer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 100000\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"fehguy\"\n          },\n          \"address\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"addresses\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Address\"\n            }\n          }\n        },\n        \"xml\": {\n          \"name\": \"customer\"\n        }\n      },\n      \"Address\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"street\": {\n            \"type\": \"string\",\n            \"example\": \"437 Lytton\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"example\": \"Palo Alto\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"example\": \"CA\"\n          },\n          \"zip\": {\n            \"type\": \"string\",\n            \"example\": \"94301\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"address\"\n        }\n      },\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Dogs\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"category\"\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"theUser\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"example\": \"John\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"example\": \"James\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"john@email.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"phone\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        },\n        \"xml\": {\n          \"name\": \"user\"\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"tag\"\n        }\n      },\n      \"Pet\": {\n        \"required\": [\n          \"name\",\n          \"photoUrls\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"doggie\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\",\n              \"xml\": {\n                \"name\": \"photoUrl\"\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\"\n            ]\n          }\n        },\n        \"xml\": {\n          \"name\": \"pet\"\n        }\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"##default\"\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"Pet\": {\n        \"description\": \"Pet object that needs to be added to the store\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        }\n      },\n      \"UserArray\": {\n        \"description\": \"List of user object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"petstore_auth\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"https://petstore3.swagger.io/oauth/authorize\",\n            \"scopes\": {\n              \"write:pets\": \"modify pets in your account\",\n              \"read:pets\": \"read your pets\"\n            }\n          }\n        }\n      },\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}",
      "modifiedSpec": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Swagger Petstore - OpenAPI 3.0, With More Jazz\",\n    \"description\": \"Jazz in the morning, Jazz in the evening.\",\n    \"termsOfService\": \"http://jazzyjazzjazzy.com\",\n    \"contact\": {\n      \"email\": \"jazz@swagger.io\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.11\"\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Swagger\",\n    \"url\": \"http://swagger.io\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/v3\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"pet\",\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"store\",\n      \"description\": \"Access to Petstore orders\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about user\"\n    },\n    {\n      \"name\": \"jazz\",\n      \"description\": \"Everyone loves jazz!\"\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Update an existing pet, but with Jazz\",\n        \"description\": \"Update an existing pet by Id\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"description\": \"Update an existent pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          },\n          \"418\": {\n            \"description\": \"Teapot Jazz\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"description\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"description\": \"Create a new pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"available\",\n              \"enum\": [\n                \"available\",\n                \"pending\",\n                \"sold\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid status value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"int\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          },\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"description\": \"\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Deletes a pet\",\n        \"description\": \"\",\n        \"operationId\": \"deletePet\",\n        \"parameters\": [\n          {\n            \"name\": \"api_key\",\n            \"in\": \"header\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"Pet id to delete\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid pet value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"description\": \"\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"additionalMetadata\",\n            \"in\": \"query\",\n            \"description\": \"Additional Metadata\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/octet-stream\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"description\": \"Place a new order in the store\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values will generate exceptions.\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of order that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c 1000. Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"description\": \"Created user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"description\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs user into the system\",\n        \"description\": \"\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out current logged in user session\",\n        \"description\": \"\",\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get user by user name\",\n        \"description\": \"\",\n        \"operationId\": \"getUserByName\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Update an existent user in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Order\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 198772\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"example\": 7\n          },\n          \"shipDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"example\": \"approved\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\"\n            ]\n          },\n          \"complete\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"order\"\n        }\n      },\n      \"Customer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 100000\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"fehguy\"\n          },\n          \"address\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"addresses\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Address\"\n            }\n          }\n        },\n        \"xml\": {\n          \"name\": \"customer\"\n        }\n      },\n      \"Address\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"street\": {\n            \"type\": \"string\",\n            \"example\": \"437 Lytton\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"example\": \"Palo Alto\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"example\": \"CA\"\n          },\n          \"zip\": {\n            \"type\": \"string\",\n            \"example\": \"94301\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"address\"\n        }\n      },\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Dogs\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"category\"\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"theUser\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"example\": \"John\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"example\": \"James\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"john@email.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"phone\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        },\n        \"xml\": {\n          \"name\": \"user\"\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"tag\"\n        }\n      },\n      \"Pet\": {\n        \"required\": [\n          \"name\",\n          \"photoUrls\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"doggie\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\",\n              \"xml\": {\n                \"name\": \"photoUrl\"\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\"\n            ]\n          }\n        },\n        \"xml\": {\n          \"name\": \"pet\"\n        }\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"##default\"\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"Pet\": {\n        \"description\": \"Pet object that needs to be added to the store\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        }\n      },\n      \"UserArray\": {\n        \"description\": \"List of user object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"petstore_auth\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"https://petstore3.swagger.io/oauth/authorize\",\n            \"scopes\": {\n              \"write:pets\": \"modify pets in your account\",\n              \"read:pets\": \"read your pets\",\n              \"jazz:jazzy\": \"enjoy more jazz.\"\n            }\n          }\n        }\n      },\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}",
      "tree": [
        {
          "titleString": "Document",
          "key": "root",
          "children": [
            {
              "titleString": "Info",
              "key": "0d6109bd-8601-413b-b64b-59a8753ba5bf",
              "totalChanges": 4,
              "children": [
                {
                  "titleString": "title",
                  "key": "64b33253-964d-4497-8b13-015c805e7c88",
                  "isLeaf": true,
                  "selectable": true,
                  "change": {
                    "context": {
                      "originalLine": 4,
                      "originalColumn": 14,
                      "newLine": 4,
                      "newColumn": 14
                    },
                    "change": 1,
                    "property": "title",
                    "original": "Swagger Petstore - OpenAPI 3.0",
                    "new": "Swagger Petstore - OpenAPI 3.0, With More Jazz",
                    "breaking": false
                  }
                },
                {
                  "titleString": "description",
                  "key": "9d9862ed-d55a-4d39-879f-381e15f4d8da",
                  "isLeaf": true,
                  "selectable": true,
                  "change": {
                    "context": {
                      "originalLine": 5,
                      "originalColumn": 20,
                      "newLine": 5,
                      "newColumn": 20
                    },
                    "change": 1,
                    "property": "description",
                    "original": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
                    "new": "Jazz in the morning, Jazz in the evening.",
                    "breaking": false
                  }
                },
                {
                  "titleString": "termsOfService",
                  "key": "d98aa6f0-7341-404d-83af-b88381e72bc0",
                  "isLeaf": true,
                  "selectable": true,
                  "change": {
                    "context": {
                      "originalLine": 6,
                      "originalColumn": 23,
                      "newLine": 6,
                      "newColumn": 23
                    },
                    "change": 1,
                    "property": "termsOfService",
                    "original": "http://swagger.io/terms/",
                    "new": "http://jazzyjazzjazzy.com",
                    "breaking": false
                  }
                },
                {
                  "titleString": "Contact",
                  "key": "aee7e2a6-35c6-4826-b1ff-73a278b9251e",
                  "totalChanges": 1,
                  "children": [
                    {
                      "titleString": "email",
                      "key": "2f5d77f0-d527-4e09-839a-a2851a50b3b2",
                      "isLeaf": true,
                      "selectable": true,
                      "change": {
                        "context": {
                          "originalLine": 8,
                          "originalColumn": 16,
                          "newLine": 8,
                          "newColumn": 16
                        },
                        "change": 1,
                        "property": "email",
                        "original": "apiteam@swagger.io",
                        "new": "jazz@swagger.io",
                        "breaking": false
                      }
                    }
                  ]
                }
              ]
            },
            {
              "titleString": "Paths",
              "key": "df4d48ff-3011-4a02-bf2f-df563af8e6f2",
              "totalChanges": 6,
              "breakingChanges": 2,
              "children": [
                {
                  "titleString": "/pet",
                  "key": "a58eba5d-4700-4e1a-a8c2-fd0debdd550c",
                  "totalChanges": 4,
                  "breakingChanges": 1,
                  "children": [
                    {
                      "titleString": "PUT",
                      "key": "03c3f86c-783d-4597-80be-b3bc2f65dc01",
                      "totalChanges": 4,
                      "breakingChanges": 1,
                      "children": [
                        {
                          "titleString": "tags",
                          "key": "1a003739-5b37-4939-b1ab-cbd6b65d0b2f",
                          "isLeaf": true,
                          "selectable": true,
                          "change": {
                            "context": {
                              "newLine": 56,
                              "newColumn": 11
                            },
                            "change": 2,
                            "property": "tags",
                            "new": "jazz",
                            "breaking": false
                          }
                        },
                        {
                          "titleString": "summary",
                          "key": "bbe9adf6-5245-4f53-9f23-3b8cd4a936cb",
                          "isLeaf": true,
                          "selectable": true,
                          "change": {
                            "context": {
                              "originalLine": 53,
                              "originalColumn": 20,
                              "newLine": 58,
                              "newColumn": 20
                            },
                            "change": 1,
                            "property": "summary",
                            "original": "Update an existing pet",
                            "new": "Update an existing pet, but with Jazz",
                            "breaking": false
                          }
                        },
                        {
                          "titleString": "Responses",
                          "key": "3f194246-3a71-48e1-8e2e-157bdf8c50bc",
                          "totalChanges": 1,
                          "children": [
                            {
                              "titleString": "418",
                              "key": "fa494d13-5869-4d97-a302-dc6730cdef55",
                              "isLeaf": true,
                              "selectable": true,
                              "change": {
                                "context": {
                                  "newLine": 107,
                                  "newColumn": 18
                                },
                                "change": 3,
                                "property": "codes",
                                "new": "418",
                                "breaking": false
                              }
                            }
                          ]
                        },
                        {
                          "titleString": "Requestbody",
                          "key": "9a0746cd-7784-4abc-b0f2-2c5fab04fbc1",
                          "totalChanges": 1,
                          "breakingChanges": 1,
                          "children": [
                            {
                              "titleString": "required",
                              "key": "f5dd0fa0-8c37-4b82-8fe0-683d5b20c83d",
                              "isLeaf": true,
                              "selectable": true,
                              "change": {
                                "context": {
                                  "originalLine": 75,
                                  "originalColumn": 23,
                                  "newLine": 80,
                                  "newColumn": 23
                                },
                                "change": 1,
                                "property": "required",
                                "original": "true",
                                "new": "false",
                                "breaking": true
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "titleString": "/pet/findByTags",
                  "key": "ab4f6192-688e-463b-b336-7542e0ca2477",
                  "totalChanges": 2,
                  "breakingChanges": 1,
                  "children": [
                    {
                      "titleString": "GET",
                      "key": "83fad8de-23cb-490b-8752-a4410ad25a56",
                      "totalChanges": 2,
                      "breakingChanges": 1,
                      "children": [
                        {
                          "titleString": "tags",
                          "key": "7b0934e1-a50f-4c80-9cb3-63a5c3b99e9b",
                          "isLeaf": true,
                          "selectable": true,
                          "change": {
                            "context": {
                              "newLine": 244,
                              "newColumn": 11
                            },
                            "change": 2,
                            "property": "tags",
                            "new": "jazz",
                            "breaking": false
                          }
                        },
                        {
                          "titleString": "Parameters",
                          "key": "0956aee1-66b2-4fa9-832d-608e7d53e861",
                          "children": [
                            {
                              "titleString": "Schema",
                              "key": "8bbebff8-1c91-4bf5-9d2e-5a68da3aaefc",
                              "totalChanges": 1,
                              "breakingChanges": 1,
                              "children": [
                                {
                                  "titleString": "Schema",
                                  "key": "eeab6707-7e79-47b1-a14d-0fdd3c79b3c1",
                                  "totalChanges": 1,
                                  "breakingChanges": 1,
                                  "children": [
                                    {
                                      "titleString": "type",
                                      "key": "53c915cb-bc36-4930-a712-1f99052a0caf",
                                      "isLeaf": true,
                                      "selectable": true,
                                      "change": {
                                        "context": {
                                          "originalLine": 250,
                                          "originalColumn": 25,
                                          "newLine": 259,
                                          "newColumn": 25
                                        },
                                        "change": 1,
                                        "property": "type",
                                        "original": "string",
                                        "new": "int",
                                        "breaking": true
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "titleString": "Tags",
              "key": "8b67e1b4-01ad-401d-89f6-45dc90a68800",
              "children": [
                {
                  "titleString": "jazz",
                  "key": "e7c22c46-8244-41be-96e5-12c21b6e0885",
                  "isLeaf": true,
                  "selectable": true,
                  "change": {
                    "context": {
                      "newLine": 46,
                      "newColumn": 5
                    },
                    "change": 3,
                    "property": "jazz",
                    "breaking": false
                  }
                }
              ]
            },
            {
              "titleString": "Components",
              "key": "caf75728-b314-40d0-a81e-48f697f14e8e",
              "totalChanges": 1,
              "children": [
                {
                  "titleString": "petstore_auth",
                  "key": "52226cb7-7fe3-4019-9e7b-9e35943483cb",
                  "totalChanges": 1,
                  "children": [
                    {
                      "titleString": "oAuth Flows",
                      "key": "4aecb518-aea5-4fe5-a01e-6328b815770e",
                      "totalChanges": 1,
                      "children": [
                        {
                          "titleString": "oAuth Flow",
                          "key": "5cb3042c-b062-47b0-83bb-5d055c6f5314",
                          "totalChanges": 1,
                          "children": [
                            {
                              "titleString": "scopes",
                              "key": "ec04c4bf-64c7-4bcf-81ec-c6d54c980c68",
                              "isLeaf": true,
                              "selectable": true,
                              "change": {
                                "context": {
                                  "newLine": 1223,
                                  "newColumn": 29
                                },
                                "change": 3,
                                "property": "scopes",
                                "new": "enjoy more jazz.",
                                "breaking": false
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "graph": {
        "nodes": [
          {
            "id": "root",
            "text": "Document",
            "height": 25
          },
          {
            "id": "info-5e898e",
            "disabled": true,
            "text": "info",
            "height": 25,
            "width": 150
          },
          {
            "id": "title-d98dc6",
            "text": "title",
            "height": 45,
            "width": 250,
            "data": {
              "context": {
                "originalLine": 4,
                "originalColumn": 14,
                "newLine": 4,
                "newColumn": 14
              },
              "change": 1,
              "property": "title",
              "original": "Swagger Petstore - OpenAPI 3.0",
              "new": "Swagger Petstore - OpenAPI 3.0, With More Jazz",
              "breaking": false
            }
          },
          {
            "id": "description-c6fdfb",
            "text": "description",
            "height": 45,
            "width": 250,
            "data": {
              "context": {
                "originalLine": 5,
                "originalColumn": 20,
                "newLine": 5,
                "newColumn": 20
              },
              "change": 1,
              "property": "description",
              "original": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
              "new": "Jazz in the morning, Jazz in the evening.",
              "breaking": false
            }
          },
          {
            "id": "termsofservice-697d2c",
            "text": "termsOfService",
            "height": 45,
            "width": 250,
            "data": {
              "context": {
                "originalLine": 6,
                "originalColumn": 23,
                "newLine": 6,
                "newColumn": 23
              },
              "change": 1,
              "property": "termsOfService",
              "original": "http://swagger.io/terms/",
              "new": "http://jazzyjazzjazzy.com",
              "breaking": false
            }
          },
          {
            "id": "contact-cccc7e",
            "disabled": true,
            "text": "contact",
            "height": 25,
            "width": 150
          },
          {
            "id": "email-692879",
            "text": "email",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 8,
                "originalColumn": 16,
                "newLine": 8,
                "newColumn": 16
              },
              "change": 1,
              "property": "email",
              "original": "apiteam@swagger.io",
              "new": "jazz@swagger.io",
              "breaking": false
            }
          },
          {
            "id": "paths-4c7704",
            "disabled": true,
            "text": "paths",
            "height": 25,
            "width": 150
          },
          {
            "id": "/pet-aca3db",
            "disabled": true,
            "text": "/pet",
            "height": 25,
            "width": 150
          },
          {
            "id": "put-1e6fe7",
            "disabled": true,
            "text": "put",
            "height": 25,
            "width": 150
          },
          {
            "id": "tags-800622",
            "text": "tags",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 56,
                "newColumn": 11
              },
              "change": 2,
              "property": "tags",
              "new": "jazz",
              "breaking": false
            }
          },
          {
            "id": "summary-1396d9",
            "text": "summary",
            "height": 45,
            "width": 250,
            "data": {
              "context": {
                "originalLine": 53,
                "originalColumn": 20,
                "newLine": 58,
                "newColumn": 20
              },
              "change": 1,
              "property": "summary",
              "original": "Update an existing pet",
              "new": "Update an existing pet, but with Jazz",
              "breaking": false
            }
          },
          {
            "id": "responses-fe5a06",
            "disabled": true,
            "text": "responses",
            "height": 25,
            "width": 150
          },
          {
            "id": "codes-7b44bf",
            "text": "codes",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 107,
                "newColumn": 18
              },
              "change": 3,
              "property": "codes",
              "new": "418",
              "breaking": false
            }
          },
          {
            "id": "requestbody-2e273e",
            "disabled": true,
            "text": "requestbody",
            "height": 25,
            "width": 150
          },
          {
            "id": "required-e90c50",
            "text": "required",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 75,
                "originalColumn": 23,
                "newLine": 80,
                "newColumn": 23
              },
              "change": 1,
              "property": "required",
              "original": "true",
              "new": "false",
              "breaking": true
            }
          },
          {
            "id": "/pet/findbytags-ae4df4",
            "disabled": true,
            "text": "/pet/findbytags",
            "height": 25,
            "width": 150
          },
          {
            "id": "get-f9ac82",
            "disabled": true,
            "text": "get",
            "height": 25,
            "width": 150
          },
          {
            "id": "tags-87f7b4",
            "text": "tags",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 244,
                "newColumn": 11
              },
              "change": 2,
              "property": "tags",
              "new": "jazz",
              "breaking": false
            }
          },
          {
            "id": "parameters-7df038",
            "disabled": true,
            "text": "parameters",
            "height": 25,
            "width": 150
          },
          {
            "id": "schema-73ba0f",
            "disabled": true,
            "text": "schema",
            "height": 25,
            "width": 150
          },
          {
            "id": "schema-479922",
            "disabled": true,
            "text": "schema",
            "height": 25,
            "width": 150
          },
          {
            "id": "type-e0aecc",
            "text": "type",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 250,
                "originalColumn": 25,
                "newLine": 259,
                "newColumn": 25
              },
              "change": 1,
              "property": "type",
              "original": "string",
              "new": "int",
              "breaking": true
            }
          },
          {
            "id": "tags-563a3a",
            "disabled": true,
            "text": "tags",
            "height": 25,
            "width": 150
          },
          {
            "id": "jazz-a0472b",
            "text": "jazz",
            "height": 27,
            "width": 150,
            "data": {
              "context": {
                "newLine": 46,
                "newColumn": 5
              },
              "change": 3,
              "property": "jazz",
              "breaking": false
            }
          },
          {
            "id": "components-afd54d",
            "disabled": true,
            "text": "components",
            "height": 25,
            "width": 150
          },
          {
            "id": "petstore_auth-c9a5de",
            "disabled": true,
            "text": "petstore_auth",
            "height": 25,
            "width": 150
          },
          {
            "id": "oauth flows-f7e96a",
            "disabled": true,
            "text": "oauth flows",
            "height": 25,
            "width": 150
          },
          {
            "id": "oauth flow-a31c54",
            "disabled": true,
            "text": "oauth flow",
            "height": 25,
            "width": 150
          },
          {
            "id": "scopes-1f63e5",
            "text": "scopes",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 1223,
                "newColumn": 29
              },
              "change": 3,
              "property": "scopes",
              "new": "enjoy more jazz.",
              "breaking": false
            }
          }
        ],
        "edges": [
          {
            "id": "root-to-info-5e898e",
            "from": "root",
            "to": "info-5e898e"
          },
          {
            "id": "info-5e898e-to-title-d98dc6",
            "from": "info-5e898e",
            "to": "title-d98dc6"
          },
          {
            "id": "info-5e898e-to-description-c6fdfb",
            "from": "info-5e898e",
            "to": "description-c6fdfb"
          },
          {
            "id": "info-5e898e-to-termsofservice-697d2c",
            "from": "info-5e898e",
            "to": "termsofservice-697d2c"
          },
          {
            "id": "info-5e898e-to-contact-cccc7e",
            "from": "info-5e898e",
            "to": "contact-cccc7e"
          },
          {
            "id": "contact-cccc7e-to-email-692879",
            "from": "contact-cccc7e",
            "to": "email-692879"
          },
          {
            "id": "root-to-paths-4c7704",
            "from": "root",
            "to": "paths-4c7704"
          },
          {
            "id": "paths-4c7704-to-/pet-aca3db",
            "from": "paths-4c7704",
            "to": "/pet-aca3db"
          },
          {
            "id": "/pet-aca3db-to-put-1e6fe7",
            "from": "/pet-aca3db",
            "to": "put-1e6fe7"
          },
          {
            "id": "put-1e6fe7-to-tags-800622",
            "from": "put-1e6fe7",
            "to": "tags-800622"
          },
          {
            "id": "put-1e6fe7-to-summary-1396d9",
            "from": "put-1e6fe7",
            "to": "summary-1396d9"
          },
          {
            "id": "put-1e6fe7-to-responses-fe5a06",
            "from": "put-1e6fe7",
            "to": "responses-fe5a06"
          },
          {
            "id": "responses-fe5a06-to-codes-7b44bf",
            "from": "responses-fe5a06",
            "to": "codes-7b44bf"
          },
          {
            "id": "put-1e6fe7-to-requestbody-2e273e",
            "from": "put-1e6fe7",
            "to": "requestbody-2e273e"
          },
          {
            "id": "requestbody-2e273e-to-required-e90c50",
            "from": "requestbody-2e273e",
            "to": "required-e90c50"
          },
          {
            "id": "paths-4c7704-to-/pet/findbytags-ae4df4",
            "from": "paths-4c7704",
            "to": "/pet/findbytags-ae4df4"
          },
          {
            "id": "/pet/findbytags-ae4df4-to-get-f9ac82",
            "from": "/pet/findbytags-ae4df4",
            "to": "get-f9ac82"
          },
          {
            "id": "get-f9ac82-to-tags-87f7b4",
            "from": "get-f9ac82",
            "to": "tags-87f7b4"
          },
          {
            "id": "get-f9ac82-to-parameters-7df038",
            "from": "get-f9ac82",
            "to": "parameters-7df038"
          },
          {
            "id": "parameters-7df038-to-schema-73ba0f",
            "from": "parameters-7df038",
            "to": "schema-73ba0f"
          },
          {
            "id": "schema-73ba0f-to-schema-479922",
            "from": "schema-73ba0f",
            "to": "schema-479922"
          },
          {
            "id": "schema-479922-to-type-e0aecc",
            "from": "schema-479922",
            "to": "type-e0aecc"
          },
          {
            "id": "root-to-tags-563a3a",
            "from": "root",
            "to": "tags-563a3a"
          },
          {
            "id": "tags-563a3a-to-jazz-a0472b",
            "from": "tags-563a3a",
            "to": "jazz-a0472b"
          },
          {
            "id": "root-to-components-afd54d",
            "from": "root",
            "to": "components-afd54d"
          },
          {
            "id": "components-afd54d-to-petstore_auth-c9a5de",
            "from": "components-afd54d",
            "to": "petstore_auth-c9a5de"
          },
          {
            "id": "petstore_auth-c9a5de-to-oauth flows-f7e96a",
            "from": "petstore_auth-c9a5de",
            "to": "oauth flows-f7e96a"
          },
          {
            "id": "oauth flows-f7e96a-to-oauth flow-a31c54",
            "from": "oauth flows-f7e96a",
            "to": "oauth flow-a31c54"
          },
          {
            "id": "oauth flow-a31c54-to-scopes-1f63e5",
            "from": "oauth flow-a31c54",
            "to": "scopes-1f63e5"
          }
        ]
      },
      "statistics": {
        "total": 12,
        "totalBreaking": 2,
        "added": 5,
        "modified": 7,
        "removed": 0,
        "breakingAdded": 0,
        "breakingModified": 2,
        "breakingRemoved": 0,
        "commit": {
          "date": "04 Dec 2022 10:31:32 -0500",
          "message": "Do you like Jazz? Lets Jazz up this spec a little.\n\nLots of jazz.\n",
          "author": "Dave Shanley",
          "authorEmail": "dave@quobix.com",
          "hash": "7e9906d44ac239f82c471463d4211b3e04811d85"
        }
      }
    },
    {
      "originalSpec": "",
      "modifiedSpec": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Swagger Petstore - OpenAPI 3.0\",\n    \"description\": \"This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\\nSwagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\\n\\nSome useful links:\\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)\",\n    \"termsOfService\": \"http://swagger.io/terms/\",\n    \"contact\": {\n      \"email\": \"apiteam@swagger.io\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.11\"\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Swagger\",\n    \"url\": \"http://swagger.io\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/v3\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"pet\",\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"store\",\n      \"description\": \"Access to Petstore orders\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about user\"\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Update an existing pet\",\n        \"description\": \"Update an existing pet by Id\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"description\": \"Update an existent pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"description\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"description\": \"Create a new pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"available\",\n              \"enum\": [\n                \"available\",\n                \"pending\",\n                \"sold\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid status value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          },\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"description\": \"\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Deletes a pet\",\n        \"description\": \"\",\n        \"operationId\": \"deletePet\",\n        \"parameters\": [\n          {\n            \"name\": \"api_key\",\n            \"in\": \"header\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"Pet id to delete\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid pet value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"description\": \"\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"additionalMetadata\",\n            \"in\": \"query\",\n            \"description\": \"Additional Metadata\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/octet-stream\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"description\": \"Place a new order in the store\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values will generate exceptions.\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of order that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c 1000. Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"description\": \"Created user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"description\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs user into the system\",\n        \"description\": \"\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out current logged in user session\",\n        \"description\": \"\",\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get user by user name\",\n        \"description\": \"\",\n        \"operationId\": \"getUserByName\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Update an existent user in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Order\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 198772\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"example\": 7\n          },\n          \"shipDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"example\": \"approved\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\"\n            ]\n          },\n          \"complete\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"order\"\n        }\n      },\n      \"Customer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 100000\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"fehguy\"\n          },\n          \"address\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"addresses\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Address\"\n            }\n          }\n        },\n        \"xml\": {\n          \"name\": \"customer\"\n        }\n      },\n      \"Address\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"street\": {\n            \"type\": \"string\",\n            \"example\": \"437 Lytton\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"example\": \"Palo Alto\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"example\": \"CA\"\n          },\n          \"zip\": {\n            \"type\": \"string\",\n            \"example\": \"94301\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"address\"\n        }\n      },\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Dogs\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"category\"\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"theUser\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"example\": \"John\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"example\": \"James\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"john@email.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"phone\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        },\n        \"xml\": {\n          \"name\": \"user\"\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"tag\"\n        }\n      },\n      \"Pet\": {\n        \"required\": [\n          \"name\",\n          \"photoUrls\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"doggie\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\",\n              \"xml\": {\n                \"name\": \"photoUrl\"\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\"\n            ]\n          }\n        },\n        \"xml\": {\n          \"name\": \"pet\"\n        }\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"##default\"\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"Pet\": {\n        \"description\": \"Pet object that needs to be added to the store\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        }\n      },\n      \"UserArray\": {\n        \"description\": \"List of user object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"petstore_auth\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"https://petstore3.swagger.io/oauth/authorize\",\n            \"scopes\": {\n              \"write:pets\": \"modify pets in your account\",\n              \"read:pets\": \"read your pets\"\n            }\n          }\n        }\n      },\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}",
      "statistics": {
        "total": 0,
        "totalBreaking": 0,
        "added": 0,
        "modified": 0,
        "removed": 0,
        "breakingAdded": 0,
        "breakingModified": 0,
        "breakingRemoved": 0,
        "commit": {
          "date": "04 Dec 2022 10:27:23 -0500",
          "message": "Added petstore as sample spec with a git history.\n",
          "author": "Dave Shanley",
          "authorEmail": "dave@quobix.com",
          "hash": "3f46869a164b44bf93a873e3cf961b29019395b9"
        }
      }
    }
  ]
}