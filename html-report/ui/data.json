{
  "dateGenerated": "Thu, 12 Jan 2023 06:29:46 -2900",
  "reportItems": [
    {
      "originalSpec": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Swagger Petstore - OpenAPI 3.0, With More Jazz\",\n    \"description\": \"Jazz in the morning, Jazz in the evening.\",\n    \"termsOfService\": \"http://jazzyjazzjazzy.com\",\n    \"contact\": {\n      \"email\": \"jazz@swagger.io\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.11\"\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Swagger\",\n    \"url\": \"http://swagger.io\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/v3\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"pet\",\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"store\",\n      \"description\": \"Access to Petstore orders\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about user\"\n    },\n    {\n      \"name\": \"jazz\",\n      \"description\": \"Everyone loves jazz!\"\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Update an existing pet, but with Jazz\",\n        \"description\": \"Update an existing pet by Id\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"description\": \"Update an existent pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          },\n          \"418\": {\n            \"description\": \"Teapot Jazz\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"patch\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"description\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"description\": \"Create a new pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\",\n              \"jammy:jelly\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"available\",\n              \"enum\": [\n                \"available\",\n                \"pending\",\n                \"sold\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"int\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          },\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"description\": \"\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"description\": \"\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"additionalMetadata\",\n            \"in\": \"query\",\n            \"description\": \"Additional Metadata\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/octet-stream\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"description\": \"Place a new order in the store\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values will generate exceptions.\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of order that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c 1000. Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"description\": \"Created user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"description\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs user into the system, without jazz\",\n        \"description\": \"\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation, even if not jazzy\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out current logged in user session\",\n        \"description\": \"\",\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get user by user name\",\n        \"description\": \"\",\n        \"operationId\": \"getUserByNameAndNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Update an existent user in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"jazz\"\n        ],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUserButNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Order\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 198772\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"example\": 7\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"example\": \"approved\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\",\n              \"burgers\"\n            ]\n          },\n          \"complete\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"order\"\n        }\n      },\n      \"Customer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 100000\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"burgers\"\n          },\n          \"address\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"addresses\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Address\"\n            }\n          }\n        },\n        \"xml\": {\n          \"name\": \"customer\"\n        }\n      },\n      \"Address\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"street\": {\n            \"type\": \"string\",\n            \"example\": \"437 Lytton\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"example\": \"Palo Alto\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"example\": \"CA\"\n          },\n          \"zip\": {\n            \"type\": \"string\",\n            \"example\": \"94301\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"address\"\n        }\n      },\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Dogs\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"category\"\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"theUser\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"example\": \"John\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"example\": \"James\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"john@jazzclubinjazztown.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"example\": \"JAZZCLUB\"\n          },\n          \"phone\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        },\n        \"xml\": {\n          \"name\": \"user\"\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"tag\"\n        }\n      },\n      \"Pet\": {\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"jazz\": {\n            \"type\": \"string\",\n            \"example\": \"too much jazz! this is too much\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\",\n              \"xml\": {\n                \"name\": \"photoUrl\"\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\",\n              \"jazzedOut\"\n            ]\n          }\n        },\n        \"xml\": {\n          \"name\": \"pet\"\n        }\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"##default\"\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"Pet\": {\n        \"description\": \"Pet object that needs to be added to the store\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        }\n      },\n      \"UserArray\": {\n        \"description\": \"List of user object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"petstore_auth\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"https://petstore3.swagger.io/oauth/authorize\",\n            \"scopes\": {\n              \"write:pets\": \"modify pets in your account\",\n              \"read:pets\": \"read your pets\",\n              \"jazz:jazzy\": \"enjoy more jazz.\"\n            }\n          }\n        }\n      },\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}",
      "modifiedSpec": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Swagger Petstore - OpenAPI 3.0, With More Jazz\",\n    \"description\": \"Jazz in the morning, Jazz in the evening.\",\n    \"termsOfService\": \"http://jazzyjazzjazzy.com\",\n    \"contact\": {\n      \"email\": \"jazz@swagger.io\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.11\"\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Swagger\",\n    \"url\": \"http://swagger.io\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/v3\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"pet\",\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"store\",\n      \"description\": \"Access to Petstore orders\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about user\"\n    },\n    {\n      \"name\": \"jazz\",\n      \"description\": \"Everyone loves jazz!\"\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Update an existing pet, but with Jazz\",\n        \"description\": \"Update an existing pet by Id\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"description\": \"Update an existent pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          },\n          \"418\": {\n            \"description\": \"Teapot Jazz\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"patch\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"description\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"description\": \"Create a new pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\",\n              \"jammy:jelly\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"available\",\n              \"enum\": [\n                \"available\",\n                \"pending\",\n                \"sold\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"int\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a single pet, and hopefully no more jazz.\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          },\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\",\n              \"eat:tacos\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"description\": \"\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"description\": \"adding in a description\",\n        \"operationId\": \"uploadFileAndDoADance\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"additionalMetadata\",\n            \"in\": \"query\",\n            \"description\": \"Additional Metadata\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/octet-stream\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"description\": \"Place a new order in the store\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values will generate exceptions.\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of order that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied and all the jazz has gone.\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c 1000. Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"description\": \"Created user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"description\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs user into the system, without jazz\",\n        \"description\": \"\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation, even if not jazzy\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out current logged in user session\",\n        \"description\": \"\",\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get user by user name\",\n        \"description\": \"\",\n        \"operationId\": \"getUserByNameAndNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Update an existent user in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"jazz\",\n          \"cookies\"\n        ],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUserButNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Order\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 198772\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"example\": 7\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"example\": \"approved\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\",\n              \"burgers\"\n            ]\n          },\n          \"complete\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"order\"\n        }\n      },\n      \"Customer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 100000\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"burgers\"\n          },\n          \"address\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"addresses\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Address\"\n            }\n          }\n        },\n        \"xml\": {\n          \"name\": \"customer\"\n        }\n      },\n      \"Address\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"street\": {\n            \"type\": \"string\",\n            \"example\": \"437 Lytton\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"example\": \"Palo Alto\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"example\": \"CA\"\n          },\n          \"zip\": {\n            \"type\": \"string\",\n            \"example\": \"94301\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"address\"\n        }\n      },\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Dogs\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"category\"\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"theUser\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"example\": \"John\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"example\": \"James\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"john@jazzclubinjazztown.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"example\": \"JAZZCLUB\"\n          },\n          \"phone\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        },\n        \"xml\": {\n          \"name\": \"user\"\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"tag\"\n        }\n      },\n      \"Pet\": {\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"jazz\": {\n            \"type\": \"string\",\n            \"example\": \"too much jazz! this is too much\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\",\n              \"xml\": {\n                \"name\": \"photoUrl\"\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\",\n              \"jazzedOut\"\n            ]\n          }\n        },\n        \"xml\": {\n          \"name\": \"pet\"\n        }\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"##default\"\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"Pet\": {\n        \"description\": \"Pet object that needs to be added to the store, now let's jazz!\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        }\n      },\n      \"UserArray\": {\n        \"description\": \"List of user object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"petstore_auth\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"https://petstore3.swagger.io/oauth/authorize\",\n            \"scopes\": {\n              \"write:pets\": \"modify pets in your account\",\n              \"read:pets\": \"read your pets\",\n              \"jazz:jazzy\": \"enjoy more jazz.\"\n            }\n          }\n        }\n      },\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}",
      "documentChanges": {
        "paths": {
          "pathItems": {
            "/pet/{petId}": {
              "get": {
                "changes": [
                  {
                    "context": {
                      "originalLine": 301,
                      "originalColumn": 24,
                      "newLine": 301,
                      "newColumn": 24
                    },
                    "change": 1,
                    "property": "description",
                    "original": "Returns a single pet",
                    "new": "Returns a single pet, and hopefully no more jazz.",
                    "breaking": false
                  }
                ],
                "parameters": [
                  {
                    "changes": [
                      {
                        "context": {
                          "originalLine": 308,
                          "originalColumn": 25,
                          "newLine": 308,
                          "newColumn": 25
                        },
                        "change": 1,
                        "property": "required",
                        "original": "true",
                        "new": "false",
                        "breaking": true
                      }
                    ],
                    "schemas": {
                      "changes": [
                        {
                          "context": {
                            "originalLine": 311,
                            "originalColumn": 25,
                            "newLine": 311,
                            "newColumn": 25
                          },
                          "change": 1,
                          "property": "format",
                          "original": "int64",
                          "new": "int32",
                          "breaking": true
                        }
                      ]
                    }
                  }
                ],
                "securityRequirements": [
                  {
                    "changes": [
                      {
                        "context": {
                          "newLine": 346,
                          "newColumn": 15
                        },
                        "change": 3,
                        "property": "security",
                        "new": "eat:tacos",
                        "breaking": false
                      }
                    ]
                  }
                ]
              }
            },
            "/pet/{petId}/uploadImage": {
              "changes": [
                {
                  "context": {
                    "newLine": 402,
                    "newColumn": 14
                  },
                  "change": 2,
                  "property": "put",
                  "breaking": false
                },
                {
                  "context": {
                    "originalLine": 401,
                    "originalColumn": 15
                  },
                  "change": 5,
                  "property": "post",
                  "breaking": true
                }
              ]
            },
            "/store/order/{orderId}": {
              "get": {
                "responses": {
                  "changes": [
                    {
                      "context": {
                        "originalLine": 575,
                        "originalColumn": 18
                      },
                      "change": 4,
                      "property": "codes",
                      "original": "404",
                      "breaking": true
                    }
                  ],
                  "response": {
                    "400": {
                      "changes": [
                        {
                          "context": {
                            "originalLine": 573,
                            "originalColumn": 28,
                            "newLine": 574,
                            "newColumn": 28
                          },
                          "change": 1,
                          "property": "description",
                          "original": "Invalid ID supplied",
                          "new": "Invalid ID supplied and all the jazz has gone.",
                          "breaking": false
                        }
                      ]
                    }
                  }
                }
              },
              "delete": {
                "parameters": [
                  {
                    "changes": [
                      {
                        "context": {
                          "originalLine": 592,
                          "originalColumn": 25,
                          "newLine": 590,
                          "newColumn": 25
                        },
                        "change": 1,
                        "property": "required",
                        "original": "true",
                        "new": "false",
                        "breaking": true
                      }
                    ]
                  }
                ]
              }
            },
            "/user/{username}": {
              "delete": {
                "changes": [
                  {
                    "context": {
                      "newLine": 868,
                      "newColumn": 11
                    },
                    "change": 2,
                    "property": "tags",
                    "new": "cookies",
                    "breaking": false
                  }
                ]
              }
            }
          }
        }
      },
      "tree": {
        "titleString": "Document",
        "key": "root",
        "children": [
          {
            "titleString": "Paths",
            "key": "dc2e473f-c2d2-40be-8d46-b1b93e73eb55",
            "totalChanges": 10,
            "breakingChanges": 5,
            "children": [
              {
                "titleString": "/user/{username}",
                "key": "aa2a9bd0-a69a-4e8d-b555-de9103101c1b",
                "totalChanges": 1,
                "children": [
                  {
                    "titleString": "DELETE",
                    "key": "015f08cd-d5f2-4df6-b434-bce6c71fd77a",
                    "totalChanges": 1,
                    "children": [
                      {
                        "titleString": "tags",
                        "key": "a90f1dec-2c23-4802-9ba1-ba09cc5c90c5",
                        "isLeaf": true,
                        "selectable": true,
                        "change": {
                          "context": {
                            "newLine": 868,
                            "newColumn": 11
                          },
                          "change": 2,
                          "property": "tags",
                          "new": "cookies",
                          "breaking": false
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "titleString": "/store/order/{orderId}",
                "key": "e3193d72-337f-4b4c-966c-a35e7bbca7ab",
                "totalChanges": 3,
                "breakingChanges": 2,
                "children": [
                  {
                    "titleString": "GET",
                    "key": "f69974af-fcb8-4f89-af25-68c7861986fa",
                    "totalChanges": 2,
                    "breakingChanges": 1,
                    "children": [
                      {
                        "titleString": "Responses",
                        "key": "48ca9099-f30d-4545-87d2-a755417910d5",
                        "totalChanges": 2,
                        "breakingChanges": 1,
                        "children": [
                          {
                            "titleString": "404",
                            "key": "7364ac17-1909-4667-bd80-e836ca04922a",
                            "isLeaf": true,
                            "selectable": true,
                            "change": {
                              "context": {
                                "originalLine": 575,
                                "originalColumn": 18
                              },
                              "change": 4,
                              "property": "codes",
                              "original": "404",
                              "breaking": true
                            }
                          },
                          {
                            "titleString": "400",
                            "key": "42f310d2-b93f-410e-b875-4f5994cd1fde",
                            "totalChanges": 1,
                            "children": [
                              {
                                "titleString": "description",
                                "key": "9cf2f45a-3f2a-4b08-b25f-8f024072be95",
                                "isLeaf": true,
                                "selectable": true,
                                "change": {
                                  "context": {
                                    "originalLine": 573,
                                    "originalColumn": 28,
                                    "newLine": 574,
                                    "newColumn": 28
                                  },
                                  "change": 1,
                                  "property": "description",
                                  "original": "Invalid ID supplied",
                                  "new": "Invalid ID supplied and all the jazz has gone.",
                                  "breaking": false
                                }
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "titleString": "DELETE",
                    "key": "38250058-e2a3-4453-a9fd-d432447440f8",
                    "totalChanges": 1,
                    "breakingChanges": 1,
                    "children": [
                      {
                        "titleString": "Parameters",
                        "key": "46b03efa-e102-4c81-8b84-e723e9f918cf",
                        "children": [
                          {
                            "titleString": "required",
                            "key": "730172a9-7b6a-4cd6-bf58-5bc4e8e37645",
                            "isLeaf": true,
                            "selectable": true,
                            "change": {
                              "context": {
                                "originalLine": 592,
                                "originalColumn": 25,
                                "newLine": 590,
                                "newColumn": 25
                              },
                              "change": 1,
                              "property": "required",
                              "original": "true",
                              "new": "false",
                              "breaking": true
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "titleString": "/pet/{petId}/uploadImage",
                "key": "baa09d65-0e33-416a-85ca-2e0e8baf5955",
                "totalChanges": 2,
                "breakingChanges": 1,
                "children": [
                  {
                    "titleString": "put",
                    "key": "1ded37f0-0147-464b-beb3-5e7d44b0a3e8",
                    "isLeaf": true,
                    "selectable": true,
                    "change": {
                      "context": {
                        "newLine": 402,
                        "newColumn": 14
                      },
                      "change": 2,
                      "property": "put",
                      "breaking": false
                    }
                  },
                  {
                    "titleString": "post",
                    "key": "0646aac6-de71-4883-ad56-87ad310e7bad",
                    "isLeaf": true,
                    "selectable": true,
                    "change": {
                      "context": {
                        "originalLine": 401,
                        "originalColumn": 15
                      },
                      "change": 5,
                      "property": "post",
                      "breaking": true
                    }
                  }
                ]
              },
              {
                "titleString": "/pet/{petId}",
                "key": "a4731179-5705-4fd8-9cb0-6ec8631f33a6",
                "totalChanges": 4,
                "breakingChanges": 2,
                "children": [
                  {
                    "titleString": "GET",
                    "key": "4add7639-2eba-41ca-8af5-cdeb9810499d",
                    "totalChanges": 4,
                    "breakingChanges": 2,
                    "children": [
                      {
                        "titleString": "description",
                        "key": "75c3434d-7d05-46de-9b4e-1d1479ff5b0d",
                        "isLeaf": true,
                        "selectable": true,
                        "change": {
                          "context": {
                            "originalLine": 301,
                            "originalColumn": 24,
                            "newLine": 301,
                            "newColumn": 24
                          },
                          "change": 1,
                          "property": "description",
                          "original": "Returns a single pet",
                          "new": "Returns a single pet, and hopefully no more jazz.",
                          "breaking": false
                        }
                      },
                      {
                        "titleString": "Parameters",
                        "key": "9cb8d0df-8a2d-42e6-b513-1ec69774a819",
                        "children": [
                          {
                            "titleString": "required",
                            "key": "3d07cf4f-e56e-4121-82f2-e7ee61add36d",
                            "isLeaf": true,
                            "selectable": true,
                            "change": {
                              "context": {
                                "originalLine": 308,
                                "originalColumn": 25,
                                "newLine": 308,
                                "newColumn": 25
                              },
                              "change": 1,
                              "property": "required",
                              "original": "true",
                              "new": "false",
                              "breaking": true
                            }
                          },
                          {
                            "titleString": "Schema",
                            "key": "2afa6002-ef18-4eb2-800b-2e1efba1f235",
                            "totalChanges": 1,
                            "breakingChanges": 1,
                            "children": [
                              {
                                "titleString": "format",
                                "key": "cc5b8aea-1b9f-4d73-aa26-c8bc2d99da43",
                                "isLeaf": true,
                                "selectable": true,
                                "change": {
                                  "context": {
                                    "originalLine": 311,
                                    "originalColumn": 25,
                                    "newLine": 311,
                                    "newColumn": 25
                                  },
                                  "change": 1,
                                  "property": "format",
                                  "original": "int64",
                                  "new": "int32",
                                  "breaking": true
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "titleString": "Security Requirements",
                        "key": "41652e0d-ca5c-4d8c-8832-2a3067413b67",
                        "children": [
                          {
                            "titleString": "security",
                            "key": "4effe522-92b3-4b72-8e5a-4c2184803c2d",
                            "isLeaf": true,
                            "selectable": true,
                            "change": {
                              "context": {
                                "newLine": 346,
                                "newColumn": 15
                              },
                              "change": 3,
                              "property": "security",
                              "new": "eat:tacos",
                              "breaking": false
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "graph": {
        "nodes": [
          {
            "id": "root",
            "text": "Document",
            "height": 25
          },
          {
            "id": "paths-efae25",
            "disabled": true,
            "text": "paths",
            "height": 25,
            "width": 150
          },
          {
            "id": "/user/{username}-c1a07f",
            "disabled": true,
            "text": "/user/{username}",
            "height": 25,
            "width": 150
          },
          {
            "id": "delete-5fdc28",
            "disabled": true,
            "text": "delete",
            "height": 25,
            "width": 150
          },
          {
            "id": "tags-7cd2a8",
            "text": "tags",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 868,
                "newColumn": 11
              },
              "change": 2,
              "property": "tags",
              "new": "cookies",
              "breaking": false
            }
          },
          {
            "id": "/store/order/{orderid}-0b4918",
            "disabled": true,
            "text": "/store/order/{orderid}",
            "height": 25,
            "width": 190
          },
          {
            "id": "get-4bafad",
            "disabled": true,
            "text": "get",
            "height": 25,
            "width": 150
          },
          {
            "id": "responses-bf1d0c",
            "disabled": true,
            "text": "responses",
            "height": 25,
            "width": 150
          },
          {
            "id": "codes-cf7ccc",
            "text": "codes",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 575,
                "originalColumn": 18
              },
              "change": 4,
              "property": "codes",
              "original": "404",
              "breaking": true
            }
          },
          {
            "id": "400-9da96b",
            "disabled": true,
            "text": "400",
            "height": 25,
            "width": 150
          },
          {
            "id": "description-21fbcd",
            "text": "description",
            "height": 45,
            "width": 250,
            "data": {
              "context": {
                "originalLine": 573,
                "originalColumn": 28,
                "newLine": 574,
                "newColumn": 28
              },
              "change": 1,
              "property": "description",
              "original": "Invalid ID supplied",
              "new": "Invalid ID supplied and all the jazz has gone.",
              "breaking": false
            }
          },
          {
            "id": "delete-1ac20c",
            "disabled": true,
            "text": "delete",
            "height": 25,
            "width": 150
          },
          {
            "id": "parameters-baf35d",
            "disabled": true,
            "text": "parameters",
            "height": 25,
            "width": 150
          },
          {
            "id": "required-075762",
            "text": "required",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 592,
                "originalColumn": 25,
                "newLine": 590,
                "newColumn": 25
              },
              "change": 1,
              "property": "required",
              "original": "true",
              "new": "false",
              "breaking": true
            }
          },
          {
            "id": "/pet/{petid}/uploadimage-3abb87",
            "disabled": true,
            "text": "/pet/{petid}/uploadimage",
            "height": 25,
            "width": 220
          },
          {
            "id": "put-728b2c",
            "text": "put",
            "height": 27,
            "width": 150,
            "data": {
              "context": {
                "newLine": 402,
                "newColumn": 14
              },
              "change": 2,
              "property": "put",
              "breaking": false
            }
          },
          {
            "id": "post-a4355c",
            "text": "post",
            "height": 27,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 401,
                "originalColumn": 15
              },
              "change": 5,
              "property": "post",
              "breaking": true
            }
          },
          {
            "id": "/pet/{petid}-83b77f",
            "disabled": true,
            "text": "/pet/{petid}",
            "height": 25,
            "width": 150
          },
          {
            "id": "get-fb0cfd",
            "disabled": true,
            "text": "get",
            "height": 25,
            "width": 150
          },
          {
            "id": "description-ffae67",
            "text": "description",
            "height": 45,
            "width": 250,
            "data": {
              "context": {
                "originalLine": 301,
                "originalColumn": 24,
                "newLine": 301,
                "newColumn": 24
              },
              "change": 1,
              "property": "description",
              "original": "Returns a single pet",
              "new": "Returns a single pet, and hopefully no more jazz.",
              "breaking": false
            }
          },
          {
            "id": "parameters-8fa10e",
            "disabled": true,
            "text": "parameters",
            "height": 25,
            "width": 150
          },
          {
            "id": "required-669fd2",
            "text": "required",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 308,
                "originalColumn": 25,
                "newLine": 308,
                "newColumn": 25
              },
              "change": 1,
              "property": "required",
              "original": "true",
              "new": "false",
              "breaking": true
            }
          },
          {
            "id": "schema-11dc41",
            "disabled": true,
            "text": "schema",
            "height": 25,
            "width": 150
          },
          {
            "id": "format-331c39",
            "text": "format",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 311,
                "originalColumn": 25,
                "newLine": 311,
                "newColumn": 25
              },
              "change": 1,
              "property": "format",
              "original": "int64",
              "new": "int32",
              "breaking": true
            }
          },
          {
            "id": "security requirements-d02f34",
            "disabled": true,
            "text": "security requirements",
            "height": 25,
            "width": 175
          },
          {
            "id": "security-b68a46",
            "text": "security",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 346,
                "newColumn": 15
              },
              "change": 3,
              "property": "security",
              "new": "eat:tacos",
              "breaking": false
            }
          }
        ],
        "edges": [
          {
            "id": "root-to-paths-efae25",
            "from": "root",
            "to": "paths-efae25"
          },
          {
            "id": "paths-efae25-to-/user/{username}-c1a07f",
            "from": "paths-efae25",
            "to": "/user/{username}-c1a07f"
          },
          {
            "id": "/user/{username}-c1a07f-to-delete-5fdc28",
            "from": "/user/{username}-c1a07f",
            "to": "delete-5fdc28"
          },
          {
            "id": "delete-5fdc28-to-tags-7cd2a8",
            "from": "delete-5fdc28",
            "to": "tags-7cd2a8"
          },
          {
            "id": "paths-efae25-to-/store/order/{orderid}-0b4918",
            "from": "paths-efae25",
            "to": "/store/order/{orderid}-0b4918"
          },
          {
            "id": "/store/order/{orderid}-0b4918-to-get-4bafad",
            "from": "/store/order/{orderid}-0b4918",
            "to": "get-4bafad"
          },
          {
            "id": "get-4bafad-to-responses-bf1d0c",
            "from": "get-4bafad",
            "to": "responses-bf1d0c"
          },
          {
            "id": "responses-bf1d0c-to-codes-cf7ccc",
            "from": "responses-bf1d0c",
            "to": "codes-cf7ccc"
          },
          {
            "id": "responses-bf1d0c-to-400-9da96b",
            "from": "responses-bf1d0c",
            "to": "400-9da96b"
          },
          {
            "id": "400-9da96b-to-description-21fbcd",
            "from": "400-9da96b",
            "to": "description-21fbcd"
          },
          {
            "id": "/store/order/{orderid}-0b4918-to-delete-1ac20c",
            "from": "/store/order/{orderid}-0b4918",
            "to": "delete-1ac20c"
          },
          {
            "id": "delete-1ac20c-to-parameters-baf35d",
            "from": "delete-1ac20c",
            "to": "parameters-baf35d"
          },
          {
            "id": "parameters-baf35d-to-required-075762",
            "from": "parameters-baf35d",
            "to": "required-075762"
          },
          {
            "id": "paths-efae25-to-/pet/{petid}/uploadimage-3abb87",
            "from": "paths-efae25",
            "to": "/pet/{petid}/uploadimage-3abb87"
          },
          {
            "id": "/pet/{petid}/uploadimage-3abb87-to-put-728b2c",
            "from": "/pet/{petid}/uploadimage-3abb87",
            "to": "put-728b2c"
          },
          {
            "id": "/pet/{petid}/uploadimage-3abb87-to-post-a4355c",
            "from": "/pet/{petid}/uploadimage-3abb87",
            "to": "post-a4355c"
          },
          {
            "id": "paths-efae25-to-/pet/{petid}-83b77f",
            "from": "paths-efae25",
            "to": "/pet/{petid}-83b77f"
          },
          {
            "id": "/pet/{petid}-83b77f-to-get-fb0cfd",
            "from": "/pet/{petid}-83b77f",
            "to": "get-fb0cfd"
          },
          {
            "id": "get-fb0cfd-to-description-ffae67",
            "from": "get-fb0cfd",
            "to": "description-ffae67"
          },
          {
            "id": "get-fb0cfd-to-parameters-8fa10e",
            "from": "get-fb0cfd",
            "to": "parameters-8fa10e"
          },
          {
            "id": "parameters-8fa10e-to-required-669fd2",
            "from": "parameters-8fa10e",
            "to": "required-669fd2"
          },
          {
            "id": "parameters-8fa10e-to-schema-11dc41",
            "from": "parameters-8fa10e",
            "to": "schema-11dc41"
          },
          {
            "id": "schema-11dc41-to-format-331c39",
            "from": "schema-11dc41",
            "to": "format-331c39"
          },
          {
            "id": "get-fb0cfd-to-security requirements-d02f34",
            "from": "get-fb0cfd",
            "to": "security requirements-d02f34"
          },
          {
            "id": "security requirements-d02f34-to-security-b68a46",
            "from": "security requirements-d02f34",
            "to": "security-b68a46"
          }
        ]
      },
      "statistics": {
        "total": 10,
        "totalBreaking": 5,
        "added": 3,
        "modified": 5,
        "removed": 2,
        "breakingAdded": 0,
        "breakingModified": 3,
        "breakingRemoved": 2,
        "commit": {
          "date": "Sun, 4 Dec 2022 10:42:00 -4200",
          "message": "And now it's generally wrecked. But what a fun journey.\n",
          "author": "Dave Shanley",
          "authorEmail": "dave@quobix.com",
          "hash": "586a2c3db86d37a8309c9513a1bab7cb53002ba6"
        }
      }
    },
    {
      "originalSpec": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Swagger Petstore - OpenAPI 3.0, With More Jazz\",\n    \"description\": \"Jazz in the morning, Jazz in the evening.\",\n    \"termsOfService\": \"http://jazzyjazzjazzy.com\",\n    \"contact\": {\n      \"email\": \"jazz@swagger.io\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.11\"\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Swagger\",\n    \"url\": \"http://swagger.io\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/v3\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"pet\",\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"store\",\n      \"description\": \"Access to Petstore orders\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about user\"\n    },\n    {\n      \"name\": \"jazz\",\n      \"description\": \"Everyone loves jazz!\"\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Update an existing pet, but with Jazz\",\n        \"description\": \"Update an existing pet by Id\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"description\": \"Update an existent pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          },\n          \"418\": {\n            \"description\": \"Teapot Jazz\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"description\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"description\": \"Create a new pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"available\",\n              \"enum\": [\n                \"available\",\n                \"pending\",\n                \"sold\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"int\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          },\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"description\": \"\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Deletes a pet\",\n        \"description\": \"\",\n        \"operationId\": \"deletePet\",\n        \"parameters\": [\n          {\n            \"name\": \"api_key\",\n            \"in\": \"header\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"Pet id to delete\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid pet value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"description\": \"\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"additionalMetadata\",\n            \"in\": \"query\",\n            \"description\": \"Additional Metadata\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/octet-stream\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"description\": \"Place a new order in the store\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values will generate exceptions.\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of order that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c 1000. Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"description\": \"Created user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"description\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs user into the system, without jazz\",\n        \"description\": \"\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation, even if not jazzy\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out current logged in user session\",\n        \"description\": \"\",\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get user by user name\",\n        \"description\": \"\",\n        \"operationId\": \"getUserByNameAndNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Update an existent user in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"jazz\"\n        ],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUserButNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Order\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 198772\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"example\": 7\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"example\": \"approved\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\",\n              \"burgers\"\n            ]\n          },\n          \"complete\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"order\"\n        }\n      },\n      \"Customer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 100000\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"burgers\"\n          },\n          \"address\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"addresses\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Address\"\n            }\n          }\n        },\n        \"xml\": {\n          \"name\": \"customer\"\n        }\n      },\n      \"Address\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"street\": {\n            \"type\": \"string\",\n            \"example\": \"437 Lytton\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"example\": \"Palo Alto\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"example\": \"CA\"\n          },\n          \"zip\": {\n            \"type\": \"string\",\n            \"example\": \"94301\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"address\"\n        }\n      },\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Dogs\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"category\"\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"theUser\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"example\": \"John\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"example\": \"James\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"john@email.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"phone\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        },\n        \"xml\": {\n          \"name\": \"user\"\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"tag\"\n        }\n      },\n      \"Pet\": {\n        \"required\": [\n          \"name\",\n          \"photoUrls\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"doggie\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\",\n              \"xml\": {\n                \"name\": \"photoUrl\"\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\"\n            ]\n          }\n        },\n        \"xml\": {\n          \"name\": \"pet\"\n        }\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"##default\"\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"Pet\": {\n        \"description\": \"Pet object that needs to be added to the store\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        }\n      },\n      \"UserArray\": {\n        \"description\": \"List of user object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"petstore_auth\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"https://petstore3.swagger.io/oauth/authorize\",\n            \"scopes\": {\n              \"write:pets\": \"modify pets in your account\",\n              \"read:pets\": \"read your pets\",\n              \"jazz:jazzy\": \"enjoy more jazz.\"\n            }\n          }\n        }\n      },\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}",
      "modifiedSpec": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Swagger Petstore - OpenAPI 3.0, With More Jazz\",\n    \"description\": \"Jazz in the morning, Jazz in the evening.\",\n    \"termsOfService\": \"http://jazzyjazzjazzy.com\",\n    \"contact\": {\n      \"email\": \"jazz@swagger.io\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.11\"\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Swagger\",\n    \"url\": \"http://swagger.io\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/v3\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"pet\",\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"store\",\n      \"description\": \"Access to Petstore orders\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about user\"\n    },\n    {\n      \"name\": \"jazz\",\n      \"description\": \"Everyone loves jazz!\"\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Update an existing pet, but with Jazz\",\n        \"description\": \"Update an existing pet by Id\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"description\": \"Update an existent pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          },\n          \"418\": {\n            \"description\": \"Teapot Jazz\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"patch\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"description\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"description\": \"Create a new pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\",\n              \"jammy:jelly\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"available\",\n              \"enum\": [\n                \"available\",\n                \"pending\",\n                \"sold\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"int\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          },\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"description\": \"\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"description\": \"\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"additionalMetadata\",\n            \"in\": \"query\",\n            \"description\": \"Additional Metadata\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/octet-stream\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"description\": \"Place a new order in the store\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values will generate exceptions.\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of order that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c 1000. Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"description\": \"Created user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"description\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs user into the system, without jazz\",\n        \"description\": \"\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation, even if not jazzy\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out current logged in user session\",\n        \"description\": \"\",\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get user by user name\",\n        \"description\": \"\",\n        \"operationId\": \"getUserByNameAndNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Update an existent user in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"jazz\"\n        ],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUserButNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Order\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 198772\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"example\": 7\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"example\": \"approved\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\",\n              \"burgers\"\n            ]\n          },\n          \"complete\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"order\"\n        }\n      },\n      \"Customer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 100000\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"burgers\"\n          },\n          \"address\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"addresses\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Address\"\n            }\n          }\n        },\n        \"xml\": {\n          \"name\": \"customer\"\n        }\n      },\n      \"Address\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"street\": {\n            \"type\": \"string\",\n            \"example\": \"437 Lytton\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"example\": \"Palo Alto\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"example\": \"CA\"\n          },\n          \"zip\": {\n            \"type\": \"string\",\n            \"example\": \"94301\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"address\"\n        }\n      },\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Dogs\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"category\"\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"theUser\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"example\": \"John\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"example\": \"James\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"john@jazzclubinjazztown.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"example\": \"JAZZCLUB\"\n          },\n          \"phone\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        },\n        \"xml\": {\n          \"name\": \"user\"\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"tag\"\n        }\n      },\n      \"Pet\": {\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"jazz\": {\n            \"type\": \"string\",\n            \"example\": \"too much jazz! this is too much\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\",\n              \"xml\": {\n                \"name\": \"photoUrl\"\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\",\n              \"jazzedOut\"\n            ]\n          }\n        },\n        \"xml\": {\n          \"name\": \"pet\"\n        }\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"##default\"\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"Pet\": {\n        \"description\": \"Pet object that needs to be added to the store\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        }\n      },\n      \"UserArray\": {\n        \"description\": \"List of user object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"petstore_auth\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"https://petstore3.swagger.io/oauth/authorize\",\n            \"scopes\": {\n              \"write:pets\": \"modify pets in your account\",\n              \"read:pets\": \"read your pets\",\n              \"jazz:jazzy\": \"enjoy more jazz.\"\n            }\n          }\n        }\n      },\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}",
      "documentChanges": {
        "paths": {
          "pathItems": {
            "/pet": {
              "changes": [
                {
                  "context": {
                    "originalLine": 120,
                    "originalColumn": 15
                  },
                  "change": 5,
                  "property": "post",
                  "breaking": true
                },
                {
                  "context": {
                    "newLine": 120,
                    "newColumn": 16
                  },
                  "change": 2,
                  "property": "patch",
                  "breaking": false
                }
              ]
            },
            "/pet/findByTags": {
              "changes": [
                {
                  "context": {
                    "originalLine": 235,
                    "originalColumn": 14
                  },
                  "change": 5,
                  "property": "get",
                  "breaking": true
                },
                {
                  "context": {
                    "newLine": 236,
                    "newColumn": 15
                  },
                  "change": 2,
                  "property": "post",
                  "breaking": false
                }
              ]
            },
            "/pet/{petId}": {
              "changes": [
                {
                  "context": {
                    "originalLine": 398,
                    "originalColumn": 17
                  },
                  "change": 5,
                  "property": "delete",
                  "breaking": true
                }
              ]
            }
          }
        },
        "components": {
          "schemas": {
            "Pet": {
              "changes": [
                {
                  "context": {
                    "originalLine": 1105,
                    "originalColumn": 11
                  },
                  "change": 5,
                  "property": "required",
                  "original": "photoUrls",
                  "breaking": true
                },
                {
                  "context": {
                    "newLine": 1072,
                    "newColumn": 11
                  },
                  "change": 3,
                  "property": "properties",
                  "new": "jazz",
                  "breaking": false
                },
                {
                  "context": {
                    "originalLine": 1114,
                    "originalColumn": 11
                  },
                  "change": 4,
                  "property": "properties",
                  "original": "name",
                  "breaking": true
                }
              ],
              "properties": {
                "status": {
                  "changes": [
                    {
                      "context": {
                        "newLine": 1107,
                        "newColumn": 15
                      },
                      "change": 2,
                      "property": "enum",
                      "new": "jazzedOut",
                      "breaking": false
                    }
                  ]
                }
              }
            },
            "User": {
              "properties": {
                "email": {
                  "changes": [
                    {
                      "context": {
                        "originalLine": 1066,
                        "originalColumn": 24,
                        "newLine": 1025,
                        "newColumn": 24
                      },
                      "change": 1,
                      "property": "example",
                      "original": "john@email.com",
                      "new": "john@jazzclubinjazztown.com",
                      "breaking": false
                    }
                  ]
                },
                "password": {
                  "changes": [
                    {
                      "context": {
                        "originalLine": 1070,
                        "originalColumn": 24,
                        "newLine": 1029,
                        "newColumn": 24
                      },
                      "change": 1,
                      "property": "example",
                      "original": "12345",
                      "new": "JAZZCLUB",
                      "breaking": false
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "tree": {
        "titleString": "Document",
        "key": "root",
        "children": [
          {
            "titleString": "Paths",
            "key": "cc511c07-be75-49b4-bbb9-74f815eecbda",
            "totalChanges": 5,
            "breakingChanges": 3,
            "children": [
              {
                "titleString": "/pet/{petId}",
                "key": "1b25d1ae-5032-493e-9798-1b419c122c8c",
                "totalChanges": 1,
                "breakingChanges": 1,
                "children": [
                  {
                    "titleString": "delete",
                    "key": "b1bd95d1-ce67-422d-a118-989cb9a15500",
                    "isLeaf": true,
                    "selectable": true,
                    "change": {
                      "context": {
                        "originalLine": 398,
                        "originalColumn": 17
                      },
                      "change": 5,
                      "property": "delete",
                      "breaking": true
                    }
                  }
                ]
              },
              {
                "titleString": "/pet/findByTags",
                "key": "c01c06a4-f8a6-4a6f-8e66-8ac7911f47bc",
                "totalChanges": 2,
                "breakingChanges": 1,
                "children": [
                  {
                    "titleString": "get",
                    "key": "f6101041-c3d4-4625-9e05-77441ed767cc",
                    "isLeaf": true,
                    "selectable": true,
                    "change": {
                      "context": {
                        "originalLine": 235,
                        "originalColumn": 14
                      },
                      "change": 5,
                      "property": "get",
                      "breaking": true
                    }
                  },
                  {
                    "titleString": "post",
                    "key": "adc0c209-ad8e-4847-ad49-e49bf154b6fb",
                    "isLeaf": true,
                    "selectable": true,
                    "change": {
                      "context": {
                        "newLine": 236,
                        "newColumn": 15
                      },
                      "change": 2,
                      "property": "post",
                      "breaking": false
                    }
                  }
                ]
              },
              {
                "titleString": "/pet",
                "key": "825b9dac-8abe-4697-a738-91c78890d00b",
                "totalChanges": 2,
                "breakingChanges": 1,
                "children": [
                  {
                    "titleString": "post",
                    "key": "3d0c6933-b7fc-4e90-9b2a-96bed0199d97",
                    "isLeaf": true,
                    "selectable": true,
                    "change": {
                      "context": {
                        "originalLine": 120,
                        "originalColumn": 15
                      },
                      "change": 5,
                      "property": "post",
                      "breaking": true
                    }
                  },
                  {
                    "titleString": "patch",
                    "key": "d2763aef-30b6-43a9-8d6e-4d6f86a4c6b1",
                    "isLeaf": true,
                    "selectable": true,
                    "change": {
                      "context": {
                        "newLine": 120,
                        "newColumn": 16
                      },
                      "change": 2,
                      "property": "patch",
                      "breaking": false
                    }
                  }
                ]
              }
            ]
          },
          {
            "titleString": "Components",
            "key": "90b09268-dbd7-4b6c-bf38-acf43c3c95ed",
            "totalChanges": 6,
            "breakingChanges": 2,
            "children": [
              {
                "titleString": "User",
                "key": "59ed58b9-0cf6-48df-b42a-89da4be862b1",
                "totalChanges": 2,
                "children": [
                  {
                    "titleString": "email",
                    "key": "0eb00ded-6783-43fe-b937-ae7af5db0de6",
                    "totalChanges": 1,
                    "children": [
                      {
                        "titleString": "example",
                        "key": "0a0c2341-ae55-4a0b-8473-5b93658c5c7c",
                        "isLeaf": true,
                        "selectable": true,
                        "change": {
                          "context": {
                            "originalLine": 1066,
                            "originalColumn": 24,
                            "newLine": 1025,
                            "newColumn": 24
                          },
                          "change": 1,
                          "property": "example",
                          "original": "john@email.com",
                          "new": "john@jazzclubinjazztown.com",
                          "breaking": false
                        }
                      }
                    ]
                  },
                  {
                    "titleString": "password",
                    "key": "75e0be25-cab4-40f5-ac86-dcb58d3577fa",
                    "totalChanges": 1,
                    "children": [
                      {
                        "titleString": "example",
                        "key": "a716d678-cec6-4b58-ad87-e96b5b446c41",
                        "isLeaf": true,
                        "selectable": true,
                        "change": {
                          "context": {
                            "originalLine": 1070,
                            "originalColumn": 24,
                            "newLine": 1029,
                            "newColumn": 24
                          },
                          "change": 1,
                          "property": "example",
                          "original": "12345",
                          "new": "JAZZCLUB",
                          "breaking": false
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "titleString": "Pet",
                "key": "7f53a639-e804-4611-8435-bcd1558cb5e2",
                "totalChanges": 4,
                "breakingChanges": 2,
                "children": [
                  {
                    "titleString": "required",
                    "key": "43cfb3af-87b6-40ca-b938-794de42a0585",
                    "isLeaf": true,
                    "selectable": true,
                    "change": {
                      "context": {
                        "originalLine": 1105,
                        "originalColumn": 11
                      },
                      "change": 5,
                      "property": "required",
                      "original": "photoUrls",
                      "breaking": true
                    }
                  },
                  {
                    "titleString": "properties",
                    "key": "345d5359-6483-48c1-8350-a078cd4888c7",
                    "isLeaf": true,
                    "selectable": true,
                    "change": {
                      "context": {
                        "newLine": 1072,
                        "newColumn": 11
                      },
                      "change": 3,
                      "property": "properties",
                      "new": "jazz",
                      "breaking": false
                    }
                  },
                  {
                    "titleString": "properties",
                    "key": "f2b8c2d0-0e04-4f57-8990-28258653bebe",
                    "isLeaf": true,
                    "selectable": true,
                    "change": {
                      "context": {
                        "originalLine": 1114,
                        "originalColumn": 11
                      },
                      "change": 4,
                      "property": "properties",
                      "original": "name",
                      "breaking": true
                    }
                  },
                  {
                    "titleString": "status",
                    "key": "25f964c1-1911-4f89-a51d-a6fee3c139ff",
                    "totalChanges": 1,
                    "children": [
                      {
                        "titleString": "enum",
                        "key": "6ad246fa-8328-4591-927c-a9eba4c2c46c",
                        "isLeaf": true,
                        "selectable": true,
                        "change": {
                          "context": {
                            "newLine": 1107,
                            "newColumn": 15
                          },
                          "change": 2,
                          "property": "enum",
                          "new": "jazzedOut",
                          "breaking": false
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "graph": {
        "nodes": [
          {
            "id": "root",
            "text": "Document",
            "height": 25
          },
          {
            "id": "paths-d0fa4a",
            "disabled": true,
            "text": "paths",
            "height": 25,
            "width": 150
          },
          {
            "id": "/pet-3f17ea",
            "disabled": true,
            "text": "/pet",
            "height": 25,
            "width": 150
          },
          {
            "id": "post-0d937d",
            "text": "post",
            "height": 27,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 120,
                "originalColumn": 15
              },
              "change": 5,
              "property": "post",
              "breaking": true
            }
          },
          {
            "id": "patch-71cea6",
            "text": "patch",
            "height": 27,
            "width": 150,
            "data": {
              "context": {
                "newLine": 120,
                "newColumn": 16
              },
              "change": 2,
              "property": "patch",
              "breaking": false
            }
          },
          {
            "id": "/pet/{petid}-b76207",
            "disabled": true,
            "text": "/pet/{petid}",
            "height": 25,
            "width": 150
          },
          {
            "id": "delete-dd2258",
            "text": "delete",
            "height": 27,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 398,
                "originalColumn": 17
              },
              "change": 5,
              "property": "delete",
              "breaking": true
            }
          },
          {
            "id": "/pet/findbytags-75e085",
            "disabled": true,
            "text": "/pet/findbytags",
            "height": 25,
            "width": 150
          },
          {
            "id": "get-faf703",
            "text": "get",
            "height": 27,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 235,
                "originalColumn": 14
              },
              "change": 5,
              "property": "get",
              "breaking": true
            }
          },
          {
            "id": "post-05c48e",
            "text": "post",
            "height": 27,
            "width": 150,
            "data": {
              "context": {
                "newLine": 236,
                "newColumn": 15
              },
              "change": 2,
              "property": "post",
              "breaking": false
            }
          },
          {
            "id": "components-854db4",
            "disabled": true,
            "text": "components",
            "height": 25,
            "width": 150
          },
          {
            "id": "user-767eb1",
            "disabled": true,
            "text": "user",
            "height": 25,
            "width": 150
          },
          {
            "id": "email-d1552f",
            "disabled": true,
            "text": "email",
            "height": 25,
            "width": 150
          },
          {
            "id": "example-b054cd",
            "text": "example",
            "height": 45,
            "width": 230,
            "data": {
              "context": {
                "originalLine": 1066,
                "originalColumn": 24,
                "newLine": 1025,
                "newColumn": 24
              },
              "change": 1,
              "property": "example",
              "original": "john@email.com",
              "new": "john@jazzclubinjazztown.com",
              "breaking": false
            }
          },
          {
            "id": "password-f69461",
            "disabled": true,
            "text": "password",
            "height": 25,
            "width": 150
          },
          {
            "id": "example-5991e8",
            "text": "example",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 1070,
                "originalColumn": 24,
                "newLine": 1029,
                "newColumn": 24
              },
              "change": 1,
              "property": "example",
              "original": "12345",
              "new": "JAZZCLUB",
              "breaking": false
            }
          },
          {
            "id": "pet-5c355f",
            "disabled": true,
            "text": "pet",
            "height": 25,
            "width": 150
          },
          {
            "id": "required-27325e",
            "text": "required",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 1105,
                "originalColumn": 11
              },
              "change": 5,
              "property": "required",
              "original": "photoUrls",
              "breaking": true
            }
          },
          {
            "id": "properties-05ccba",
            "text": "properties",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 1072,
                "newColumn": 11
              },
              "change": 3,
              "property": "properties",
              "new": "jazz",
              "breaking": false
            }
          },
          {
            "id": "properties-beedf3",
            "text": "properties",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 1114,
                "originalColumn": 11
              },
              "change": 4,
              "property": "properties",
              "original": "name",
              "breaking": true
            }
          },
          {
            "id": "status-a4f12d",
            "disabled": true,
            "text": "status",
            "height": 25,
            "width": 150
          },
          {
            "id": "enum-c13718",
            "text": "enum",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 1107,
                "newColumn": 15
              },
              "change": 2,
              "property": "enum",
              "new": "jazzedOut",
              "breaking": false
            }
          }
        ],
        "edges": [
          {
            "id": "root-to-paths-d0fa4a",
            "from": "root",
            "to": "paths-d0fa4a"
          },
          {
            "id": "paths-d0fa4a-to-/pet-3f17ea",
            "from": "paths-d0fa4a",
            "to": "/pet-3f17ea"
          },
          {
            "id": "/pet-3f17ea-to-post-0d937d",
            "from": "/pet-3f17ea",
            "to": "post-0d937d"
          },
          {
            "id": "/pet-3f17ea-to-patch-71cea6",
            "from": "/pet-3f17ea",
            "to": "patch-71cea6"
          },
          {
            "id": "paths-d0fa4a-to-/pet/{petid}-b76207",
            "from": "paths-d0fa4a",
            "to": "/pet/{petid}-b76207"
          },
          {
            "id": "/pet/{petid}-b76207-to-delete-dd2258",
            "from": "/pet/{petid}-b76207",
            "to": "delete-dd2258"
          },
          {
            "id": "paths-d0fa4a-to-/pet/findbytags-75e085",
            "from": "paths-d0fa4a",
            "to": "/pet/findbytags-75e085"
          },
          {
            "id": "/pet/findbytags-75e085-to-get-faf703",
            "from": "/pet/findbytags-75e085",
            "to": "get-faf703"
          },
          {
            "id": "/pet/findbytags-75e085-to-post-05c48e",
            "from": "/pet/findbytags-75e085",
            "to": "post-05c48e"
          },
          {
            "id": "root-to-components-854db4",
            "from": "root",
            "to": "components-854db4"
          },
          {
            "id": "components-854db4-to-user-767eb1",
            "from": "components-854db4",
            "to": "user-767eb1"
          },
          {
            "id": "user-767eb1-to-email-d1552f",
            "from": "user-767eb1",
            "to": "email-d1552f"
          },
          {
            "id": "email-d1552f-to-example-b054cd",
            "from": "email-d1552f",
            "to": "example-b054cd"
          },
          {
            "id": "user-767eb1-to-password-f69461",
            "from": "user-767eb1",
            "to": "password-f69461"
          },
          {
            "id": "password-f69461-to-example-5991e8",
            "from": "password-f69461",
            "to": "example-5991e8"
          },
          {
            "id": "components-854db4-to-pet-5c355f",
            "from": "components-854db4",
            "to": "pet-5c355f"
          },
          {
            "id": "pet-5c355f-to-required-27325e",
            "from": "pet-5c355f",
            "to": "required-27325e"
          },
          {
            "id": "pet-5c355f-to-properties-05ccba",
            "from": "pet-5c355f",
            "to": "properties-05ccba"
          },
          {
            "id": "pet-5c355f-to-properties-beedf3",
            "from": "pet-5c355f",
            "to": "properties-beedf3"
          },
          {
            "id": "pet-5c355f-to-status-a4f12d",
            "from": "pet-5c355f",
            "to": "status-a4f12d"
          },
          {
            "id": "status-a4f12d-to-enum-c13718",
            "from": "status-a4f12d",
            "to": "enum-c13718"
          }
        ]
      },
      "statistics": {
        "total": 11,
        "totalBreaking": 5,
        "added": 4,
        "modified": 2,
        "removed": 5,
        "breakingAdded": 0,
        "breakingModified": 0,
        "breakingRemoved": 5,
        "commit": {
          "date": "Sun, 4 Dec 2022 10:39:10 -3900",
          "message": "Deleting some things, doing a ton of damage.\n",
          "author": "Dave Shanley",
          "authorEmail": "dave@quobix.com",
          "hash": "89e8d64ac465dfd4cd11c20606df54a40943cca0"
        }
      }
    },
    {
      "originalSpec": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Swagger Petstore - OpenAPI 3.0, With More Jazz\",\n    \"description\": \"Jazz in the morning, Jazz in the evening.\",\n    \"termsOfService\": \"http://jazzyjazzjazzy.com\",\n    \"contact\": {\n      \"email\": \"jazz@swagger.io\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.11\"\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Swagger\",\n    \"url\": \"http://swagger.io\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/v3\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"pet\",\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"store\",\n      \"description\": \"Access to Petstore orders\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about user\"\n    },\n    {\n      \"name\": \"jazz\",\n      \"description\": \"Everyone loves jazz!\"\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Update an existing pet, but with Jazz\",\n        \"description\": \"Update an existing pet by Id\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"description\": \"Update an existent pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          },\n          \"418\": {\n            \"description\": \"Teapot Jazz\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"description\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"description\": \"Create a new pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"available\",\n              \"enum\": [\n                \"available\",\n                \"pending\",\n                \"sold\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid status value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"int\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          },\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"description\": \"\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Deletes a pet\",\n        \"description\": \"\",\n        \"operationId\": \"deletePet\",\n        \"parameters\": [\n          {\n            \"name\": \"api_key\",\n            \"in\": \"header\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"Pet id to delete\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid pet value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"description\": \"\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"additionalMetadata\",\n            \"in\": \"query\",\n            \"description\": \"Additional Metadata\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/octet-stream\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"description\": \"Place a new order in the store\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values will generate exceptions.\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of order that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c 1000. Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"description\": \"Created user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"description\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs user into the system\",\n        \"description\": \"\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out current logged in user session\",\n        \"description\": \"\",\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get user by user name\",\n        \"description\": \"\",\n        \"operationId\": \"getUserByName\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Update an existent user in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Order\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 198772\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"example\": 7\n          },\n          \"shipDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"example\": \"approved\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\"\n            ]\n          },\n          \"complete\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"order\"\n        }\n      },\n      \"Customer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 100000\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"fehguy\"\n          },\n          \"address\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"addresses\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Address\"\n            }\n          }\n        },\n        \"xml\": {\n          \"name\": \"customer\"\n        }\n      },\n      \"Address\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"street\": {\n            \"type\": \"string\",\n            \"example\": \"437 Lytton\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"example\": \"Palo Alto\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"example\": \"CA\"\n          },\n          \"zip\": {\n            \"type\": \"string\",\n            \"example\": \"94301\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"address\"\n        }\n      },\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Dogs\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"category\"\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"theUser\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"example\": \"John\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"example\": \"James\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"john@email.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"phone\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        },\n        \"xml\": {\n          \"name\": \"user\"\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"tag\"\n        }\n      },\n      \"Pet\": {\n        \"required\": [\n          \"name\",\n          \"photoUrls\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"doggie\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\",\n              \"xml\": {\n                \"name\": \"photoUrl\"\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\"\n            ]\n          }\n        },\n        \"xml\": {\n          \"name\": \"pet\"\n        }\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"##default\"\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"Pet\": {\n        \"description\": \"Pet object that needs to be added to the store\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        }\n      },\n      \"UserArray\": {\n        \"description\": \"List of user object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"petstore_auth\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"https://petstore3.swagger.io/oauth/authorize\",\n            \"scopes\": {\n              \"write:pets\": \"modify pets in your account\",\n              \"read:pets\": \"read your pets\",\n              \"jazz:jazzy\": \"enjoy more jazz.\"\n            }\n          }\n        }\n      },\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}",
      "modifiedSpec": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Swagger Petstore - OpenAPI 3.0, With More Jazz\",\n    \"description\": \"Jazz in the morning, Jazz in the evening.\",\n    \"termsOfService\": \"http://jazzyjazzjazzy.com\",\n    \"contact\": {\n      \"email\": \"jazz@swagger.io\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.11\"\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Swagger\",\n    \"url\": \"http://swagger.io\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/v3\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"pet\",\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"store\",\n      \"description\": \"Access to Petstore orders\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about user\"\n    },\n    {\n      \"name\": \"jazz\",\n      \"description\": \"Everyone loves jazz!\"\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Update an existing pet, but with Jazz\",\n        \"description\": \"Update an existing pet by Id\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"description\": \"Update an existent pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          },\n          \"418\": {\n            \"description\": \"Teapot Jazz\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"description\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"description\": \"Create a new pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"available\",\n              \"enum\": [\n                \"available\",\n                \"pending\",\n                \"sold\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"int\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          },\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"description\": \"\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Deletes a pet\",\n        \"description\": \"\",\n        \"operationId\": \"deletePet\",\n        \"parameters\": [\n          {\n            \"name\": \"api_key\",\n            \"in\": \"header\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"Pet id to delete\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid pet value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"description\": \"\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"additionalMetadata\",\n            \"in\": \"query\",\n            \"description\": \"Additional Metadata\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/octet-stream\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"description\": \"Place a new order in the store\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values will generate exceptions.\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of order that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c 1000. Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"description\": \"Created user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"description\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs user into the system, without jazz\",\n        \"description\": \"\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation, even if not jazzy\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out current logged in user session\",\n        \"description\": \"\",\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get user by user name\",\n        \"description\": \"\",\n        \"operationId\": \"getUserByNameAndNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Update an existent user in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"jazz\"\n        ],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUserButNotJazz\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Order\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 198772\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"example\": 7\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"example\": \"approved\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\",\n              \"burgers\"\n            ]\n          },\n          \"complete\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"order\"\n        }\n      },\n      \"Customer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 100000\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"burgers\"\n          },\n          \"address\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"addresses\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Address\"\n            }\n          }\n        },\n        \"xml\": {\n          \"name\": \"customer\"\n        }\n      },\n      \"Address\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"street\": {\n            \"type\": \"string\",\n            \"example\": \"437 Lytton\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"example\": \"Palo Alto\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"example\": \"CA\"\n          },\n          \"zip\": {\n            \"type\": \"string\",\n            \"example\": \"94301\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"address\"\n        }\n      },\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Dogs\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"category\"\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"theUser\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"example\": \"John\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"example\": \"James\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"john@email.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"phone\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        },\n        \"xml\": {\n          \"name\": \"user\"\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"tag\"\n        }\n      },\n      \"Pet\": {\n        \"required\": [\n          \"name\",\n          \"photoUrls\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"doggie\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\",\n              \"xml\": {\n                \"name\": \"photoUrl\"\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\"\n            ]\n          }\n        },\n        \"xml\": {\n          \"name\": \"pet\"\n        }\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"##default\"\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"Pet\": {\n        \"description\": \"Pet object that needs to be added to the store\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        }\n      },\n      \"UserArray\": {\n        \"description\": \"List of user object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"petstore_auth\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"https://petstore3.swagger.io/oauth/authorize\",\n            \"scopes\": {\n              \"write:pets\": \"modify pets in your account\",\n              \"read:pets\": \"read your pets\",\n              \"jazz:jazzy\": \"enjoy more jazz.\"\n            }\n          }\n        }\n      },\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}",
      "documentChanges": {
        "paths": {
          "pathItems": {
            "/pet": {
              "post": {
                "responses": {
                  "changes": [
                    {
                      "context": {
                        "originalLine": 164,
                        "originalColumn": 18
                      },
                      "change": 4,
                      "property": "codes",
                      "original": "405",
                      "breaking": true
                    }
                  ]
                }
              }
            },
            "/pet/findByStatus": {
              "get": {
                "responses": {
                  "changes": [
                    {
                      "context": {
                        "originalLine": 226,
                        "originalColumn": 18
                      },
                      "change": 4,
                      "property": "codes",
                      "original": "400",
                      "breaking": true
                    }
                  ]
                }
              }
            },
            "/user/login": {
              "get": {
                "changes": [
                  {
                    "context": {
                      "originalLine": 750,
                      "originalColumn": 20,
                      "newLine": 744,
                      "newColumn": 20
                    },
                    "change": 1,
                    "property": "summary",
                    "original": "Logs user into the system",
                    "new": "Logs user into the system, without jazz",
                    "breaking": false
                  }
                ],
                "parameters": [
                  {
                    "schemas": {
                      "changes": [
                        {
                          "context": {
                            "originalLine": 760,
                            "originalColumn": 23,
                            "newLine": 754,
                            "newColumn": 23
                          },
                          "change": 1,
                          "property": "type",
                          "original": "string",
                          "new": "integer",
                          "breaking": true
                        }
                      ]
                    }
                  },
                  {
                    "changes": [
                      {
                        "context": {
                          "originalLine": 767,
                          "originalColumn": 25,
                          "newLine": 761,
                          "newColumn": 25
                        },
                        "change": 1,
                        "property": "required",
                        "original": "false",
                        "new": "true",
                        "breaking": true
                      }
                    ]
                  }
                ],
                "responses": {
                  "response": {
                    "200": {
                      "changes": [
                        {
                          "context": {
                            "originalLine": 775,
                            "originalColumn": 28,
                            "newLine": 769,
                            "newColumn": 28
                          },
                          "change": 1,
                          "property": "description",
                          "original": "successful operation",
                          "new": "successful operation, even if not jazzy",
                          "breaking": false
                        }
                      ]
                    }
                  }
                }
              }
            },
            "/user/{username}": {
              "get": {
                "changes": [
                  {
                    "context": {
                      "originalLine": 834,
                      "originalColumn": 24,
                      "newLine": 828,
                      "newColumn": 24
                    },
                    "change": 1,
                    "property": "operationId",
                    "original": "getUserByName",
                    "new": "getUserByNameAndNotJazz",
                    "breaking": true
                  }
                ]
              },
              "delete": {
                "changes": [
                  {
                    "context": {
                      "originalLine": 916,
                      "originalColumn": 11
                    },
                    "change": 5,
                    "property": "tags",
                    "original": "user",
                    "breaking": false
                  },
                  {
                    "context": {
                      "newLine": 910,
                      "newColumn": 11
                    },
                    "change": 2,
                    "property": "tags",
                    "new": "jazz",
                    "breaking": false
                  },
                  {
                    "context": {
                      "originalLine": 920,
                      "originalColumn": 24,
                      "newLine": 914,
                      "newColumn": 24
                    },
                    "change": 1,
                    "property": "operationId",
                    "original": "deleteUser",
                    "new": "deleteUserButNotJazz",
                    "breaking": true
                  }
                ]
              }
            }
          }
        },
        "components": {
          "schemas": {
            "Customer": {
              "properties": {
                "username": {
                  "changes": [
                    {
                      "context": {
                        "originalLine": 995,
                        "originalColumn": 24,
                        "newLine": 986,
                        "newColumn": 24
                      },
                      "change": 1,
                      "property": "example",
                      "original": "fehguy",
                      "new": "burgers",
                      "breaking": false
                    }
                  ]
                }
              }
            },
            "Order": {
              "changes": [
                {
                  "context": {
                    "originalLine": 963,
                    "originalColumn": 11
                  },
                  "change": 4,
                  "property": "properties",
                  "original": "shipDate",
                  "breaking": true
                }
              ],
              "properties": {
                "status": {
                  "changes": [
                    {
                      "context": {
                        "newLine": 965,
                        "newColumn": 15
                      },
                      "change": 2,
                      "property": "enum",
                      "new": "burgers",
                      "breaking": false
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "tree": {
        "titleString": "Document",
        "key": "root",
        "children": [
          {
            "titleString": "Paths",
            "key": "90844b35-bb2e-4e42-8c46-779a274dab7b",
            "totalChanges": 10,
            "breakingChanges": 6,
            "children": [
              {
                "titleString": "/pet/findByStatus",
                "key": "38c7364c-0dcd-472d-b93e-37a1aec4003b",
                "totalChanges": 1,
                "breakingChanges": 1,
                "children": [
                  {
                    "titleString": "GET",
                    "key": "5414291e-11de-43d5-9371-b45e6311cb64",
                    "totalChanges": 1,
                    "breakingChanges": 1,
                    "children": [
                      {
                        "titleString": "Responses",
                        "key": "5cc5d00d-924d-4510-bef9-cedd365fa5da",
                        "totalChanges": 1,
                        "breakingChanges": 1,
                        "children": [
                          {
                            "titleString": "400",
                            "key": "ee05f91d-f7c4-4668-a75e-5aa564a784a0",
                            "isLeaf": true,
                            "selectable": true,
                            "change": {
                              "context": {
                                "originalLine": 226,
                                "originalColumn": 18
                              },
                              "change": 4,
                              "property": "codes",
                              "original": "400",
                              "breaking": true
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "titleString": "/user/login",
                "key": "cb5db68a-26bb-4152-abe6-7bcf3d4ca1d1",
                "totalChanges": 4,
                "breakingChanges": 2,
                "children": [
                  {
                    "titleString": "GET",
                    "key": "9b701b26-3695-46d4-bae5-83a090c01034",
                    "totalChanges": 4,
                    "breakingChanges": 2,
                    "children": [
                      {
                        "titleString": "summary",
                        "key": "b6c6a8f6-55a2-43eb-b11b-c991ad624480",
                        "isLeaf": true,
                        "selectable": true,
                        "change": {
                          "context": {
                            "originalLine": 750,
                            "originalColumn": 20,
                            "newLine": 744,
                            "newColumn": 20
                          },
                          "change": 1,
                          "property": "summary",
                          "original": "Logs user into the system",
                          "new": "Logs user into the system, without jazz",
                          "breaking": false
                        }
                      },
                      {
                        "titleString": "Parameters",
                        "key": "0e7fe4f2-db06-455f-8f13-2fb6488bfcce",
                        "children": [
                          {
                            "titleString": "Schema",
                            "key": "b2d9f3aa-667b-4407-9fc9-3c58c970d2d2",
                            "totalChanges": 1,
                            "breakingChanges": 1,
                            "children": [
                              {
                                "titleString": "type",
                                "key": "0f04f720-b463-4cec-aa89-945eb62944f1",
                                "isLeaf": true,
                                "selectable": true,
                                "change": {
                                  "context": {
                                    "originalLine": 760,
                                    "originalColumn": 23,
                                    "newLine": 754,
                                    "newColumn": 23
                                  },
                                  "change": 1,
                                  "property": "type",
                                  "original": "string",
                                  "new": "integer",
                                  "breaking": true
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "titleString": "Parameters",
                        "key": "a20bfd1f-155d-4cf9-a2ea-20410d0c4397",
                        "children": [
                          {
                            "titleString": "required",
                            "key": "50f078c8-1340-422a-8116-ac82bde6857f",
                            "isLeaf": true,
                            "selectable": true,
                            "change": {
                              "context": {
                                "originalLine": 767,
                                "originalColumn": 25,
                                "newLine": 761,
                                "newColumn": 25
                              },
                              "change": 1,
                              "property": "required",
                              "original": "false",
                              "new": "true",
                              "breaking": true
                            }
                          }
                        ]
                      },
                      {
                        "titleString": "Responses",
                        "key": "aba18d7f-f59c-4e9f-bf0f-79bf90779559",
                        "totalChanges": 1,
                        "children": [
                          {
                            "titleString": "200",
                            "key": "c0ab8ce1-b47d-4a32-a129-1d142f96ad06",
                            "totalChanges": 1,
                            "children": [
                              {
                                "titleString": "description",
                                "key": "9af9e752-6714-4797-9b10-710ec3c64ba0",
                                "isLeaf": true,
                                "selectable": true,
                                "change": {
                                  "context": {
                                    "originalLine": 775,
                                    "originalColumn": 28,
                                    "newLine": 769,
                                    "newColumn": 28
                                  },
                                  "change": 1,
                                  "property": "description",
                                  "original": "successful operation",
                                  "new": "successful operation, even if not jazzy",
                                  "breaking": false
                                }
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "titleString": "/user/{username}",
                "key": "66fd1825-a21f-431d-89a5-59aa808954a0",
                "totalChanges": 4,
                "breakingChanges": 2,
                "children": [
                  {
                    "titleString": "GET",
                    "key": "38d9c9d4-b158-41aa-b124-f49ad682a399",
                    "totalChanges": 1,
                    "breakingChanges": 1,
                    "children": [
                      {
                        "titleString": "operationId",
                        "key": "68c0aaf8-2deb-4482-a8e1-a77a093eea5d",
                        "isLeaf": true,
                        "selectable": true,
                        "change": {
                          "context": {
                            "originalLine": 834,
                            "originalColumn": 24,
                            "newLine": 828,
                            "newColumn": 24
                          },
                          "change": 1,
                          "property": "operationId",
                          "original": "getUserByName",
                          "new": "getUserByNameAndNotJazz",
                          "breaking": true
                        }
                      }
                    ]
                  },
                  {
                    "titleString": "DELETE",
                    "key": "d5e63051-9c4d-4180-9556-4046f62be817",
                    "totalChanges": 3,
                    "breakingChanges": 1,
                    "children": [
                      {
                        "titleString": "tags",
                        "key": "ab4e0d07-6207-445f-97e4-15d2697d9e16",
                        "isLeaf": true,
                        "selectable": true,
                        "change": {
                          "context": {
                            "originalLine": 916,
                            "originalColumn": 11
                          },
                          "change": 5,
                          "property": "tags",
                          "original": "user",
                          "breaking": false
                        }
                      },
                      {
                        "titleString": "tags",
                        "key": "250522e8-65fe-4e56-99bf-148bbc8abe98",
                        "isLeaf": true,
                        "selectable": true,
                        "change": {
                          "context": {
                            "newLine": 910,
                            "newColumn": 11
                          },
                          "change": 2,
                          "property": "tags",
                          "new": "jazz",
                          "breaking": false
                        }
                      },
                      {
                        "titleString": "operationId",
                        "key": "cf6caf1e-b7a2-4088-8e88-7f17d6327e47",
                        "isLeaf": true,
                        "selectable": true,
                        "change": {
                          "context": {
                            "originalLine": 920,
                            "originalColumn": 24,
                            "newLine": 914,
                            "newColumn": 24
                          },
                          "change": 1,
                          "property": "operationId",
                          "original": "deleteUser",
                          "new": "deleteUserButNotJazz",
                          "breaking": true
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "titleString": "/pet",
                "key": "d4a00ddb-e247-4337-9b8a-1a94376597e2",
                "totalChanges": 1,
                "breakingChanges": 1,
                "children": [
                  {
                    "titleString": "POST",
                    "key": "20499306-edec-433e-9451-aad0e31165b8",
                    "totalChanges": 1,
                    "breakingChanges": 1,
                    "children": [
                      {
                        "titleString": "Responses",
                        "key": "ada523f5-eb58-498b-a925-de6e1b69949b",
                        "totalChanges": 1,
                        "breakingChanges": 1,
                        "children": [
                          {
                            "titleString": "405",
                            "key": "623e53da-94dc-41b1-915a-57bb3f56096a",
                            "isLeaf": true,
                            "selectable": true,
                            "change": {
                              "context": {
                                "originalLine": 164,
                                "originalColumn": 18
                              },
                              "change": 4,
                              "property": "codes",
                              "original": "405",
                              "breaking": true
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "titleString": "Components",
            "key": "d9c09d7c-7b99-4241-9f54-4cd7c01926f5",
            "totalChanges": 3,
            "breakingChanges": 1,
            "children": [
              {
                "titleString": "Customer",
                "key": "5b3b3f2f-8838-489e-a3bd-70357542ed42",
                "totalChanges": 1,
                "children": [
                  {
                    "titleString": "username",
                    "key": "601dcd95-2fab-4b9c-a9ac-8ecbe9ac0778",
                    "totalChanges": 1,
                    "children": [
                      {
                        "titleString": "example",
                        "key": "7a1abaa4-33b6-4fb5-bc6f-0beb902ed781",
                        "isLeaf": true,
                        "selectable": true,
                        "change": {
                          "context": {
                            "originalLine": 995,
                            "originalColumn": 24,
                            "newLine": 986,
                            "newColumn": 24
                          },
                          "change": 1,
                          "property": "example",
                          "original": "fehguy",
                          "new": "burgers",
                          "breaking": false
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "titleString": "Order",
                "key": "08797b88-1f70-49d7-b642-75ad318757fa",
                "totalChanges": 2,
                "breakingChanges": 1,
                "children": [
                  {
                    "titleString": "properties",
                    "key": "ab66a751-14d3-4a01-8cfe-3400d27365de",
                    "isLeaf": true,
                    "selectable": true,
                    "change": {
                      "context": {
                        "originalLine": 963,
                        "originalColumn": 11
                      },
                      "change": 4,
                      "property": "properties",
                      "original": "shipDate",
                      "breaking": true
                    }
                  },
                  {
                    "titleString": "status",
                    "key": "1eb72693-37e8-4f2a-bd9b-ad740b7e9d4c",
                    "totalChanges": 1,
                    "children": [
                      {
                        "titleString": "enum",
                        "key": "dfba8fc9-9493-4b64-81af-928e7c6fb528",
                        "isLeaf": true,
                        "selectable": true,
                        "change": {
                          "context": {
                            "newLine": 965,
                            "newColumn": 15
                          },
                          "change": 2,
                          "property": "enum",
                          "new": "burgers",
                          "breaking": false
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "graph": {
        "nodes": [
          {
            "id": "root",
            "text": "Document",
            "height": 25
          },
          {
            "id": "paths-2a6c9d",
            "disabled": true,
            "text": "paths",
            "height": 25,
            "width": 150
          },
          {
            "id": "/pet/findbystatus-a7f781",
            "disabled": true,
            "text": "/pet/findbystatus",
            "height": 25,
            "width": 150
          },
          {
            "id": "get-93a33e",
            "disabled": true,
            "text": "get",
            "height": 25,
            "width": 150
          },
          {
            "id": "responses-b5c182",
            "disabled": true,
            "text": "responses",
            "height": 25,
            "width": 150
          },
          {
            "id": "codes-eb0bd1",
            "text": "codes",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 226,
                "originalColumn": 18
              },
              "change": 4,
              "property": "codes",
              "original": "400",
              "breaking": true
            }
          },
          {
            "id": "/user/login-e031e1",
            "disabled": true,
            "text": "/user/login",
            "height": 25,
            "width": 150
          },
          {
            "id": "get-9b9f34",
            "disabled": true,
            "text": "get",
            "height": 25,
            "width": 150
          },
          {
            "id": "summary-fccd15",
            "text": "summary",
            "height": 45,
            "width": 250,
            "data": {
              "context": {
                "originalLine": 750,
                "originalColumn": 20,
                "newLine": 744,
                "newColumn": 20
              },
              "change": 1,
              "property": "summary",
              "original": "Logs user into the system",
              "new": "Logs user into the system, without jazz",
              "breaking": false
            }
          },
          {
            "id": "parameters-67c7fc",
            "disabled": true,
            "text": "parameters",
            "height": 25,
            "width": 150
          },
          {
            "id": "schema-a8efe1",
            "disabled": true,
            "text": "schema",
            "height": 25,
            "width": 150
          },
          {
            "id": "type-fbb138",
            "text": "type",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 760,
                "originalColumn": 23,
                "newLine": 754,
                "newColumn": 23
              },
              "change": 1,
              "property": "type",
              "original": "string",
              "new": "integer",
              "breaking": true
            }
          },
          {
            "id": "parameters-540702",
            "disabled": true,
            "text": "parameters",
            "height": 25,
            "width": 150
          },
          {
            "id": "required-f28d98",
            "text": "required",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 767,
                "originalColumn": 25,
                "newLine": 761,
                "newColumn": 25
              },
              "change": 1,
              "property": "required",
              "original": "false",
              "new": "true",
              "breaking": true
            }
          },
          {
            "id": "responses-7ab25f",
            "disabled": true,
            "text": "responses",
            "height": 25,
            "width": 150
          },
          {
            "id": "200-9df2c0",
            "disabled": true,
            "text": "200",
            "height": 25,
            "width": 150
          },
          {
            "id": "description-679f5a",
            "text": "description",
            "height": 45,
            "width": 250,
            "data": {
              "context": {
                "originalLine": 775,
                "originalColumn": 28,
                "newLine": 769,
                "newColumn": 28
              },
              "change": 1,
              "property": "description",
              "original": "successful operation",
              "new": "successful operation, even if not jazzy",
              "breaking": false
            }
          },
          {
            "id": "/user/{username}-cf72d2",
            "disabled": true,
            "text": "/user/{username}",
            "height": 25,
            "width": 150
          },
          {
            "id": "get-411536",
            "disabled": true,
            "text": "get",
            "height": 25,
            "width": 150
          },
          {
            "id": "operationid-467b88",
            "text": "operationId",
            "height": 45,
            "width": 190,
            "data": {
              "context": {
                "originalLine": 834,
                "originalColumn": 24,
                "newLine": 828,
                "newColumn": 24
              },
              "change": 1,
              "property": "operationId",
              "original": "getUserByName",
              "new": "getUserByNameAndNotJazz",
              "breaking": true
            }
          },
          {
            "id": "delete-706d89",
            "disabled": true,
            "text": "delete",
            "height": 25,
            "width": 150
          },
          {
            "id": "tags-1210f5",
            "text": "tags",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 916,
                "originalColumn": 11
              },
              "change": 5,
              "property": "tags",
              "original": "user",
              "breaking": false
            }
          },
          {
            "id": "tags-ebd908",
            "text": "tags",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 910,
                "newColumn": 11
              },
              "change": 2,
              "property": "tags",
              "new": "jazz",
              "breaking": false
            }
          },
          {
            "id": "operationid-b24609",
            "text": "operationId",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 920,
                "originalColumn": 24,
                "newLine": 914,
                "newColumn": 24
              },
              "change": 1,
              "property": "operationId",
              "original": "deleteUser",
              "new": "deleteUserButNotJazz",
              "breaking": true
            }
          },
          {
            "id": "/pet-b93897",
            "disabled": true,
            "text": "/pet",
            "height": 25,
            "width": 150
          },
          {
            "id": "post-684d6b",
            "disabled": true,
            "text": "post",
            "height": 25,
            "width": 150
          },
          {
            "id": "responses-88f465",
            "disabled": true,
            "text": "responses",
            "height": 25,
            "width": 150
          },
          {
            "id": "codes-383911",
            "text": "codes",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 164,
                "originalColumn": 18
              },
              "change": 4,
              "property": "codes",
              "original": "405",
              "breaking": true
            }
          },
          {
            "id": "components-5b4903",
            "disabled": true,
            "text": "components",
            "height": 25,
            "width": 150
          },
          {
            "id": "order-aa7355",
            "disabled": true,
            "text": "order",
            "height": 25,
            "width": 150
          },
          {
            "id": "properties-4d57c5",
            "text": "properties",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 963,
                "originalColumn": 11
              },
              "change": 4,
              "property": "properties",
              "original": "shipDate",
              "breaking": true
            }
          },
          {
            "id": "status-543532",
            "disabled": true,
            "text": "status",
            "height": 25,
            "width": 150
          },
          {
            "id": "enum-d197cc",
            "text": "enum",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 965,
                "newColumn": 15
              },
              "change": 2,
              "property": "enum",
              "new": "burgers",
              "breaking": false
            }
          },
          {
            "id": "customer-fe9a21",
            "disabled": true,
            "text": "customer",
            "height": 25,
            "width": 150
          },
          {
            "id": "username-677dd1",
            "disabled": true,
            "text": "username",
            "height": 25,
            "width": 150
          },
          {
            "id": "example-59f0b3",
            "text": "example",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 995,
                "originalColumn": 24,
                "newLine": 986,
                "newColumn": 24
              },
              "change": 1,
              "property": "example",
              "original": "fehguy",
              "new": "burgers",
              "breaking": false
            }
          }
        ],
        "edges": [
          {
            "id": "root-to-paths-2a6c9d",
            "from": "root",
            "to": "paths-2a6c9d"
          },
          {
            "id": "paths-2a6c9d-to-/pet/findbystatus-a7f781",
            "from": "paths-2a6c9d",
            "to": "/pet/findbystatus-a7f781"
          },
          {
            "id": "/pet/findbystatus-a7f781-to-get-93a33e",
            "from": "/pet/findbystatus-a7f781",
            "to": "get-93a33e"
          },
          {
            "id": "get-93a33e-to-responses-b5c182",
            "from": "get-93a33e",
            "to": "responses-b5c182"
          },
          {
            "id": "responses-b5c182-to-codes-eb0bd1",
            "from": "responses-b5c182",
            "to": "codes-eb0bd1"
          },
          {
            "id": "paths-2a6c9d-to-/user/login-e031e1",
            "from": "paths-2a6c9d",
            "to": "/user/login-e031e1"
          },
          {
            "id": "/user/login-e031e1-to-get-9b9f34",
            "from": "/user/login-e031e1",
            "to": "get-9b9f34"
          },
          {
            "id": "get-9b9f34-to-summary-fccd15",
            "from": "get-9b9f34",
            "to": "summary-fccd15"
          },
          {
            "id": "get-9b9f34-to-parameters-67c7fc",
            "from": "get-9b9f34",
            "to": "parameters-67c7fc"
          },
          {
            "id": "parameters-67c7fc-to-schema-a8efe1",
            "from": "parameters-67c7fc",
            "to": "schema-a8efe1"
          },
          {
            "id": "schema-a8efe1-to-type-fbb138",
            "from": "schema-a8efe1",
            "to": "type-fbb138"
          },
          {
            "id": "get-9b9f34-to-parameters-540702",
            "from": "get-9b9f34",
            "to": "parameters-540702"
          },
          {
            "id": "parameters-540702-to-required-f28d98",
            "from": "parameters-540702",
            "to": "required-f28d98"
          },
          {
            "id": "get-9b9f34-to-responses-7ab25f",
            "from": "get-9b9f34",
            "to": "responses-7ab25f"
          },
          {
            "id": "responses-7ab25f-to-200-9df2c0",
            "from": "responses-7ab25f",
            "to": "200-9df2c0"
          },
          {
            "id": "200-9df2c0-to-description-679f5a",
            "from": "200-9df2c0",
            "to": "description-679f5a"
          },
          {
            "id": "paths-2a6c9d-to-/user/{username}-cf72d2",
            "from": "paths-2a6c9d",
            "to": "/user/{username}-cf72d2"
          },
          {
            "id": "/user/{username}-cf72d2-to-get-411536",
            "from": "/user/{username}-cf72d2",
            "to": "get-411536"
          },
          {
            "id": "get-411536-to-operationid-467b88",
            "from": "get-411536",
            "to": "operationid-467b88"
          },
          {
            "id": "/user/{username}-cf72d2-to-delete-706d89",
            "from": "/user/{username}-cf72d2",
            "to": "delete-706d89"
          },
          {
            "id": "delete-706d89-to-tags-1210f5",
            "from": "delete-706d89",
            "to": "tags-1210f5"
          },
          {
            "id": "delete-706d89-to-tags-ebd908",
            "from": "delete-706d89",
            "to": "tags-ebd908"
          },
          {
            "id": "delete-706d89-to-operationid-b24609",
            "from": "delete-706d89",
            "to": "operationid-b24609"
          },
          {
            "id": "paths-2a6c9d-to-/pet-b93897",
            "from": "paths-2a6c9d",
            "to": "/pet-b93897"
          },
          {
            "id": "/pet-b93897-to-post-684d6b",
            "from": "/pet-b93897",
            "to": "post-684d6b"
          },
          {
            "id": "post-684d6b-to-responses-88f465",
            "from": "post-684d6b",
            "to": "responses-88f465"
          },
          {
            "id": "responses-88f465-to-codes-383911",
            "from": "responses-88f465",
            "to": "codes-383911"
          },
          {
            "id": "root-to-components-5b4903",
            "from": "root",
            "to": "components-5b4903"
          },
          {
            "id": "components-5b4903-to-order-aa7355",
            "from": "components-5b4903",
            "to": "order-aa7355"
          },
          {
            "id": "order-aa7355-to-properties-4d57c5",
            "from": "order-aa7355",
            "to": "properties-4d57c5"
          },
          {
            "id": "order-aa7355-to-status-543532",
            "from": "order-aa7355",
            "to": "status-543532"
          },
          {
            "id": "status-543532-to-enum-d197cc",
            "from": "status-543532",
            "to": "enum-d197cc"
          },
          {
            "id": "components-5b4903-to-customer-fe9a21",
            "from": "components-5b4903",
            "to": "customer-fe9a21"
          },
          {
            "id": "customer-fe9a21-to-username-677dd1",
            "from": "customer-fe9a21",
            "to": "username-677dd1"
          },
          {
            "id": "username-677dd1-to-example-59f0b3",
            "from": "username-677dd1",
            "to": "example-59f0b3"
          }
        ]
      },
      "statistics": {
        "total": 13,
        "totalBreaking": 7,
        "added": 2,
        "modified": 7,
        "removed": 4,
        "breakingAdded": 0,
        "breakingModified": 4,
        "breakingRemoved": 3,
        "commit": {
          "date": "Sun, 4 Dec 2022 10:35:44 -3500",
          "message": "Deleting a bunch of stuff is always fun\n\nWho knows what is breaking or not.\n",
          "author": "Dave Shanley",
          "authorEmail": "dave@quobix.com",
          "hash": "010bbe9a143343d75df7872bb99132d95580a687"
        }
      }
    },
    {
      "originalSpec": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Swagger Petstore - OpenAPI 3.0\",\n    \"description\": \"This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\\nSwagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\\n\\nSome useful links:\\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)\",\n    \"termsOfService\": \"http://swagger.io/terms/\",\n    \"contact\": {\n      \"email\": \"apiteam@swagger.io\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.11\"\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Swagger\",\n    \"url\": \"http://swagger.io\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/v3\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"pet\",\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"store\",\n      \"description\": \"Access to Petstore orders\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about user\"\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Update an existing pet\",\n        \"description\": \"Update an existing pet by Id\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"description\": \"Update an existent pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"description\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"description\": \"Create a new pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"available\",\n              \"enum\": [\n                \"available\",\n                \"pending\",\n                \"sold\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid status value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          },\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"description\": \"\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Deletes a pet\",\n        \"description\": \"\",\n        \"operationId\": \"deletePet\",\n        \"parameters\": [\n          {\n            \"name\": \"api_key\",\n            \"in\": \"header\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"Pet id to delete\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid pet value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"description\": \"\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"additionalMetadata\",\n            \"in\": \"query\",\n            \"description\": \"Additional Metadata\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/octet-stream\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"description\": \"Place a new order in the store\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values will generate exceptions.\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of order that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c 1000. Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"description\": \"Created user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"description\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs user into the system\",\n        \"description\": \"\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out current logged in user session\",\n        \"description\": \"\",\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get user by user name\",\n        \"description\": \"\",\n        \"operationId\": \"getUserByName\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Update an existent user in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Order\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 198772\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"example\": 7\n          },\n          \"shipDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"example\": \"approved\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\"\n            ]\n          },\n          \"complete\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"order\"\n        }\n      },\n      \"Customer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 100000\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"fehguy\"\n          },\n          \"address\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"addresses\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Address\"\n            }\n          }\n        },\n        \"xml\": {\n          \"name\": \"customer\"\n        }\n      },\n      \"Address\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"street\": {\n            \"type\": \"string\",\n            \"example\": \"437 Lytton\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"example\": \"Palo Alto\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"example\": \"CA\"\n          },\n          \"zip\": {\n            \"type\": \"string\",\n            \"example\": \"94301\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"address\"\n        }\n      },\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Dogs\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"category\"\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"theUser\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"example\": \"John\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"example\": \"James\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"john@email.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"phone\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        },\n        \"xml\": {\n          \"name\": \"user\"\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"tag\"\n        }\n      },\n      \"Pet\": {\n        \"required\": [\n          \"name\",\n          \"photoUrls\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"doggie\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\",\n              \"xml\": {\n                \"name\": \"photoUrl\"\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\"\n            ]\n          }\n        },\n        \"xml\": {\n          \"name\": \"pet\"\n        }\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"##default\"\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"Pet\": {\n        \"description\": \"Pet object that needs to be added to the store\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        }\n      },\n      \"UserArray\": {\n        \"description\": \"List of user object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"petstore_auth\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"https://petstore3.swagger.io/oauth/authorize\",\n            \"scopes\": {\n              \"write:pets\": \"modify pets in your account\",\n              \"read:pets\": \"read your pets\"\n            }\n          }\n        }\n      },\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}",
      "modifiedSpec": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Swagger Petstore - OpenAPI 3.0, With More Jazz\",\n    \"description\": \"Jazz in the morning, Jazz in the evening.\",\n    \"termsOfService\": \"http://jazzyjazzjazzy.com\",\n    \"contact\": {\n      \"email\": \"jazz@swagger.io\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.11\"\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Swagger\",\n    \"url\": \"http://swagger.io\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/api/v3\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"pet\",\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"store\",\n      \"description\": \"Access to Petstore orders\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"http://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about user\"\n    },\n    {\n      \"name\": \"jazz\",\n      \"description\": \"Everyone loves jazz!\"\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Update an existing pet, but with Jazz\",\n        \"description\": \"Update an existing pet by Id\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"description\": \"Update an existent pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          },\n          \"418\": {\n            \"description\": \"Teapot Jazz\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"description\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"description\": \"Create a new pet in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"available\",\n              \"enum\": [\n                \"available\",\n                \"pending\",\n                \"sold\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid status value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\",\n          \"jazz\"\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": false,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"int\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          },\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"description\": \"\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Name of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status of pet that needs to be updated\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Deletes a pet\",\n        \"description\": \"\",\n        \"operationId\": \"deletePet\",\n        \"parameters\": [\n          {\n            \"name\": \"api_key\",\n            \"in\": \"header\",\n            \"description\": \"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"Pet id to delete\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid pet value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"description\": \"\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"additionalMetadata\",\n            \"in\": \"query\",\n            \"description\": \"Additional Metadata\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/octet-stream\": {\n              \"schema\": {\n                \"type\": \"string\",\n                \"format\": \"binary\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"description\": \"Place a new order in the store\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values will generate exceptions.\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of order that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003c 1000. Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"description\": \"Created user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"description\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs user into the system\",\n        \"description\": \"\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out current logged in user session\",\n        \"description\": \"\",\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get user by user name\",\n        \"description\": \"\",\n        \"operationId\": \"getUserByName\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Update an existent user in the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Order\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 198772\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"example\": 7\n          },\n          \"shipDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"example\": \"approved\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\"\n            ]\n          },\n          \"complete\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"order\"\n        }\n      },\n      \"Customer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 100000\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"fehguy\"\n          },\n          \"address\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"addresses\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Address\"\n            }\n          }\n        },\n        \"xml\": {\n          \"name\": \"customer\"\n        }\n      },\n      \"Address\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"street\": {\n            \"type\": \"string\",\n            \"example\": \"437 Lytton\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"example\": \"Palo Alto\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"example\": \"CA\"\n          },\n          \"zip\": {\n            \"type\": \"string\",\n            \"example\": \"94301\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"address\"\n        }\n      },\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Dogs\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"category\"\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"example\": \"theUser\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"example\": \"John\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"example\": \"James\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"john@email.com\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"phone\": {\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"example\": 1\n          }\n        },\n        \"xml\": {\n          \"name\": \"user\"\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"tag\"\n        }\n      },\n      \"Pet\": {\n        \"required\": [\n          \"name\",\n          \"photoUrls\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 10\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"doggie\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\",\n              \"xml\": {\n                \"name\": \"photoUrl\"\n              }\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\"\n            ]\n          }\n        },\n        \"xml\": {\n          \"name\": \"pet\"\n        }\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"##default\"\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"Pet\": {\n        \"description\": \"Pet object that needs to be added to the store\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        }\n      },\n      \"UserArray\": {\n        \"description\": \"List of user object\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"petstore_auth\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"https://petstore3.swagger.io/oauth/authorize\",\n            \"scopes\": {\n              \"write:pets\": \"modify pets in your account\",\n              \"read:pets\": \"read your pets\",\n              \"jazz:jazzy\": \"enjoy more jazz.\"\n            }\n          }\n        }\n      },\n      \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}",
      "documentChanges": {
        "info": {
          "changes": [
            {
              "context": {
                "originalLine": 4,
                "originalColumn": 14,
                "newLine": 4,
                "newColumn": 14
              },
              "change": 1,
              "property": "title",
              "original": "Swagger Petstore - OpenAPI 3.0",
              "new": "Swagger Petstore - OpenAPI 3.0, With More Jazz",
              "breaking": false
            },
            {
              "context": {
                "originalLine": 5,
                "originalColumn": 20,
                "newLine": 5,
                "newColumn": 20
              },
              "change": 1,
              "property": "description",
              "original": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
              "new": "Jazz in the morning, Jazz in the evening.",
              "breaking": false
            },
            {
              "context": {
                "originalLine": 6,
                "originalColumn": 23,
                "newLine": 6,
                "newColumn": 23
              },
              "change": 1,
              "property": "termsOfService",
              "original": "http://swagger.io/terms/",
              "new": "http://jazzyjazzjazzy.com",
              "breaking": false
            }
          ],
          "contact": {
            "changes": [
              {
                "context": {
                  "originalLine": 8,
                  "originalColumn": 16,
                  "newLine": 8,
                  "newColumn": 16
                },
                "change": 1,
                "property": "email",
                "original": "apiteam@swagger.io",
                "new": "jazz@swagger.io",
                "breaking": false
              }
            ]
          }
        },
        "paths": {
          "pathItems": {
            "/pet": {
              "put": {
                "changes": [
                  {
                    "context": {
                      "newLine": 56,
                      "newColumn": 11
                    },
                    "change": 2,
                    "property": "tags",
                    "new": "jazz",
                    "breaking": false
                  },
                  {
                    "context": {
                      "originalLine": 53,
                      "originalColumn": 20,
                      "newLine": 58,
                      "newColumn": 20
                    },
                    "change": 1,
                    "property": "summary",
                    "original": "Update an existing pet",
                    "new": "Update an existing pet, but with Jazz",
                    "breaking": false
                  }
                ],
                "responses": {
                  "changes": [
                    {
                      "context": {
                        "newLine": 107,
                        "newColumn": 18
                      },
                      "change": 3,
                      "property": "codes",
                      "new": "418",
                      "breaking": false
                    }
                  ]
                },
                "requestBodies": {
                  "changes": [
                    {
                      "context": {
                        "originalLine": 75,
                        "originalColumn": 23,
                        "newLine": 80,
                        "newColumn": 23
                      },
                      "change": 1,
                      "property": "required",
                      "original": "true",
                      "new": "false",
                      "breaking": true
                    }
                  ]
                }
              }
            },
            "/pet/findByTags": {
              "get": {
                "changes": [
                  {
                    "context": {
                      "newLine": 244,
                      "newColumn": 11
                    },
                    "change": 2,
                    "property": "tags",
                    "new": "jazz",
                    "breaking": false
                  }
                ],
                "parameters": [
                  {
                    "schemas": {
                      "items": {
                        "changes": [
                          {
                            "context": {
                              "originalLine": 250,
                              "originalColumn": 25,
                              "newLine": 259,
                              "newColumn": 25
                            },
                            "change": 1,
                            "property": "type",
                            "original": "string",
                            "new": "int",
                            "breaking": true
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "tags": [
          {
            "changes": [
              {
                "context": {
                  "newLine": 46,
                  "newColumn": 5
                },
                "change": 3,
                "property": "jazz",
                "breaking": false
              }
            ]
          }
        ],
        "components": {
          "securitySchemes": {
            "petstore_auth": {
              "oAuthFlow": {
                "implicit": {
                  "changes": [
                    {
                      "context": {
                        "newLine": 1223,
                        "newColumn": 29
                      },
                      "change": 3,
                      "property": "scopes",
                      "new": "enjoy more jazz.",
                      "breaking": false
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "tree": {
        "titleString": "Document",
        "key": "root",
        "children": [
          {
            "titleString": "Info",
            "key": "582fb047-4a8c-4e35-962b-fee9dff3a694",
            "totalChanges": 4,
            "children": [
              {
                "titleString": "title",
                "key": "5e789595-0880-4440-aa19-a72d24587a88",
                "isLeaf": true,
                "selectable": true,
                "change": {
                  "context": {
                    "originalLine": 4,
                    "originalColumn": 14,
                    "newLine": 4,
                    "newColumn": 14
                  },
                  "change": 1,
                  "property": "title",
                  "original": "Swagger Petstore - OpenAPI 3.0",
                  "new": "Swagger Petstore - OpenAPI 3.0, With More Jazz",
                  "breaking": false
                }
              },
              {
                "titleString": "description",
                "key": "e7a3234d-f929-48d6-a178-7b323e073b25",
                "isLeaf": true,
                "selectable": true,
                "change": {
                  "context": {
                    "originalLine": 5,
                    "originalColumn": 20,
                    "newLine": 5,
                    "newColumn": 20
                  },
                  "change": 1,
                  "property": "description",
                  "original": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
                  "new": "Jazz in the morning, Jazz in the evening.",
                  "breaking": false
                }
              },
              {
                "titleString": "termsOfService",
                "key": "d2789a41-f2da-4a97-b98a-4a25fca340d2",
                "isLeaf": true,
                "selectable": true,
                "change": {
                  "context": {
                    "originalLine": 6,
                    "originalColumn": 23,
                    "newLine": 6,
                    "newColumn": 23
                  },
                  "change": 1,
                  "property": "termsOfService",
                  "original": "http://swagger.io/terms/",
                  "new": "http://jazzyjazzjazzy.com",
                  "breaking": false
                }
              },
              {
                "titleString": "Contact",
                "key": "7031238a-11e1-4b91-84e4-feb410869fa7",
                "totalChanges": 1,
                "children": [
                  {
                    "titleString": "email",
                    "key": "556f679d-767e-40b5-ae04-03ffc30232f3",
                    "isLeaf": true,
                    "selectable": true,
                    "change": {
                      "context": {
                        "originalLine": 8,
                        "originalColumn": 16,
                        "newLine": 8,
                        "newColumn": 16
                      },
                      "change": 1,
                      "property": "email",
                      "original": "apiteam@swagger.io",
                      "new": "jazz@swagger.io",
                      "breaking": false
                    }
                  }
                ]
              }
            ]
          },
          {
            "titleString": "Paths",
            "key": "e3d07eef-61bc-4cca-9b24-9cb39b813650",
            "totalChanges": 6,
            "breakingChanges": 2,
            "children": [
              {
                "titleString": "/pet",
                "key": "233e6273-6bf6-408d-a354-fa7b96276c03",
                "totalChanges": 4,
                "breakingChanges": 1,
                "children": [
                  {
                    "titleString": "PUT",
                    "key": "9d91155f-9078-4713-bf43-6d5200795327",
                    "totalChanges": 4,
                    "breakingChanges": 1,
                    "children": [
                      {
                        "titleString": "tags",
                        "key": "39db2df4-8f01-4c3e-92cb-d3ee2260f425",
                        "isLeaf": true,
                        "selectable": true,
                        "change": {
                          "context": {
                            "newLine": 56,
                            "newColumn": 11
                          },
                          "change": 2,
                          "property": "tags",
                          "new": "jazz",
                          "breaking": false
                        }
                      },
                      {
                        "titleString": "summary",
                        "key": "f2b6b85a-f3e0-4812-953e-3288883f880d",
                        "isLeaf": true,
                        "selectable": true,
                        "change": {
                          "context": {
                            "originalLine": 53,
                            "originalColumn": 20,
                            "newLine": 58,
                            "newColumn": 20
                          },
                          "change": 1,
                          "property": "summary",
                          "original": "Update an existing pet",
                          "new": "Update an existing pet, but with Jazz",
                          "breaking": false
                        }
                      },
                      {
                        "titleString": "Responses",
                        "key": "912349de-3b45-43ae-adb5-921980e85b51",
                        "totalChanges": 1,
                        "children": [
                          {
                            "titleString": "418",
                            "key": "78085a6a-8c39-4a26-9845-8db317081a5e",
                            "isLeaf": true,
                            "selectable": true,
                            "change": {
                              "context": {
                                "newLine": 107,
                                "newColumn": 18
                              },
                              "change": 3,
                              "property": "codes",
                              "new": "418",
                              "breaking": false
                            }
                          }
                        ]
                      },
                      {
                        "titleString": "Requestbody",
                        "key": "44751889-9743-417d-8181-4b6f561e1139",
                        "totalChanges": 1,
                        "breakingChanges": 1,
                        "children": [
                          {
                            "titleString": "required",
                            "key": "7d1c8c21-e07e-4a28-a2e7-24b375ede0e8",
                            "isLeaf": true,
                            "selectable": true,
                            "change": {
                              "context": {
                                "originalLine": 75,
                                "originalColumn": 23,
                                "newLine": 80,
                                "newColumn": 23
                              },
                              "change": 1,
                              "property": "required",
                              "original": "true",
                              "new": "false",
                              "breaking": true
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "titleString": "/pet/findByTags",
                "key": "3118aca5-6fdd-4773-8f48-e30471c98956",
                "totalChanges": 2,
                "breakingChanges": 1,
                "children": [
                  {
                    "titleString": "GET",
                    "key": "3c6a2f89-fc9b-4f23-9a6a-cc23bfbf57ff",
                    "totalChanges": 2,
                    "breakingChanges": 1,
                    "children": [
                      {
                        "titleString": "tags",
                        "key": "23ad5527-02e6-4716-8832-ca4714a3419c",
                        "isLeaf": true,
                        "selectable": true,
                        "change": {
                          "context": {
                            "newLine": 244,
                            "newColumn": 11
                          },
                          "change": 2,
                          "property": "tags",
                          "new": "jazz",
                          "breaking": false
                        }
                      },
                      {
                        "titleString": "Parameters",
                        "key": "c5a043d9-a6c7-4843-be53-518c3464d86c",
                        "children": [
                          {
                            "titleString": "Schema",
                            "key": "f5204d36-5815-4aaa-8582-3adb96969afd",
                            "totalChanges": 1,
                            "breakingChanges": 1,
                            "children": [
                              {
                                "titleString": "Schema",
                                "key": "dc49d184-b8d7-4e87-ac83-5ab352c4c27d",
                                "totalChanges": 1,
                                "breakingChanges": 1,
                                "children": [
                                  {
                                    "titleString": "type",
                                    "key": "42af282a-e09c-4c51-9dc0-821675be5e57",
                                    "isLeaf": true,
                                    "selectable": true,
                                    "change": {
                                      "context": {
                                        "originalLine": 250,
                                        "originalColumn": 25,
                                        "newLine": 259,
                                        "newColumn": 25
                                      },
                                      "change": 1,
                                      "property": "type",
                                      "original": "string",
                                      "new": "int",
                                      "breaking": true
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "titleString": "Tags",
            "key": "a552155f-2216-448f-ad32-a082a8cba93d",
            "children": [
              {
                "titleString": "jazz",
                "key": "8828f7ab-5165-42f0-921e-dbf6006a86d0",
                "isLeaf": true,
                "selectable": true,
                "change": {
                  "context": {
                    "newLine": 46,
                    "newColumn": 5
                  },
                  "change": 3,
                  "property": "jazz",
                  "breaking": false
                }
              }
            ]
          },
          {
            "titleString": "Components",
            "key": "b378538c-2f30-4851-87de-fe90c40afdf3",
            "totalChanges": 1,
            "children": [
              {
                "titleString": "petstore_auth",
                "key": "d999bd3f-7eee-4448-ad27-67ec6ce3f2ef",
                "totalChanges": 1,
                "children": [
                  {
                    "titleString": "oAuth Flows",
                    "key": "41e1d520-33e3-4f69-949f-d833de5e31aa",
                    "totalChanges": 1,
                    "children": [
                      {
                        "titleString": "oAuth Flow",
                        "key": "a7ab5cd0-2b6d-4ee9-8b21-ab22eed91eba",
                        "totalChanges": 1,
                        "children": [
                          {
                            "titleString": "scopes",
                            "key": "6d80ceb6-dd9e-449e-811a-1a9ddd9d9926",
                            "isLeaf": true,
                            "selectable": true,
                            "change": {
                              "context": {
                                "newLine": 1223,
                                "newColumn": 29
                              },
                              "change": 3,
                              "property": "scopes",
                              "new": "enjoy more jazz.",
                              "breaking": false
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "graph": {
        "nodes": [
          {
            "id": "root",
            "text": "Document",
            "height": 25
          },
          {
            "id": "info-8b440f",
            "disabled": true,
            "text": "info",
            "height": 25,
            "width": 150
          },
          {
            "id": "title-f3a534",
            "text": "title",
            "height": 45,
            "width": 250,
            "data": {
              "context": {
                "originalLine": 4,
                "originalColumn": 14,
                "newLine": 4,
                "newColumn": 14
              },
              "change": 1,
              "property": "title",
              "original": "Swagger Petstore - OpenAPI 3.0",
              "new": "Swagger Petstore - OpenAPI 3.0, With More Jazz",
              "breaking": false
            }
          },
          {
            "id": "description-fafb57",
            "text": "description",
            "height": 45,
            "width": 250,
            "data": {
              "context": {
                "originalLine": 5,
                "originalColumn": 20,
                "newLine": 5,
                "newColumn": 20
              },
              "change": 1,
              "property": "description",
              "original": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
              "new": "Jazz in the morning, Jazz in the evening.",
              "breaking": false
            }
          },
          {
            "id": "termsofservice-06e7ec",
            "text": "termsOfService",
            "height": 45,
            "width": 250,
            "data": {
              "context": {
                "originalLine": 6,
                "originalColumn": 23,
                "newLine": 6,
                "newColumn": 23
              },
              "change": 1,
              "property": "termsOfService",
              "original": "http://swagger.io/terms/",
              "new": "http://jazzyjazzjazzy.com",
              "breaking": false
            }
          },
          {
            "id": "contact-bdb1d7",
            "disabled": true,
            "text": "contact",
            "height": 25,
            "width": 150
          },
          {
            "id": "email-236d93",
            "text": "email",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 8,
                "originalColumn": 16,
                "newLine": 8,
                "newColumn": 16
              },
              "change": 1,
              "property": "email",
              "original": "apiteam@swagger.io",
              "new": "jazz@swagger.io",
              "breaking": false
            }
          },
          {
            "id": "paths-e25e0c",
            "disabled": true,
            "text": "paths",
            "height": 25,
            "width": 150
          },
          {
            "id": "/pet-bff597",
            "disabled": true,
            "text": "/pet",
            "height": 25,
            "width": 150
          },
          {
            "id": "put-58042b",
            "disabled": true,
            "text": "put",
            "height": 25,
            "width": 150
          },
          {
            "id": "tags-2a95a6",
            "text": "tags",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 56,
                "newColumn": 11
              },
              "change": 2,
              "property": "tags",
              "new": "jazz",
              "breaking": false
            }
          },
          {
            "id": "summary-3fb672",
            "text": "summary",
            "height": 45,
            "width": 250,
            "data": {
              "context": {
                "originalLine": 53,
                "originalColumn": 20,
                "newLine": 58,
                "newColumn": 20
              },
              "change": 1,
              "property": "summary",
              "original": "Update an existing pet",
              "new": "Update an existing pet, but with Jazz",
              "breaking": false
            }
          },
          {
            "id": "responses-cce810",
            "disabled": true,
            "text": "responses",
            "height": 25,
            "width": 150
          },
          {
            "id": "codes-6d6f9b",
            "text": "codes",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 107,
                "newColumn": 18
              },
              "change": 3,
              "property": "codes",
              "new": "418",
              "breaking": false
            }
          },
          {
            "id": "requestbody-9b8d8d",
            "disabled": true,
            "text": "requestbody",
            "height": 25,
            "width": 150
          },
          {
            "id": "required-45e20a",
            "text": "required",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 75,
                "originalColumn": 23,
                "newLine": 80,
                "newColumn": 23
              },
              "change": 1,
              "property": "required",
              "original": "true",
              "new": "false",
              "breaking": true
            }
          },
          {
            "id": "/pet/findbytags-dcdd6e",
            "disabled": true,
            "text": "/pet/findbytags",
            "height": 25,
            "width": 150
          },
          {
            "id": "get-064029",
            "disabled": true,
            "text": "get",
            "height": 25,
            "width": 150
          },
          {
            "id": "tags-1a6866",
            "text": "tags",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 244,
                "newColumn": 11
              },
              "change": 2,
              "property": "tags",
              "new": "jazz",
              "breaking": false
            }
          },
          {
            "id": "parameters-ed3da2",
            "disabled": true,
            "text": "parameters",
            "height": 25,
            "width": 150
          },
          {
            "id": "schema-6e3efa",
            "disabled": true,
            "text": "schema",
            "height": 25,
            "width": 150
          },
          {
            "id": "schema-d9e6de",
            "disabled": true,
            "text": "schema",
            "height": 25,
            "width": 150
          },
          {
            "id": "type-7ad091",
            "text": "type",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "originalLine": 250,
                "originalColumn": 25,
                "newLine": 259,
                "newColumn": 25
              },
              "change": 1,
              "property": "type",
              "original": "string",
              "new": "int",
              "breaking": true
            }
          },
          {
            "id": "tags-dd352d",
            "disabled": true,
            "text": "tags",
            "height": 25,
            "width": 150
          },
          {
            "id": "jazz-d8f4ab",
            "text": "jazz",
            "height": 27,
            "width": 150,
            "data": {
              "context": {
                "newLine": 46,
                "newColumn": 5
              },
              "change": 3,
              "property": "jazz",
              "breaking": false
            }
          },
          {
            "id": "components-e0d2c4",
            "disabled": true,
            "text": "components",
            "height": 25,
            "width": 150
          },
          {
            "id": "petstore_auth-7e1897",
            "disabled": true,
            "text": "petstore_auth",
            "height": 25,
            "width": 150
          },
          {
            "id": "oauth flows-ee249a",
            "disabled": true,
            "text": "oauth flows",
            "height": 25,
            "width": 150
          },
          {
            "id": "oauth flow-621058",
            "disabled": true,
            "text": "oauth flow",
            "height": 25,
            "width": 150
          },
          {
            "id": "scopes-cbac1b",
            "text": "scopes",
            "height": 45,
            "width": 150,
            "data": {
              "context": {
                "newLine": 1223,
                "newColumn": 29
              },
              "change": 3,
              "property": "scopes",
              "new": "enjoy more jazz.",
              "breaking": false
            }
          }
        ],
        "edges": [
          {
            "id": "root-to-info-8b440f",
            "from": "root",
            "to": "info-8b440f"
          },
          {
            "id": "info-8b440f-to-title-f3a534",
            "from": "info-8b440f",
            "to": "title-f3a534"
          },
          {
            "id": "info-8b440f-to-description-fafb57",
            "from": "info-8b440f",
            "to": "description-fafb57"
          },
          {
            "id": "info-8b440f-to-termsofservice-06e7ec",
            "from": "info-8b440f",
            "to": "termsofservice-06e7ec"
          },
          {
            "id": "info-8b440f-to-contact-bdb1d7",
            "from": "info-8b440f",
            "to": "contact-bdb1d7"
          },
          {
            "id": "contact-bdb1d7-to-email-236d93",
            "from": "contact-bdb1d7",
            "to": "email-236d93"
          },
          {
            "id": "root-to-paths-e25e0c",
            "from": "root",
            "to": "paths-e25e0c"
          },
          {
            "id": "paths-e25e0c-to-/pet-bff597",
            "from": "paths-e25e0c",
            "to": "/pet-bff597"
          },
          {
            "id": "/pet-bff597-to-put-58042b",
            "from": "/pet-bff597",
            "to": "put-58042b"
          },
          {
            "id": "put-58042b-to-tags-2a95a6",
            "from": "put-58042b",
            "to": "tags-2a95a6"
          },
          {
            "id": "put-58042b-to-summary-3fb672",
            "from": "put-58042b",
            "to": "summary-3fb672"
          },
          {
            "id": "put-58042b-to-responses-cce810",
            "from": "put-58042b",
            "to": "responses-cce810"
          },
          {
            "id": "responses-cce810-to-codes-6d6f9b",
            "from": "responses-cce810",
            "to": "codes-6d6f9b"
          },
          {
            "id": "put-58042b-to-requestbody-9b8d8d",
            "from": "put-58042b",
            "to": "requestbody-9b8d8d"
          },
          {
            "id": "requestbody-9b8d8d-to-required-45e20a",
            "from": "requestbody-9b8d8d",
            "to": "required-45e20a"
          },
          {
            "id": "paths-e25e0c-to-/pet/findbytags-dcdd6e",
            "from": "paths-e25e0c",
            "to": "/pet/findbytags-dcdd6e"
          },
          {
            "id": "/pet/findbytags-dcdd6e-to-get-064029",
            "from": "/pet/findbytags-dcdd6e",
            "to": "get-064029"
          },
          {
            "id": "get-064029-to-tags-1a6866",
            "from": "get-064029",
            "to": "tags-1a6866"
          },
          {
            "id": "get-064029-to-parameters-ed3da2",
            "from": "get-064029",
            "to": "parameters-ed3da2"
          },
          {
            "id": "parameters-ed3da2-to-schema-6e3efa",
            "from": "parameters-ed3da2",
            "to": "schema-6e3efa"
          },
          {
            "id": "schema-6e3efa-to-schema-d9e6de",
            "from": "schema-6e3efa",
            "to": "schema-d9e6de"
          },
          {
            "id": "schema-d9e6de-to-type-7ad091",
            "from": "schema-d9e6de",
            "to": "type-7ad091"
          },
          {
            "id": "root-to-tags-dd352d",
            "from": "root",
            "to": "tags-dd352d"
          },
          {
            "id": "tags-dd352d-to-jazz-d8f4ab",
            "from": "tags-dd352d",
            "to": "jazz-d8f4ab"
          },
          {
            "id": "root-to-components-e0d2c4",
            "from": "root",
            "to": "components-e0d2c4"
          },
          {
            "id": "components-e0d2c4-to-petstore_auth-7e1897",
            "from": "components-e0d2c4",
            "to": "petstore_auth-7e1897"
          },
          {
            "id": "petstore_auth-7e1897-to-oauth flows-ee249a",
            "from": "petstore_auth-7e1897",
            "to": "oauth flows-ee249a"
          },
          {
            "id": "oauth flows-ee249a-to-oauth flow-621058",
            "from": "oauth flows-ee249a",
            "to": "oauth flow-621058"
          },
          {
            "id": "oauth flow-621058-to-scopes-cbac1b",
            "from": "oauth flow-621058",
            "to": "scopes-cbac1b"
          }
        ]
      },
      "statistics": {
        "total": 12,
        "totalBreaking": 2,
        "added": 5,
        "modified": 7,
        "removed": 0,
        "breakingAdded": 0,
        "breakingModified": 2,
        "breakingRemoved": 0,
        "commit": {
          "date": "Sun, 4 Dec 2022 10:31:32 -3100",
          "message": "Do you like Jazz? Lets Jazz up this spec a little.\n\nLots of jazz.\n",
          "author": "Dave Shanley",
          "authorEmail": "dave@quobix.com",
          "hash": "7e9906d44ac239f82c471463d4211b3e04811d85"
        }
      }
    }
  ]
}